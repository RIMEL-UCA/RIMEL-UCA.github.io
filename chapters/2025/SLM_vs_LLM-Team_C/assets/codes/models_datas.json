[
    {
        "_id": "67473fdfe77182ac96417565",
        "id": "Qwen/QwQ-32B-Preview",
        "modelId": "Qwen/QwQ-32B-Preview",
        "author": "Qwen",
        "sha": "1032e81cb936c486aae1d33da75b2fbcd5deed4a",
        "lastModified": "2024-11-29T06:57:37.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "safetensors",
            "qwen2",
            "text-generation",
            "chat",
            "conversational",
            "en",
            "arxiv:2407.10671",
            "base_model:Qwen/Qwen2.5-32B-Instruct",
            "base_model:finetune:Qwen/Qwen2.5-32B-Instruct",
            "license:apache-2.0",
            "autotrain_compatible",
            "text-generation-inference",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 26706,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 900,
        "model-index": null,
        "config": {
            "architectures": [
                "Qwen2ForCausalLM"
            ],
            "model_type": "qwen2",
            "tokenizer_config": {
                "bos_token": null,
                "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are a helpful and harmless assistant. You are Qwen developed by Alibaba. You should think step-by-step.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are a helpful and harmless assistant. You are Qwen developed by Alibaba. You should think step-by-step.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
                "eos_token": "<|im_end|>",
                "pad_token": "<|endoftext|>",
                "unk_token": null
            }
        },
        "cardData": {
            "license": "apache-2.0",
            "license_link": "https://huggingface.co/Qwen/QwQ-32B-Preview/blob/main/LICENSE",
            "language": [
                "en"
            ],
            "base_model": "Qwen/Qwen2.5-32B-Instruct",
            "tags": [
                "chat"
            ],
            "library_name": "transformers"
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "pipeline_tag": "text-generation",
            "processor": "AutoTokenizer"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "merges.txt"
            },
            {
                "rfilename": "model-00001-of-00017.safetensors"
            },
            {
                "rfilename": "model-00002-of-00017.safetensors"
            },
            {
                "rfilename": "model-00003-of-00017.safetensors"
            },
            {
                "rfilename": "model-00004-of-00017.safetensors"
            },
            {
                "rfilename": "model-00005-of-00017.safetensors"
            },
            {
                "rfilename": "model-00006-of-00017.safetensors"
            },
            {
                "rfilename": "model-00007-of-00017.safetensors"
            },
            {
                "rfilename": "model-00008-of-00017.safetensors"
            },
            {
                "rfilename": "model-00009-of-00017.safetensors"
            },
            {
                "rfilename": "model-00010-of-00017.safetensors"
            },
            {
                "rfilename": "model-00011-of-00017.safetensors"
            },
            {
                "rfilename": "model-00012-of-00017.safetensors"
            },
            {
                "rfilename": "model-00013-of-00017.safetensors"
            },
            {
                "rfilename": "model-00014-of-00017.safetensors"
            },
            {
                "rfilename": "model-00015-of-00017.safetensors"
            },
            {
                "rfilename": "model-00016-of-00017.safetensors"
            },
            {
                "rfilename": "model-00017-of-00017.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            },
            {
                "rfilename": "vocab.json"
            }
        ],
        "spaces": [
            "akhaliq/anychat",
            "featherless-ai/try-this-model",
            "Sg-at-srijan-us-kg/QwQ-32B-Preview",
            "llamameta/Fix-qwen-QwQ-32B-Preview-improvement",
            "llamameta/google-gemini-web-search",
            "Yunkady/Qwen-QwQ-32B-Preview",
            "Lap1official/API",
            "yasserrmd/SimplifyPro",
            "sunbath/Qwen-QwQ-32B-Preview",
            "llamameta/Achieving-AGI-artificial-general-intelligence",
            "Stivnejejdjdj/Qwen-QwQ-32B-Preview",
            "ddf123/QwQ_Test",
            "ddf123/1",
            "Lyte/QwQ-32-Preview-GGUF-Demo",
            "marsroverHG/Qwen-QwQ-32B-Preview",
            "Arikvillamar11/Qwen-QwQ-32B-Preview",
            "NISCHAYKR/Qwen-QwQ-32B-Preview",
            "thw023824/Qwen-QwQ-32B-Preview",
            "dkisb/Qwen-QwQ-32B-Preview",
            "jersuxs/Qwen-QwQ-32B-Preview",
            "AliArshad/BreastCare",
            "Nymbo/QwQ-32B-Preview-Serverless",
            "Kaiid/Qwen-QwQ-32B-Preview",
            "lfttfl/Qwen-QwQ-32B-Preview",
            "Andresbaraka/Qwen-QwQ-32B-Preview",
            "ryanzhao/Qwen-QwQ-32B-Preview",
            "Initairu/Qwen-QwQ-32B-Preview",
            "AliArshad/BreastCare1",
            "Yesman8000/Qwen-QwQ-32B-Preview",
            "varunbilluri/Qwen-QwQ-32B-Preview",
            "affandes/try-zephyr",
            "NikoWHV/Qwen-QwQ-32B-Preview",
            "mrmartian96/Qwen-sysadmin",
            "mksdev/Qwen-QwQ-32B-Preview",
            "83y/Qwen-QwQ-32B-Preview",
            "dannymoor/Qwen-QwQ-32B-Preview",
            "jabolaso/Qwen-QwQ-32B-Preview",
            "zhackerneh/Qwen-QwQ-32B-Preview",
            "Egorshteinat/Qwen-QwQ-32B-Preview",
            "Reality123b/Qwen-QwQ-32B-Preview",
            "zoro442367/Qwen-QwQ-32B-Preview",
            "Lap1official/Xylaria_1.4_Senoa",
            "iSolver-AI/Qwen-QwQ-32B-Preview",
            "qamarsidd/Exam-Preparation-Assistant",
            "lowres/Ayanokoji_Kiyokata",
            "moizj00/Qwen-QwQ-32B-Preview",
            "Baianjo/Qwen-QwQ-32B-Preview",
            "OmarAbovli/wbqwer"
        ],
        "createdAt": "2024-11-27T15:50:55.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 32763876352
            },
            "total": 32763876352
        }
    },
    {
        "_id": "6743e2f5b689b48aefab5c43",
        "id": "Djrango/Qwen2vl-Flux",
        "modelId": "Djrango/Qwen2vl-Flux",
        "author": "Djrango",
        "sha": "1b94efc464f84332b0e6e02b62896345aeccfb93",
        "lastModified": "2024-11-27T16:50:38.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "safetensors",
            "flux",
            "qwen2vl",
            "stable-diffusion",
            "text-to-image",
            "image-to-image",
            "controlnet",
            "en",
            "base_model:Qwen/Qwen2-VL-7B-Instruct",
            "base_model:adapter:Qwen/Qwen2-VL-7B-Instruct",
            "license:mit",
            "region:us"
        ],
        "downloads": 0,
        "library_name": "diffusers",
        "likes": 316,
        "model-index": null,
        "cardData": {
            "license": "mit",
            "language": [
                "en"
            ],
            "base_model": [
                "black-forest-labs/FLUX.1-dev",
                "Qwen/Qwen2-VL-7B-Instruct"
            ],
            "library_name": "diffusers",
            "tags": [
                "flux",
                "qwen2vl",
                "stable-diffusion",
                "text-to-image",
                "image-to-image",
                "controlnet"
            ],
            "pipeline_tag": "text-to-image",
            "inference": false
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "blend_1.png"
            },
            {
                "rfilename": "blend_2.png"
            },
            {
                "rfilename": "blend_3.png"
            },
            {
                "rfilename": "blend_4.png"
            },
            {
                "rfilename": "blend_5.png"
            },
            {
                "rfilename": "blend_6.png"
            },
            {
                "rfilename": "blend_7.png"
            },
            {
                "rfilename": "controlnet/config.json"
            },
            {
                "rfilename": "controlnet/diffusion_pytorch_model.safetensors"
            },
            {
                "rfilename": "flux-architecture.svg"
            },
            {
                "rfilename": "flux/scheduler/scheduler_config.json"
            },
            {
                "rfilename": "flux/text_encoder/config.json"
            },
            {
                "rfilename": "flux/text_encoder/model.safetensors"
            },
            {
                "rfilename": "flux/text_encoder_2/config.json"
            },
            {
                "rfilename": "flux/text_encoder_2/model-00001-of-00002.safetensors"
            },
            {
                "rfilename": "flux/text_encoder_2/model-00002-of-00002.safetensors"
            },
            {
                "rfilename": "flux/text_encoder_2/model.safetensors.index.json"
            },
            {
                "rfilename": "flux/tokenizer/merges.txt"
            },
            {
                "rfilename": "flux/tokenizer/special_tokens_map.json"
            },
            {
                "rfilename": "flux/tokenizer/tokenizer_config.json"
            },
            {
                "rfilename": "flux/tokenizer/vocab.json"
            },
            {
                "rfilename": "flux/tokenizer_2/special_tokens_map.json"
            },
            {
                "rfilename": "flux/tokenizer_2/spiece.model"
            },
            {
                "rfilename": "flux/tokenizer_2/tokenizer.json"
            },
            {
                "rfilename": "flux/tokenizer_2/tokenizer_config.json"
            },
            {
                "rfilename": "flux/transformer/config.json"
            },
            {
                "rfilename": "flux/transformer/diffusion_pytorch_model-00001-of-00003.safetensors"
            },
            {
                "rfilename": "flux/transformer/diffusion_pytorch_model-00002-of-00003.safetensors"
            },
            {
                "rfilename": "flux/transformer/diffusion_pytorch_model-00003-of-00003.safetensors"
            },
            {
                "rfilename": "flux/transformer/diffusion_pytorch_model.safetensors.index.json"
            },
            {
                "rfilename": "flux/vae/config.json"
            },
            {
                "rfilename": "flux/vae/diffusion_pytorch_model.safetensors"
            },
            {
                "rfilename": "griddot_1.png"
            },
            {
                "rfilename": "griddot_2.png"
            },
            {
                "rfilename": "griddot_3.png"
            },
            {
                "rfilename": "griddot_4.png"
            },
            {
                "rfilename": "griddot_5.png"
            },
            {
                "rfilename": "griddot_6.png"
            },
            {
                "rfilename": "griddot_7.png"
            },
            {
                "rfilename": "griddot_8.png"
            },
            {
                "rfilename": "griddot_9.png"
            },
            {
                "rfilename": "landing-1.png"
            },
            {
                "rfilename": "qwen2-vl/chat_template.json"
            },
            {
                "rfilename": "qwen2-vl/config.json"
            },
            {
                "rfilename": "qwen2-vl/connector.pt"
            },
            {
                "rfilename": "qwen2-vl/generation_config.json"
            },
            {
                "rfilename": "qwen2-vl/merges.txt"
            },
            {
                "rfilename": "qwen2-vl/model-00001-of-00004.safetensors"
            },
            {
                "rfilename": "qwen2-vl/model-00002-of-00004.safetensors"
            },
            {
                "rfilename": "qwen2-vl/model-00003-of-00004.safetensors"
            },
            {
                "rfilename": "qwen2-vl/model-00004-of-00004.safetensors"
            },
            {
                "rfilename": "qwen2-vl/model.safetensors.index.json"
            },
            {
                "rfilename": "qwen2-vl/preprocessor_config.json"
            },
            {
                "rfilename": "qwen2-vl/t5_embedder.pt"
            },
            {
                "rfilename": "qwen2-vl/tokenizer.json"
            },
            {
                "rfilename": "qwen2-vl/tokenizer_config.json"
            },
            {
                "rfilename": "qwen2-vl/vocab.json"
            },
            {
                "rfilename": "textblend_1.png"
            },
            {
                "rfilename": "textblend_2.png"
            },
            {
                "rfilename": "textblend_3.png"
            },
            {
                "rfilename": "textblend_4.png"
            },
            {
                "rfilename": "textblend_5.png"
            },
            {
                "rfilename": "textblend_6.png"
            },
            {
                "rfilename": "textblend_7.png"
            },
            {
                "rfilename": "textblend_8.png"
            },
            {
                "rfilename": "textblend_9.png"
            },
            {
                "rfilename": "variation_1.png"
            },
            {
                "rfilename": "variation_2.png"
            },
            {
                "rfilename": "variation_3.png"
            },
            {
                "rfilename": "variation_4.png"
            },
            {
                "rfilename": "variation_5.png"
            }
        ],
        "spaces": [
            "Djrango/qwen2vl-flux-mini-demo",
            "jkyleowens/Djrango-Qwen2vl-Flux",
            "Sonfire/Djranzzgo-Qwenss2vl-Flux",
            "LI302573596/Djrango-Qwen2vl-Flux",
            "hihmhee/Djrango-Qwen2vl-Flux",
            "Adamhyx/Djrango-Qwen2vl-Flux",
            "suzuki002/Djrango-Qwen2vl-Flux",
            "John6666/qwen2vl-flux-zero",
            "nknkZ/Djrango-Qwen2vl-Flux",
            "Sonfire/Djrango-Qwen2vl-Flux",
            "Sonfire/Djrango-Qwenss2vl-Flux",
            "cocktailpeanut/qwen2vl-flux-mini-demo",
            "svjack/qwen2vl-flux-mini-demo",
            "JonusNattapong/ChatBot_Office"
        ],
        "createdAt": "2024-11-25T02:37:41.000Z"
    },
    {
        "_id": "673410e818caf8e87780fd17",
        "id": "AIDC-AI/Marco-o1",
        "modelId": "AIDC-AI/Marco-o1",
        "author": "AIDC-AI",
        "sha": "5e4deeeb286b7a2e35a6d16989e64df860f7f4e5",
        "lastModified": "2024-11-23T10:40:27.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "safetensors",
            "qwen2",
            "text-generation",
            "conversational",
            "arxiv:2411.14405",
            "license:apache-2.0",
            "autotrain_compatible",
            "text-generation-inference",
            "region:us"
        ],
        "downloads": 8327,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 586,
        "model-index": null,
        "config": {
            "architectures": [
                "Qwen2ForCausalLM"
            ],
            "model_type": "qwen2",
            "tokenizer_config": {
                "bos_token": null,
                "chat_template": "{% for message in messages %}{% if loop.first and messages[0]['role'] != 'system' %}{{ '<|im_start|>system\n\n你是一个经过良好训练的AI助手，你的名字是Marco-o1.由阿里国际数字商业集团的AI Business创造.\n        \n## 重要！！！！！\n当你回答问题时，你的思考应该在<Thought>内完成，<Output>内输出你的结果。\n<Thought>应该尽可能是英文，但是有2个特例，一个是对原文中的引用，另一个是是数学应该使用markdown格式，<Output>内的输出需要遵循用户输入的语言。\n        <|im_end|>\n' }}{% endif %}{{'<|im_start|>' + message['role'] + '\n' + message['content'] + '<|im_end|>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant\n' }}{% endif %}",
                "eos_token": "<|im_end|>",
                "pad_token": "<|endoftext|>",
                "unk_token": null
            }
        },
        "cardData": {
            "license": "apache-2.0",
            "library_name": "transformers",
            "inference": false
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "pipeline_tag": "text-generation",
            "processor": "AutoTokenizer"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE"
            },
            {
                "rfilename": "NOTICE"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "assets/img.png"
            },
            {
                "rfilename": "assets/intro_2.jpg"
            },
            {
                "rfilename": "assets/logo.png"
            },
            {
                "rfilename": "assets/results.jpg"
            },
            {
                "rfilename": "assets/translation.jpg"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "merges.txt"
            },
            {
                "rfilename": "model-00001-of-00004.safetensors"
            },
            {
                "rfilename": "model-00002-of-00004.safetensors"
            },
            {
                "rfilename": "model-00003-of-00004.safetensors"
            },
            {
                "rfilename": "model-00004-of-00004.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            },
            {
                "rfilename": "vocab.json"
            }
        ],
        "spaces": [
            "akhaliq/anychat",
            "pyqjw/AIDC-AI-Marco-o1",
            "llamameta/google-gemini-web-search",
            "qbitmaze/AIDC-AI-Marco-o1",
            "MakiAi/Gradio-LLM-demo",
            "dwnmf/AIDC-AI-Marco-o1",
            "Svngoku/Marco-o1-Q4",
            "Locon213/Marco-O1",
            "agonic/AIDC-AI-Marco-o1",
            "Rooni/AIDC-AI-Marco-o1",
            "loyal1/AIDC-AI-Marco-o1",
            "fratquintero/AIDC-AI-Marco-o1",
            "TaxThinker123/AIDC-AI-Marco-o1",
            "aaditkamat/Marco-o1",
            "nileshhanotia/Smol"
        ],
        "createdAt": "2024-11-13T02:37:28.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 7615616512
            },
            "total": 7615616512
        }
    },
    {
        "_id": "672379b045bf745cb0f1a79a",
        "id": "Lightricks/LTX-Video",
        "modelId": "Lightricks/LTX-Video",
        "author": "Lightricks",
        "sha": "a5ab70cf0b89a0b90dfafe3556c24f1b4767bdc8",
        "lastModified": "2024-11-23T10:27:40.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "image-to-video",
        "tags": [
            "diffusers",
            "safetensors",
            "ltx-video",
            "text-to-video",
            "image-to-video",
            "en",
            "license:other",
            "region:us"
        ],
        "downloads": 30472,
        "library_name": "diffusers",
        "likes": 536,
        "model-index": null,
        "cardData": {
            "tags": [
                "ltx-video",
                "text-to-video",
                "image-to-video"
            ],
            "pinned": true,
            "language": [
                "en"
            ],
            "license": "other"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "License.txt"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "ltx-video-2b-v0.9.safetensors"
            },
            {
                "rfilename": "media/ltx-video_example_00001.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00002.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00003.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00004.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00005.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00006.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00007.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00008.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00009.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00010.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00011.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00012.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00013.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00014.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00015.gif"
            },
            {
                "rfilename": "media/ltx-video_example_00016.gif"
            },
            {
                "rfilename": "media/trailer.gif"
            },
            {
                "rfilename": "scheduler/scheduler_config.json"
            },
            {
                "rfilename": "unet/config.json"
            },
            {
                "rfilename": "unet/unet_diffusion_pytorch_model.safetensors"
            },
            {
                "rfilename": "vae/config.json"
            },
            {
                "rfilename": "vae/vae_diffusion_pytorch_model.safetensors"
            }
        ],
        "spaces": [
            "PR-Puppets/PR-Puppet-Sora",
            "Lightricks/LTX-Video-Playground",
            "TIGER-Lab/GenAI-Arena",
            "ninjawick/PR-Puppet-Sora-2",
            "cocktailpeanut/LTX-Video-Playground",
            "svjack/LTX-Video-Playground",
            "ford442/LTX-Video",
            "emilalvaro/LTX-Video-Playground",
            "jbilcke-hf/ai-tube-model-ltxv-1",
            "NativeAngels/LTX-Video-Playground",
            "Swaqgame99/LTX-Video-Playground",
            "jbilcke-hf/ai-tube-model-ltxv-2",
            "ylues/PR-Puppet-Sora",
            "jbilcke-hf/ai-tube-model-ltxv-3",
            "lilcheaty/sora_test",
            "Konst2021/PR-Puppet-Sora",
            "alexlevy0/PR-Puppet-Sora",
            "k11112/LTX-Video-Playground",
            "jbilcke-hf/ai-tube-model-ltxv-4",
            "Masterdqqq/PR-Puppet-Sora",
            "AashishNKumar/proj11",
            "M4xjunior/LTX-Video-Playground"
        ],
        "createdAt": "2024-10-31T12:36:00.000Z"
    },
    {
        "_id": "673b6ff9e17a2c7a97acf9a2",
        "id": "HuggingFaceTB/SmolVLM-Instruct",
        "modelId": "HuggingFaceTB/SmolVLM-Instruct",
        "author": "HuggingFaceTB",
        "sha": "68141df531cc7855e345497f18ce1bb9b52a5d55",
        "lastModified": "2024-12-01T23:19:43.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "image-text-to-text",
        "tags": [
            "transformers",
            "onnx",
            "safetensors",
            "idefics3",
            "image-text-to-text",
            "conversational",
            "en",
            "dataset:HuggingFaceM4/the_cauldron",
            "dataset:HuggingFaceM4/Docmatix",
            "base_model:HuggingFaceTB/SmolLM2-1.7B-Instruct",
            "base_model:quantized:HuggingFaceTB/SmolLM2-1.7B-Instruct",
            "license:apache-2.0",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 18931,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 195,
        "model-index": null,
        "config": {
            "architectures": [
                "Idefics3ForConditionalGeneration"
            ],
            "model_type": "idefics3",
            "processor_config": {
                "chat_template": "<|im_start|>{% for message in messages %}{{message['role'] | capitalize}}{% if message['content'][0]['type'] == 'image' %}{{':'}}{% else %}{{': '}}{% endif %}{% for line in message['content'] %}{% if line['type'] == 'text' %}{{line['text']}}{% elif line['type'] == 'image' %}{{ '<image>' }}{% endif %}{% endfor %}<end_of_utterance>\n{% endfor %}{% if add_generation_prompt %}{{ 'Assistant:' }}{% endif %}"
            },
            "tokenizer_config": {
                "bos_token": "<|im_start|>",
                "eos_token": "<end_of_utterance>",
                "pad_token": "<|im_end|>",
                "chat_template": "<|im_start|>{% for message in messages %}{{message['role'] | capitalize}}{% if message['content'][0]['type'] == 'image' %}{{':'}}{% else %}{{': '}}{% endif %}{% for line in message['content'] %}{% if line['type'] == 'text' %}{{line['text']}}{% elif line['type'] == 'image' %}{{ '<image>' }}{% endif %}{% endfor %}<end_of_utterance>\n{% endfor %}{% if add_generation_prompt %}{{ 'Assistant:' }}{% endif %}",
                "unk_token": "<|endoftext|>"
            }
        },
        "cardData": {
            "library_name": "transformers",
            "license": "apache-2.0",
            "datasets": [
                "HuggingFaceM4/the_cauldron",
                "HuggingFaceM4/Docmatix"
            ],
            "pipeline_tag": "image-text-to-text",
            "language": [
                "en"
            ],
            "base_model": [
                "HuggingFaceTB/SmolLM2-1.7B-Instruct",
                "google/siglip-so400m-patch14-384"
            ]
        },
        "transformersInfo": {
            "auto_model": "AutoModelForImageTextToText",
            "pipeline_tag": "image-text-to-text",
            "processor": "AutoProcessor"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "SmolVLM.png"
            },
            {
                "rfilename": "added_tokens.json"
            },
            {
                "rfilename": "chat_template.json"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "merges.txt"
            },
            {
                "rfilename": "mixture_the_cauldron.png"
            },
            {
                "rfilename": "model.safetensors"
            },
            {
                "rfilename": "onnx/decoder_model_merged.onnx"
            },
            {
                "rfilename": "onnx/decoder_model_merged.onnx_data"
            },
            {
                "rfilename": "onnx/decoder_model_merged_bnb4.onnx"
            },
            {
                "rfilename": "onnx/decoder_model_merged_fp16.onnx"
            },
            {
                "rfilename": "onnx/decoder_model_merged_fp16.onnx_data"
            },
            {
                "rfilename": "onnx/decoder_model_merged_int8.onnx"
            },
            {
                "rfilename": "onnx/decoder_model_merged_q4.onnx"
            },
            {
                "rfilename": "onnx/decoder_model_merged_quantized.onnx"
            },
            {
                "rfilename": "onnx/decoder_model_merged_uint8.onnx"
            },
            {
                "rfilename": "onnx/embed_tokens.onnx"
            },
            {
                "rfilename": "onnx/embed_tokens_bnb4.onnx"
            },
            {
                "rfilename": "onnx/embed_tokens_fp16.onnx"
            },
            {
                "rfilename": "onnx/embed_tokens_int8.onnx"
            },
            {
                "rfilename": "onnx/embed_tokens_q4.onnx"
            },
            {
                "rfilename": "onnx/embed_tokens_q4f16.onnx"
            },
            {
                "rfilename": "onnx/embed_tokens_quantized.onnx"
            },
            {
                "rfilename": "onnx/embed_tokens_uint8.onnx"
            },
            {
                "rfilename": "onnx/vision_encoder.onnx"
            },
            {
                "rfilename": "onnx/vision_encoder_bnb4.onnx"
            },
            {
                "rfilename": "onnx/vision_encoder_fp16.onnx"
            },
            {
                "rfilename": "onnx/vision_encoder_int8.onnx"
            },
            {
                "rfilename": "onnx/vision_encoder_q4.onnx"
            },
            {
                "rfilename": "onnx/vision_encoder_q4f16.onnx"
            },
            {
                "rfilename": "onnx/vision_encoder_quantized.onnx"
            },
            {
                "rfilename": "onnx/vision_encoder_uint8.onnx"
            },
            {
                "rfilename": "preprocessor_config.json"
            },
            {
                "rfilename": "processor_config.json"
            },
            {
                "rfilename": "smolvlm-data.pdf"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            },
            {
                "rfilename": "vocab.json"
            }
        ],
        "spaces": [
            "HuggingFaceTB/SmolVLM",
            "akhaliq/SmolVLM-Instruct",
            "cbensimon/SmolVLM",
            "Nymbo/SmolVLM",
            "Akbartus/SmolVLM_CPU",
            "md-vasim/SmolVLM",
            "NeuralLobes/Thinsection_AI_Interpreter",
            "gizemsarsinlar/SmolVLM-Artwork-Analysis"
        ],
        "createdAt": "2024-11-18T16:48:57.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 2246272880
            },
            "total": 2246272880
        }
    },
    {
        "_id": "6742de849be44d083eb8533b",
        "id": "OuteAI/OuteTTS-0.2-500M",
        "modelId": "OuteAI/OuteTTS-0.2-500M",
        "author": "OuteAI",
        "sha": "4bb36237ac2632404ddbeccce1c38d29b4603c63",
        "lastModified": "2024-12-02T15:18:55.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-speech",
        "tags": [
            "safetensors",
            "qwen2",
            "text-to-speech",
            "en",
            "zh",
            "ja",
            "ko",
            "dataset:facebook/multilingual_librispeech",
            "dataset:parler-tts/libritts_r_filtered",
            "dataset:amphion/Emilia-Dataset",
            "dataset:parler-tts/mls_eng",
            "license:cc-by-nc-4.0",
            "region:us"
        ],
        "downloads": 9580,
        "likes": 211,
        "model-index": null,
        "config": {
            "architectures": [
                "Qwen2ForCausalLM"
            ],
            "model_type": "qwen2",
            "tokenizer_config": {
                "bos_token": null,
                "eos_token": "<|im_end|>",
                "pad_token": "<|endoftext|>",
                "unk_token": null
            }
        },
        "cardData": {
            "license": "cc-by-nc-4.0",
            "datasets": [
                "facebook/multilingual_librispeech",
                "parler-tts/libritts_r_filtered",
                "amphion/Emilia-Dataset",
                "parler-tts/mls_eng"
            ],
            "language": [
                "en",
                "zh",
                "ja",
                "ko"
            ],
            "pipeline_tag": "text-to-speech"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "added_tokens.json"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "merges.txt"
            },
            {
                "rfilename": "model.safetensors"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            },
            {
                "rfilename": "vocab.json"
            }
        ],
        "spaces": [
            "OuteAI/OuteTTS-0.2-500M-Demo",
            "dibend/OuteTTS-0.2-500M-Demo",
            "fullstuckdev/OuteTTS-0.2-500M-Demo",
            "ameerazam08/OuteTTS-0.2-500M-Demo",
            "duggal1/OuteAI-OuteTTS-0.2-500M",
            "Nymbo/OuteTTS-0.2-500M-Demo",
            "tav2tav/OuteTTS-demo2",
            "Ros102/OuteAI-OuteTTS-0.2-500M",
            "byoung66609/OuteAI-OuteTTS-0.2-500M"
        ],
        "createdAt": "2024-11-24T08:06:28.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 499193728
            },
            "total": 499193728
        }
    },
    {
        "_id": "66aaa908fc35e079a941470d",
        "id": "black-forest-labs/FLUX.1-dev",
        "modelId": "black-forest-labs/FLUX.1-dev",
        "author": "black-forest-labs",
        "sha": "0ef5fff789c832c5c7f4e127f94c8b54bbcced44",
        "lastModified": "2024-08-16T14:38:19.000Z",
        "private": false,
        "disabled": false,
        "gated": "auto",
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "safetensors",
            "text-to-image",
            "image-generation",
            "flux",
            "en",
            "license:other",
            "endpoints_compatible",
            "diffusers:FluxPipeline",
            "region:us"
        ],
        "downloads": 1365765,
        "library_name": "diffusers",
        "likes": 6857,
        "model-index": null,
        "config": {
            "diffusers": {
                "_class_name": "FluxPipeline"
            }
        },
        "cardData": {
            "language": [
                "en"
            ],
            "license": "other",
            "license_name": "flux-1-dev-non-commercial-license",
            "license_link": "LICENSE.md",
            "extra_gated_prompt": "By clicking \"Agree\", you agree to the [FluxDev Non-Commercial License Agreement](https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md) and acknowledge the [Acceptable Use Policy](https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/POLICY.md).",
            "tags": [
                "text-to-image",
                "image-generation",
                "flux"
            ]
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE.md"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "ae.safetensors"
            },
            {
                "rfilename": "dev_grid.jpg"
            },
            {
                "rfilename": "flux1-dev.safetensors"
            },
            {
                "rfilename": "model_index.json"
            },
            {
                "rfilename": "scheduler/scheduler_config.json"
            },
            {
                "rfilename": "text_encoder/config.json"
            },
            {
                "rfilename": "text_encoder/model.safetensors"
            },
            {
                "rfilename": "text_encoder_2/config.json"
            },
            {
                "rfilename": "text_encoder_2/model-00001-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_2/model-00002-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_2/model.safetensors.index.json"
            },
            {
                "rfilename": "tokenizer/merges.txt"
            },
            {
                "rfilename": "tokenizer/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer/tokenizer_config.json"
            },
            {
                "rfilename": "tokenizer/vocab.json"
            },
            {
                "rfilename": "tokenizer_2/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer_2/spiece.model"
            },
            {
                "rfilename": "tokenizer_2/tokenizer.json"
            },
            {
                "rfilename": "tokenizer_2/tokenizer_config.json"
            },
            {
                "rfilename": "transformer/config.json"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00001-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00002-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00003-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model.safetensors.index.json"
            },
            {
                "rfilename": "vae/config.json"
            },
            {
                "rfilename": "vae/diffusion_pytorch_model.safetensors"
            }
        ],
        "spaces": [
            "black-forest-labs/FLUX.1-dev",
            "yanze/PuLID-FLUX",
            "multimodalart/flux-lora-the-explorer",
            "DamarJati/FLUX.1-RealismLora",
            "jasperai/Flux.1-dev-Controlnet-Upscaler",
            "ByteDance/Hyper-FLUX-8Steps-LoRA",
            "multimodalart/FLUX.1-merged",
            "multimodalart/flux-lora-lab",
            "prithivMLmods/FLUX-LoRA-DLC",
            "multimodalart/logo-in-context",
            "DamarJati/FLUX.1-DEV-Canny",
            "autotrain-projects/train-flux-lora-ease",
            "dn6/FLUX-GIFs",
            "openfree/mixgen3",
            "ginipick/ofai-flxnf4",
            "multimodalart/flux-outpainting",
            "multimodalart/flux-cfg",
            "prithivMLmods/FLUX-REALISM",
            "gokaygokay/FLUX.1-dev-with-Captioner",
            "Shakker-Labs/FLUX.1-dev-ControlNet-Union-Pro",
            "InstantX/flux-IP-adapter",
            "ameerazam08/FLUX.1-dev-Inpainting-Model-Beta-GPU",
            "John6666/DiffuseCraftMod",
            "NeurixYUFI/imggen",
            "r3gm/DiffuseCraft",
            "Nymbo/Compare-6",
            "openfree/ginigen-gallery",
            "John6666/votepurchase-multiple-model",
            "Nymbo/FLUX.1-Dev-Serverless",
            "multimodalart/civitai-to-hf",
            "nyanko7/flux1-dev-nf4",
            "vilarin/flux-labs",
            "Nick088/FLUX.1-dev",
            "Shakker-Labs/FLUX-LoRA-Gallery",
            "InstantX/SD35-IP-Adapter",
            "vilarin/flux-lab-light",
            "guardiancc/flux-advanced-explorer",
            "vilarin/lumiere",
            "black-forest-labs/FLUX.1-Fill-dev",
            "MohamedRashad/Character-Generator",
            "black-forest-labs/FLUX.1-Redux-dev",
            "FilipeR/FLUX.1-dev-UI",
            "ovi054/FLUX.Dev-LORA-Serverless",
            "rafaaa2105/flux-ghibsky-illustration",
            "multimodalart/flux-fill-outpaint",
            "doevent/FLUX.1-merged",
            "multimodalart/low-step-flux-comparison",
            "black-forest-labs/FLUX.1-Depth-dev",
            "Nymbo/flux-lora-the-explorer",
            "prithivMLmods/Midjourney-Flux",
            "xiaozaa/catvton-flux-try-on",
            "Nymbo/Flux.1-dev-Controlnet-Upscaler",
            "NJU/RAG-Diffusion",
            "alsaeth/high-quality-imgs-FLUX",
            "K00B404/FluxCapacitor",
            "black-forest-labs/FLUX.1-canny-dev",
            "nroggendorff/flux-lora-tester",
            "wjs0725/RF-Solver-Edit",
            "DazDin/DiffFlu2",
            "MohamedRashad/Flux-Redux",
            "aexyb/Diffusion",
            "special-access/black-forest-labs-FLUX1.1-dev",
            "KwabsHug/GameConfigIdea",
            "Deddy/PuLid-FLX-GPU",
            "sofianhw/PuLID-FLUX",
            "ameerazam08/FLUX.1-dev-De-Distill",
            "JournalistsonHF/text-to-image-bias",
            "killwithabass/FLUX-1-DEV_LORA-ANDROFLUX",
            "RED-AIGC/FLUX-TDD-BETA",
            "Zhofang/FLUX.1-Dev-Serverless-darn",
            "Nymbo/Serverless-ImgGen-Hub",
            "NotASI/FLUX.1-dev",
            "modelscope/DiffSynth-Painter",
            "joselobenitezg/obtu-ai",
            "guardiancc/flux-ip-face-adapter",
            "alvarobartt/FLUX.1-Studio-Ghibli-LoRA",
            "guardiancc/flux-gif-animations-2",
            "CultriX/FLUX.1-dev",
            "Muhammadreza/Mann-E_Flux",
            "thesab/outfit-generator",
            "stazizov/XFluxSpace",
            "CultriX/flux-lora-the-explorer",
            "TencentARC/Flux-Mini",
            "Nymbo/flux-lab-light",
            "colbyford/flux2",
            "ovi054/FLUX-GIFs-LoRA",
            "Deddy/FLUX-Wallpaper-HD-Maker",
            "t-montes/Flux.1-dev-Controlnet-Upscaler",
            "Prog420ress/black-forest-labs-FLUX.1-dev",
            "John6666/flux-to-diffusers-test",
            "K00B404/FLUX.1-Dev-Serverless-darn",
            "vincenthugging/flux-lora-myself",
            "jiuface/flux-controlnet-inpainting",
            "mantrakp/aai",
            "fantaxy/flx-pulid",
            "Nymbo/FLUX-LoRA-DLC",
            "nroggendorff/flux",
            "jiuface/flux-dev-multi-lora",
            "PeepDaSlan9/B2BMGMT_flux-lab-light",
            "yasserrmd/MagicDoodles"
        ],
        "createdAt": "2024-07-31T21:13:44.000Z"
    },
    {
        "_id": "66d9d736d04c920ebfcb6202",
        "id": "ginipick/flux-lora-eric-cat",
        "modelId": "ginipick/flux-lora-eric-cat",
        "author": "ginipick",
        "sha": "c82cfae7839396f698cbb6c9937af3c447b90f62",
        "lastModified": "2024-12-02T03:16:25.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "autotrain",
            "spacerunner",
            "text-to-image",
            "flux",
            "lora",
            "template:sd-lora",
            "base_model:black-forest-labs/FLUX.1-dev",
            "base_model:adapter:black-forest-labs/FLUX.1-dev",
            "license:other",
            "region:us"
        ],
        "downloads": 2688,
        "library_name": "diffusers",
        "widgetData": [
            {
                "text": "eric cat style, sunglassed with cat",
                "output": {
                    "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/b6a0866c-24e8-4fe3-a830-be14f26915f6.jpg"
                }
            },
            {
                "text": "eric cat style, cooking cat",
                "output": {
                    "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/c3.png"
                }
            },
            {
                "text": "eric cat style, cute cat",
                "output": {
                    "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/c4.png"
                }
            },
            {
                "text": "eric cat style, cute cat",
                "output": {
                    "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/c5.png"
                }
            },
            {
                "text": "eric cat style, cute cat",
                "output": {
                    "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/c6.png"
                }
            },
            {
                "text": "eric cat style, cute cat",
                "output": {
                    "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/c7.png"
                }
            }
        ],
        "likes": 164,
        "model-index": null,
        "cardData": {
            "base_model": "black-forest-labs/FLUX.1-dev",
            "license": "other",
            "license_name": "flux-1-dev-non-commercial-license",
            "tags": [
                "autotrain",
                "spacerunner",
                "text-to-image",
                "flux",
                "lora",
                "diffusers",
                "template:sd-lora"
            ],
            "widget": [
                {
                    "text": "eric cat style, sunglassed with cat",
                    "output": {
                        "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/b6a0866c-24e8-4fe3-a830-be14f26915f6.jpg"
                    }
                },
                {
                    "text": "eric cat style, cooking cat",
                    "output": {
                        "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/c3.png"
                    }
                },
                {
                    "text": "eric cat style, cute cat",
                    "output": {
                        "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/c4.png"
                    }
                },
                {
                    "text": "eric cat style, cute cat",
                    "output": {
                        "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/c5.png"
                    }
                },
                {
                    "text": "eric cat style, cute cat",
                    "output": {
                        "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/c6.png"
                    }
                },
                {
                    "text": "eric cat style, cute cat",
                    "output": {
                        "url": "https://huggingface.co/ginipick/flux-lora-eric-cat/resolve/main/samples/c7.png"
                    }
                }
            ],
            "instance_prompt": "eric cat style"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "flux-lora-eric-cat.safetensors"
            },
            {
                "rfilename": "samples/1725552431958__000001000_0.jpg"
            },
            {
                "rfilename": "samples/b6a0866c-24e8-4fe3-a830-be14f26915f6.jpg"
            },
            {
                "rfilename": "samples/c10.png"
            },
            {
                "rfilename": "samples/c11.png"
            },
            {
                "rfilename": "samples/c12.png"
            },
            {
                "rfilename": "samples/c3.png"
            },
            {
                "rfilename": "samples/c4.png"
            },
            {
                "rfilename": "samples/c5.png"
            },
            {
                "rfilename": "samples/c6.png"
            },
            {
                "rfilename": "samples/c7.png"
            },
            {
                "rfilename": "samples/c8.png"
            },
            {
                "rfilename": "samples/c9.png"
            }
        ],
        "spaces": [
            "openfree/mixgen3",
            "openfree/ginigen-gallery",
            "FradigmaDangerYT/ginipick-flux-lora-eric-cat",
            "openfree/ginigen-gallery-backup",
            "Amal360/ginipick-flux-lora-eric-cat"
        ],
        "createdAt": "2024-09-05T16:07:18.000Z"
    },
    {
        "_id": "672b1f9e956e6880fdb8c1e5",
        "id": "Qwen/Qwen2.5-Coder-32B-Instruct",
        "modelId": "Qwen/Qwen2.5-Coder-32B-Instruct",
        "author": "Qwen",
        "sha": "b47205940b83b5b484577359f71ee7b88472df67",
        "lastModified": "2024-11-18T12:55:03.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "safetensors",
            "qwen2",
            "text-generation",
            "code",
            "codeqwen",
            "chat",
            "qwen",
            "qwen-coder",
            "conversational",
            "en",
            "arxiv:2409.12186",
            "arxiv:2309.00071",
            "arxiv:2407.10671",
            "base_model:Qwen/Qwen2.5-Coder-32B",
            "base_model:finetune:Qwen/Qwen2.5-Coder-32B",
            "license:apache-2.0",
            "autotrain_compatible",
            "text-generation-inference",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 156731,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 1126,
        "model-index": null,
        "config": {
            "architectures": [
                "Qwen2ForCausalLM"
            ],
            "model_type": "qwen2",
            "tokenizer_config": {
                "bos_token": null,
                "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are Qwen, created by Alibaba Cloud. You are a helpful assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
                "eos_token": "<|im_end|>",
                "pad_token": "<|endoftext|>",
                "unk_token": null
            }
        },
        "cardData": {
            "license": "apache-2.0",
            "license_link": "https://huggingface.co/Qwen/Qwen2.5-Coder-32B-Instruct/blob/main/LICENSE",
            "language": [
                "en"
            ],
            "base_model": [
                "Qwen/Qwen2.5-Coder-32B"
            ],
            "pipeline_tag": "text-generation",
            "library_name": "transformers",
            "tags": [
                "code",
                "codeqwen",
                "chat",
                "qwen",
                "qwen-coder"
            ]
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "pipeline_tag": "text-generation",
            "processor": "AutoTokenizer"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "merges.txt"
            },
            {
                "rfilename": "model-00001-of-00014.safetensors"
            },
            {
                "rfilename": "model-00002-of-00014.safetensors"
            },
            {
                "rfilename": "model-00003-of-00014.safetensors"
            },
            {
                "rfilename": "model-00004-of-00014.safetensors"
            },
            {
                "rfilename": "model-00005-of-00014.safetensors"
            },
            {
                "rfilename": "model-00006-of-00014.safetensors"
            },
            {
                "rfilename": "model-00007-of-00014.safetensors"
            },
            {
                "rfilename": "model-00008-of-00014.safetensors"
            },
            {
                "rfilename": "model-00009-of-00014.safetensors"
            },
            {
                "rfilename": "model-00010-of-00014.safetensors"
            },
            {
                "rfilename": "model-00011-of-00014.safetensors"
            },
            {
                "rfilename": "model-00012-of-00014.safetensors"
            },
            {
                "rfilename": "model-00013-of-00014.safetensors"
            },
            {
                "rfilename": "model-00014-of-00014.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            },
            {
                "rfilename": "vocab.json"
            }
        ],
        "spaces": [
            "bigcode/bigcode-models-leaderboard",
            "akhaliq/anychat",
            "huggingface-projects/ai-video-composer",
            "NeurixYUFI/imggen",
            "HyperbolicLabs/Hyperbolic-Qwen2.5-Coder-Artifacts",
            "wifix199/Coding",
            "yasserrmd/ReadMeForge",
            "yasserrmd/CodeCompliance",
            "nonnon6250/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Sg-at-srijan-us-kg/Qwen2.5-Coder",
            "yasserrmd/InfographicWizard",
            "Nymbo/Qwen2.5-Coder-32B-Instruct-Serverless",
            "ParthSadaria/lokiai",
            "nruto/rxple",
            "Rooni/Qwen-Qwen2.5-Coder-32B-Instruct",
            "dfd186488/Qwen-Qwen2.5-Coder-32B-Instruct",
            "IdenGhost/Qwen-Qwen2.5-Coder-32B-Instruct",
            "roshikhan301/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Pulkit-exe/Course_Recommendation_System",
            "Manojajj/CodeAssistant-Qwen",
            "Anonymous1355/Qwen-Qwen2.5-Coder-32B-Instruct",
            "akhaliq/Qwen-Qwen2.5-Coder-32B-Instruct-test",
            "usermew12/marco",
            "faelfernandes/GPT4o",
            "cocktailpeanut/ai-video-composer",
            "Gyatolazo/Qwen-Qwen2.5-Coder-32B-Instruct",
            "NeurixYUFI/StoryMaster",
            "NeurixYUFI/ImgGenChat",
            "I-love-potatoes-and-ai/Qwen-Qwen2.5-Coder-32B-Instruct",
            "pentarosarium/processor",
            "ClayeW/Qwen-Qwen2.5-Coder-32B-Instruct",
            "serzru96/Qwen-Qwen2.5-Coder-32B-Instruct",
            "anatoli72/Qwen-Qwen2.5-Coder-32B-Instruct",
            "mwqlkm/Qwen-Qwen2.5-Coder-32B-Instruct",
            "kadebostany/Qwen-Qwen2.5-Coder-32B-Instruct",
            "ihorkaren/Qwen-Qwen2.5-Coder-32B-Instruct",
            "beerhunters/Qwen-Qwen2.5-Coder-32B-Instruct",
            "KennyOry/Qwen-Qwen2.5-Coder-32B-Instruct",
            "YaNeVLAD/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Irridian/Qwen-Qwen2.5-Coder-32B-Instruct",
            "deathault/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Slardar/Qwen-Qwen2.5-Coder-32B-Instruct",
            "xripunov/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Trappeew1ch/Qwen-Qwen2.5-Coder-32B-Instruct",
            "ggorinot/Qwen-Qwen2.5-Coder-32B-Instruct",
            "prof-te/Qwen-Qwen2.5-Coder-32B-Instruct",
            "isaax731/Qwen-Qwen2.5-Coder-32B-Instruct",
            "chrt666/Qwen-Qwen2.5-Coder-32B-Instruct",
            "mxxfoxx/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Nerqed/Qwen-Qwen2.5-Coder-32B-Instruct",
            "raveninthegrayhouse/Qwen-Qwen2.5-Coder-32B-Instruct",
            "poerl/Qwen-Qwen2.5-Coder-32B-Instruct",
            "x5wow/Qwen-Qwen2.5-Coder-32B-Instruct",
            "mPritz/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Yuravra/AI_Oracle",
            "nihar-sarkar/Quen-Coding",
            "Ubandiya/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Escorpion1/Qwen-Qwen2.5-Coder-32B-Instruct",
            "markey123/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Heyaski/Qwen-Qwen2.5-Coder-32B-Instruct",
            "zanabal/Qwen-Qwen2.5-Coder-32B-Instruct",
            "ivan345A/Qwen-Qwen2.5-Coder-32B-Instruct",
            "yokeshd/Qwen-Qwen2.5-Coder-32B-Instruct",
            "yasserrmd/ASICForge",
            "mrkarol/Qwen-Qwen2.5-Coder-32B-Instruct",
            "artbogat/Qwen-Qwen2.5-Coder-32B-Instruct",
            "mohsin6510/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Ankyadam/Qwen-Qwen2.5-Coder-32B-Instruct",
            "xMBx/Qwen-Qwen2.5-Coder-32B-Instruct",
            "ysl-collab/Qwen-Qwen2.5-Coder-32B-Instruct",
            "JuicyJu/Qwen-Qwen2.5-Coder-32B-Instruct",
            "vieneux/Qwen-Qwen2.5-Coder-32B",
            "Olppara/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Dmkdok/Qwen-Qwen2.5-Coder-32B-Instruct",
            "deagar/Qwen-Qwen2.5-Coder-32B-Instruct",
            "sgdlskjbgfvxzhbxkjrbgcezvoybr/Qwen-Qwen2.5-Coder-32B-CCWithAi.COM",
            "ishitcyberrr/Qwen-Qwen2.5-Coder-32B-Instruct",
            "davidobbs/codigo",
            "hugg1user/Qwen-Qwen2.5-Coder-32B-Instruct",
            "huynhQuy/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Sg-at-srijan-us-kg/Qwen2.5-72B",
            "varunnishad/Qwen-Qwen2.5-Coder-32B-Instruct",
            "alredi7/Qwen-Qwen2.5-Coder-32B-Instruct",
            "mukeshkr5/tts-test",
            "znxbbd/Qwen-Qwen2.5-Coder-32B-Instruct",
            "drguilhermeapolinario/Qwen-Qwen2.5-Coder-32B-Instruct",
            "FNuni/Qwen2.5-Coder-32B-Instruct",
            "Sg-at-srijan-us-kg/Qwen2.5-Code-Compliance",
            "SuryanshOG/Qwen-Qwen2.5-Coder-32B-Instruct",
            "vijay0811/Qwen-Qwen2.5-Coder-32B-Instruct",
            "cutifly/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Nick14/Qwen-Qwen2.5-Coder-32B-Instruct",
            "matz1237/Qwen-Qwen2.5-Coder-32B-Instruct",
            "emilalvaro/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Uset182/Qwen-Qwen2.5-Coder-32B-Instruct",
            "marcos2912/Qwen-Qwen2.5-Coder-32B-Instruct",
            "savageiwnl/qwen",
            "JaeSwift/Qwen-Qwen2.5-Coder-32B-Instruct",
            "Kwest70/Qwen-Qwen2.5-Coder-32B-Instruct",
            "curran06/MyCrrnSpace"
        ],
        "createdAt": "2024-11-06T07:49:50.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 32763876352
            },
            "total": 32763876352
        }
    },
    {
        "_id": "673e3c5da3eda9a8c99bda8a",
        "id": "black-forest-labs/FLUX.1-Fill-dev",
        "modelId": "black-forest-labs/FLUX.1-Fill-dev",
        "author": "black-forest-labs",
        "sha": "6d92c296315be5f54318a6d2659f11465339f934",
        "lastModified": "2024-11-25T22:50:08.000Z",
        "private": false,
        "disabled": false,
        "gated": "auto",
        "tags": [
            "diffusers",
            "safetensors",
            "image-generation",
            "flux",
            "diffusion-single-file",
            "en",
            "license:other",
            "diffusers:FluxFillPipeline",
            "region:us"
        ],
        "downloads": 34539,
        "library_name": "diffusers",
        "likes": 295,
        "model-index": null,
        "config": {
            "diffusers": {
                "_class_name": "FluxFillPipeline"
            }
        },
        "cardData": {
            "language": [
                "en"
            ],
            "license": "other",
            "license_name": "flux-1-dev-non-commercial-license",
            "license_link": "LICENSE.md",
            "extra_gated_prompt": "By clicking \"Agree\", you agree to the [FluxDev Non-Commercial License Agreement](https://huggingface.co/black-forest-labs/FLUX.1-Fill-dev/blob/main/LICENSE.md) and acknowledge the [Acceptable Use Policy](https://huggingface.co/black-forest-labs/FLUX.1-Fill-dev/blob/main/POLICY.md).",
            "tags": [
                "image-generation",
                "flux",
                "diffusion-single-file"
            ]
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE.md"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "ae.safetensors"
            },
            {
                "rfilename": "flux1-fill-dev.safetensors"
            },
            {
                "rfilename": "model_index.json"
            },
            {
                "rfilename": "scheduler/scheduler_config.json"
            },
            {
                "rfilename": "text_encoder/config.json"
            },
            {
                "rfilename": "text_encoder/model.safetensors"
            },
            {
                "rfilename": "text_encoder_2/config.json"
            },
            {
                "rfilename": "text_encoder_2/model-00001-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_2/model-00002-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_2/model.safetensors.index.json"
            },
            {
                "rfilename": "tokenizer/merges.txt"
            },
            {
                "rfilename": "tokenizer/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer/tokenizer_config.json"
            },
            {
                "rfilename": "tokenizer/vocab.json"
            },
            {
                "rfilename": "tokenizer_2/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer_2/spiece.model"
            },
            {
                "rfilename": "tokenizer_2/tokenizer.json"
            },
            {
                "rfilename": "tokenizer_2/tokenizer_config.json"
            },
            {
                "rfilename": "transformer/config.json"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00001-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00002-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00003-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model.safetensors.index.json"
            },
            {
                "rfilename": "vae/config.json"
            },
            {
                "rfilename": "vae/diffusion_pytorch_model.safetensors"
            }
        ],
        "spaces": [
            "black-forest-labs/FLUX.1-Fill-dev",
            "vilarin/Flux.1-Fill-dev",
            "multimodalart/flux-fill-outpaint",
            "xiaozaa/catvton-flux-try-on",
            "Nymbo/Flux.1-Fill-dev",
            "maccmaccmaccc/5428-p-llamaindexRAG"
        ],
        "createdAt": "2024-11-20T19:45:33.000Z"
    },
    {
        "_id": "67175475ab870480b86e7caa",
        "id": "stabilityai/stable-diffusion-3.5-large",
        "modelId": "stabilityai/stable-diffusion-3.5-large",
        "author": "stabilityai",
        "sha": "ceddf0a7fdf2064ea28e2213e3b84e4afa170a0f",
        "lastModified": "2024-10-22T14:36:33.000Z",
        "private": false,
        "disabled": false,
        "gated": "auto",
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "safetensors",
            "text-to-image",
            "stable-diffusion",
            "en",
            "arxiv:2403.03206",
            "license:other",
            "diffusers:StableDiffusion3Pipeline",
            "region:us"
        ],
        "downloads": 190585,
        "library_name": "diffusers",
        "likes": 1442,
        "model-index": null,
        "config": {
            "diffusers": {
                "_class_name": "StableDiffusion3Pipeline"
            }
        },
        "cardData": {
            "license": "other",
            "license_name": "stabilityai-ai-community",
            "license_link": "LICENSE.md",
            "tags": [
                "text-to-image",
                "stable-diffusion",
                "diffusers"
            ],
            "inference": true,
            "extra_gated_prompt": "By clicking \"Agree\", you agree to the [License Agreement](https://huggingface.co/stabilityai/stable-diffusion-3.5-large/blob/main/LICENSE.md) and acknowledge Stability AI's [Privacy Policy](https://stability.ai/privacy-policy).",
            "extra_gated_fields": {
                "Name": "text",
                "Email": "text",
                "Country": "country",
                "Organization or Affiliation": "text",
                "Receive email updates and promotions on Stability AI products, services, and research?": {
                    "type": "select",
                    "options": [
                        "Yes",
                        "No"
                    ]
                },
                "What do you intend to use the model for?": {
                    "type": "select",
                    "options": [
                        "Research",
                        "Personal use",
                        "Creative Professional",
                        "Startup",
                        "Enterprise"
                    ]
                },
                "I agree to the License Agreement and acknowledge Stability AI's Privacy Policy": "checkbox"
            },
            "language": [
                "en"
            ],
            "pipeline_tag": "text-to-image"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE.md"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "SD3.5L_example_workflow.json"
            },
            {
                "rfilename": "mmdit.png"
            },
            {
                "rfilename": "model_index.json"
            },
            {
                "rfilename": "scheduler/scheduler_config.json"
            },
            {
                "rfilename": "sd3.5_large.safetensors"
            },
            {
                "rfilename": "sd3.5_large_demo.png"
            },
            {
                "rfilename": "text_encoder/config.json"
            },
            {
                "rfilename": "text_encoder/model.fp16.safetensors"
            },
            {
                "rfilename": "text_encoder/model.safetensors"
            },
            {
                "rfilename": "text_encoder_2/config.json"
            },
            {
                "rfilename": "text_encoder_2/model.fp16.safetensors"
            },
            {
                "rfilename": "text_encoder_2/model.safetensors"
            },
            {
                "rfilename": "text_encoder_3/config.json"
            },
            {
                "rfilename": "text_encoder_3/model-00001-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_3/model-00002-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_3/model.fp16-00001-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_3/model.fp16-00002-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_3/model.safetensors.index.fp16.json"
            },
            {
                "rfilename": "text_encoder_3/model.safetensors.index.json"
            },
            {
                "rfilename": "text_encoders/README.md"
            },
            {
                "rfilename": "text_encoders/clip_g.safetensors"
            },
            {
                "rfilename": "text_encoders/clip_l.safetensors"
            },
            {
                "rfilename": "text_encoders/t5xxl_fp16.safetensors"
            },
            {
                "rfilename": "text_encoders/t5xxl_fp8_e4m3fn.safetensors"
            },
            {
                "rfilename": "tokenizer/merges.txt"
            },
            {
                "rfilename": "tokenizer/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer/tokenizer_config.json"
            },
            {
                "rfilename": "tokenizer/vocab.json"
            },
            {
                "rfilename": "tokenizer_2/merges.txt"
            },
            {
                "rfilename": "tokenizer_2/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer_2/tokenizer_config.json"
            },
            {
                "rfilename": "tokenizer_2/vocab.json"
            },
            {
                "rfilename": "tokenizer_3/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer_3/spiece.model"
            },
            {
                "rfilename": "tokenizer_3/tokenizer.json"
            },
            {
                "rfilename": "tokenizer_3/tokenizer_config.json"
            },
            {
                "rfilename": "transformer/config.json"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00001-of-00002.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00002-of-00002.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model.safetensors.index.json"
            },
            {
                "rfilename": "vae/config.json"
            },
            {
                "rfilename": "vae/diffusion_pytorch_model.safetensors"
            }
        ],
        "spaces": [
            "stabilityai/stable-diffusion-3.5-large",
            "Yntec/ToyWorld",
            "Yntec/HuggingfaceDiffusion",
            "Yntec/PrintingPress",
            "NeurixYUFI/imggen",
            "Nymbo/Compare-6",
            "gokaygokay/SD3.5-with-Captioner",
            "InstantX/SD35-IP-Adapter",
            "Nymbo/Stable-Diffusion-3.5-Large-Serverless",
            "gokaygokay/SD3.5-Prompt-Generator",
            "Yntec/blitz_diffusion",
            "alfredplpl/sd3-with-LLM",
            "AlekseyCalvin/Stabled_LoRAs_on_SD3.5_MERGED",
            "Nymbo/Serverless-ImgGen-Hub",
            "PhelpsGG/stabilityai-stable-diffusion-3.5-large",
            "Yntec/StableDiffusion35Large-Image-Models-Test-November-2024",
            "gwada/stabilityai-stable-diffusion-3.5-large",
            "arad1367/Stable_Diffusion_3.5_Large_Customized",
            "SAITAN666/StableDiffusion35Large-Image-Models-Test-November-2024",
            "vasilisklv/genai_story_creation_game",
            "phamngoctukts/assistant",
            "NativeAngels/HuggingfaceDiffusion",
            "Nymbo/stable-diffusion-3.5-large",
            "Svngoku/stable-diffusion-3.5-large",
            "SalvaNanez/stabilityai-stable-diffusion-3.5-large",
            "Meetop/stabilityai-stable-diffusion-3.5-large",
            "THARUN9522/stabilityai-stable-diffusion-3.5-large",
            "anthienlong/stable-diffusion-3.5-large",
            "DanialKing1/stabilityai-stable-diffusion-3.5-large",
            "Abhik0069/stabilityai-stable-diffusion-3.5-large",
            "bgaap/stabilityai-stable-diffusion-3.5-large",
            "aiqcamp/sd35lora",
            "thesab/Grape-Leaf-Disease-Synth-Generator",
            "SeePlay/stabilityai-stable-diffusion-3.5-large",
            "Brian-A/text-to-image",
            "sskoder/stabilityai-stable-diffusion-3.5-large",
            "sunny333/textToImage",
            "ivanusto/stable-diffusion-3.5-large",
            "kaoqy/stabilityai-stable-diffusion-3.5-large",
            "loveitl/stabilityai-stable-diffusion-3.5-large",
            "kaleidoskop-hug/PrintingPress",
            "Surfparadise/stabilityai-stable-diffusion-3.5-large",
            "NativeAngels/ToyWorld",
            "NativeAngels/blitz_diffusion",
            "NativeAngels/PrintingPress",
            "Nymbo/Model-Status-Checker",
            "FradigmaDangerYT/stabilityai-stable-diffusion-3.5-large-r",
            "adamexe/stabilityai-stable-diffusion-3.5-large",
            "FradigmaDangerYT/stabilityai-stable-diffusion-3.5-large",
            "FisheggAwaO/stabilityai-stable-diffusion-3.5-large",
            "AlekseyCalvin/SD35soonrLoRAs",
            "Ivan000/AI-screensaver",
            "Deewmaker/stabilityai-stable-diffusion-3.5-large",
            "JJSer32/stable-diffusion-3.5-large",
            "dfeels/stabilityai-stable-diffusion-3.5-large",
            "SamGro/stabilityai-stable-diffusion-3.5-large",
            "ruchijindal58/stabilityai-stable-diffusion-3.5-large",
            "Han-123/stable-diffusion-3.5-large",
            "chen318/stabilityai-stable-diffusion-3.5-large",
            "setaayesh/stabilityai-stable-diffusion-3.5-large",
            "zombie6868/stabilityai-stable-diffusion-3.5-large",
            "Minorutanaka14052005/stabilityai-stable-diffusion-3.5-large",
            "7ejsud/stabilityai-stable-diffusion-3.5-large",
            "SoulToast/stabilityai-stable-diffusion-3.5-large",
            "yuweiiizz/stable-diffusion-3.5-large",
            "LeX17/stabilityai-stable-diffusion-3.5-large",
            "gonzatoba/stabilityai-stable-diffusion-3.5-large",
            "ACRavelo/stabilityai-stable-diffusion-3.5-large",
            "SpaghettiUniverse/stabilityai-stable-diffusion-3.5-large",
            "TorresCamilo/application",
            "yasu01/stabilityai-stable-diffusion-3.5-large",
            "YFL4K/stabilityai-stable-diffusion-3.5-large",
            "Kareolis/stabilityai-stable-diffusion-3.5-large",
            "Thetutorcyber/stabilityai-stable-diffusion-3.5-large",
            "Alex2027/stabilityai-stable-diffusion-3.5-large",
            "badpiggy/stabilityai-stable-diffusion-3.5-large",
            "Bagusindra/Tesnet",
            "Pedronassif/stabilityai-stable-diffusion-3.5-large",
            "MarsimoWs/stabilityai-stable-diffusion-3.5-large",
            "Zsa45/stabilityai-stable-diffusion-3.5-large",
            "fifosifo/Stable-Diffusion-3.5-Large-Serverless",
            "dongdong961/stabilityai-stable-diffusion-3.5-large",
            "djberube/stabilityai-stable-diffusion-3.5-large",
            "davidAbrahan/stabilityai-stable-diffusion-3.5-large",
            "TruffleFrog/stabilityai-stable-diffusion-3.5-large",
            "FaceHugger987/stabilityai-stable-diffusion-3.5-large",
            "JUZbox013/stabilityai-stable-diffusion-3.5-large",
            "K00B404/Stable-Diffusion-3.5-Serverless",
            "keshav6936/stabilityai-stable-diffusion-3.5-large",
            "Samshantj/stabilityai-stable-diffusion-3.5-large",
            "falconX90/stabilityai-stable-diffusion-3.5-large",
            "Sp00K1/stable-diffusion-3.5-large",
            "Davidyulianto/stable-diffusion-3.5-large",
            "Samba666/stabilityai-stable-diffusion-3.5-large",
            "haccourt/stabilityai-stable-diffusion-3.5-large",
            "ashkck/stabilityai-stable-diffusion-3.5-large",
            "michellemoorre/tvar-demo-test",
            "ashkck/stabilityai-stable-diffusion-3.5-large2",
            "ordlibrary/stabilityai-stable-diffusion-3.5-large",
            "iliciuv/stable-diffusion-3.5-large"
        ],
        "createdAt": "2024-10-22T07:29:57.000Z"
    },
    {
        "_id": "6719780ff0c8667c0c7b09ec",
        "id": "NexaAIDev/Qwen2-Audio-7B-GGUF",
        "modelId": "NexaAIDev/Qwen2-Audio-7B-GGUF",
        "author": "NexaAIDev",
        "sha": "2575ff772a3a7c4e6ac56fb2ad0f077c038c10c8",
        "lastModified": "2024-11-25T17:58:01.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "audio-text-to-text",
        "tags": [
            "gguf",
            "audio-text-to-text",
            "chat",
            "audio",
            "GGUF",
            "en",
            "license:apache-2.0",
            "endpoints_compatible",
            "region:us",
            "conversational"
        ],
        "downloads": 10015,
        "likes": 94,
        "model-index": null,
        "cardData": {
            "license": "apache-2.0",
            "language": [
                "en"
            ],
            "tags": [
                "audio-text-to-text",
                "chat",
                "audio",
                "GGUF"
            ]
        },
        "gguf": {
            "total": 7754878976,
            "architecture": "qwen2",
            "context_length": 8192,
            "chat_template": "{% for message in messages %}{% if loop.first and messages[0]['role'] != 'system' %}{{ '<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n' }}{% endif %}{{'<|im_start|>' + message['role'] + '\n' + message['content'] + '<|im_end|>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant\n' }}{% endif %}",
            "bos_token": "<|endoftext|>",
            "eos_token": "<|im_end|>"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "Qwen2-7B-LLM-F16.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q2_K.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q3_K_L.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q3_K_M.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q3_K_S.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q4_0.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q4_1.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q4_K_M.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q4_K_S.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q5_0.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q5_1.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q5_K_M.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q5_K_S.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q6_K.gguf"
            },
            {
                "rfilename": "Qwen2-7B-LLM-Q8_0.gguf"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "qwen2-audio-projector.gguf"
            }
        ],
        "spaces": [],
        "createdAt": "2024-10-23T22:26:23.000Z"
    },
    {
        "_id": "670f49deae6d318c23d3d249",
        "id": "seawolf2357/ntower",
        "modelId": "seawolf2357/ntower",
        "author": "seawolf2357",
        "sha": "286feaf49a72bb784f3c5889aa56439aff248474",
        "lastModified": "2024-10-16T05:19:30.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "text-to-image",
            "flux",
            "lora",
            "template:sd-lora",
            "ai-toolkit",
            "base_model:black-forest-labs/FLUX.1-dev",
            "base_model:adapter:black-forest-labs/FLUX.1-dev",
            "license:other",
            "region:us"
        ],
        "downloads": 866,
        "library_name": "diffusers",
        "widgetData": [
            {
                "text": "the Namsan Tower in korea seoul, surrounded by trees and buildings. The sky is visible in the background, and there are watermarks on the image. [trigger]",
                "output": {
                    "url": "https://huggingface.co/seawolf2357/ntower/resolve/main/samples/1729055195774__000001000_0.jpg"
                }
            }
        ],
        "likes": 94,
        "model-index": null,
        "cardData": {
            "tags": [
                "text-to-image",
                "flux",
                "lora",
                "diffusers",
                "template:sd-lora",
                "ai-toolkit"
            ],
            "widget": [
                {
                    "text": "the Namsan Tower in korea seoul, surrounded by trees and buildings. The sky is visible in the background, and there are watermarks on the image. [trigger]",
                    "output": {
                        "url": "https://huggingface.co/seawolf2357/ntower/resolve/main/samples/1729055195774__000001000_0.jpg"
                    }
                }
            ],
            "base_model": "black-forest-labs/FLUX.1-dev",
            "instance_prompt": "namsan tower",
            "license": "other",
            "license_name": "flux-1-dev-non-commercial-license",
            "license_link": "https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "ntower.safetensors"
            },
            {
                "rfilename": "samples/1729055195774__000001000_0.jpg"
            }
        ],
        "spaces": [],
        "createdAt": "2024-10-16T05:06:38.000Z"
    },
    {
        "_id": "66eaebb25fcdca258b9576cb",
        "id": "meta-llama/Llama-3.2-1B",
        "modelId": "meta-llama/Llama-3.2-1B",
        "author": "meta-llama",
        "sha": "4e20de362430cd3b72f300e6b0f18e50e7166e08",
        "lastModified": "2024-10-24T15:08:03.000Z",
        "private": false,
        "disabled": false,
        "gated": "manual",
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "safetensors",
            "llama",
            "text-generation",
            "facebook",
            "meta",
            "pytorch",
            "llama-3",
            "en",
            "de",
            "fr",
            "it",
            "pt",
            "hi",
            "es",
            "th",
            "arxiv:2204.05149",
            "arxiv:2405.16406",
            "license:llama3.2",
            "autotrain_compatible",
            "text-generation-inference",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 1562437,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "My name is Julien and I like to"
            },
            {
                "text": "My name is Thomas and my main"
            },
            {
                "text": "My name is Mariama, my favorite"
            },
            {
                "text": "My name is Clara and I am"
            },
            {
                "text": "My name is Lewis and I like to"
            },
            {
                "text": "My name is Merve and my favorite"
            },
            {
                "text": "My name is Teven and I am"
            },
            {
                "text": "Once upon a time,"
            }
        ],
        "likes": 1105,
        "model-index": null,
        "config": {
            "architectures": [
                "LlamaForCausalLM"
            ],
            "model_type": "llama",
            "tokenizer_config": {
                "bos_token": "<|begin_of_text|>",
                "eos_token": "<|end_of_text|>"
            }
        },
        "cardData": {
            "language": [
                "en",
                "de",
                "fr",
                "it",
                "pt",
                "hi",
                "es",
                "th"
            ],
            "library_name": "transformers",
            "pipeline_tag": "text-generation",
            "tags": [
                "facebook",
                "meta",
                "pytorch",
                "llama",
                "llama-3"
            ],
            "license": "llama3.2",
            "extra_gated_prompt": "### LLAMA 3.2 COMMUNITY LICENSE AGREEMENT\n\nLlama 3.2 Version Release Date: September 25, 2024\n\n“Agreement” means the terms and conditions for use, reproduction, distribution  and modification of the Llama Materials set forth herein.\n\n“Documentation” means the specifications, manuals and documentation accompanying Llama 3.2 distributed by Meta at https://llama.meta.com/doc/overview.\n\n“Licensee” or “you” means you, or your employer or any other person or entity (if you are  entering into this Agreement on such person or entity’s behalf), of the age required under applicable laws, rules or regulations to provide legal consent and that has legal authority to bind your employer or such other person or entity if you are entering in this Agreement on their behalf.\n\n“Llama 3.2” means the foundational large language models and software and algorithms, including machine-learning model code, trained model weights, inference-enabling code, training-enabling code, fine-tuning enabling code and other elements of the foregoing distributed by Meta at  https://www.llama.com/llama-downloads.\n\n“Llama Materials” means, collectively, Meta’s proprietary Llama 3.2 and Documentation (and  any portion thereof) made available under this Agreement.\n\n“Meta” or “we” means Meta Platforms Ireland Limited (if you are located in or,  if you are an entity, your principal place of business is in the EEA or Switzerland)  and Meta Platforms, Inc. (if you are located outside of the EEA or Switzerland). \n\nBy clicking “I Accept” below or by using or distributing any portion or element of the Llama Materials, you agree to be bound by this Agreement.\n\n1. License Rights and Redistribution.\na. Grant of Rights. You are granted a non-exclusive, worldwide,  non-transferable and royalty-free limited license under Meta’s intellectual property or other rights  owned by Meta embodied in the Llama Materials to use, reproduce, distribute, copy, create derivative works  of, and make modifications to the Llama Materials.  \nb. Redistribution and Use.  \ni. If you distribute or make available the Llama Materials (or any derivative works thereof),  or a product or service (including another AI model) that contains any of them, you shall (A) provide a copy of this Agreement with any such Llama Materials; and (B) prominently display “Built with Llama” on a related website, user interface, blogpost, about page, or product documentation. If you use the Llama Materials or any outputs or results of the Llama Materials to create, train, fine tune, or otherwise improve an AI model, which is distributed or made available, you shall also include “Llama” at the beginning of any such AI model name.\nii. If you receive Llama Materials, or any derivative works thereof, from a Licensee as part of an integrated end user product, then Section 2 of this Agreement will not apply to you. \niii. You must retain in all copies of the Llama Materials that you distribute the  following attribution notice within a “Notice” text file distributed as a part of such copies:  “Llama 3.2 is licensed under the Llama 3.2 Community License, Copyright © Meta Platforms, Inc. All Rights Reserved.”\niv. Your use of the Llama Materials must comply with applicable laws and regulations (including trade compliance laws and regulations) and adhere to the Acceptable Use Policy for the Llama Materials (available at https://www.llama.com/llama3_2/use-policy), which is hereby  incorporated by reference into this Agreement.\n  \n2. Additional Commercial Terms. If, on the Llama 3.2 version release date, the monthly active users of the products or services made available by or for Licensee, or Licensee’s affiliates,  is greater than 700 million monthly active users in the preceding calendar month, you must request  a license from Meta, which Meta may grant to you in its sole discretion, and you are not authorized to exercise any of the rights under this Agreement unless or until Meta otherwise expressly grants you such rights.\n3. Disclaimer of Warranty. UNLESS REQUIRED BY APPLICABLE LAW, THE LLAMA MATERIALS AND ANY OUTPUT AND  RESULTS THEREFROM ARE PROVIDED ON AN “AS IS” BASIS, WITHOUT WARRANTIES OF ANY KIND, AND META DISCLAIMS ALL WARRANTIES OF ANY KIND, BOTH EXPRESS AND IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE. YOU ARE SOLELY RESPONSIBLE FOR DETERMINING THE APPROPRIATENESS OF USING OR REDISTRIBUTING THE LLAMA MATERIALS AND ASSUME ANY RISKS ASSOCIATED WITH YOUR USE OF THE LLAMA MATERIALS AND ANY OUTPUT AND RESULTS.\n4. Limitation of Liability. IN NO EVENT WILL META OR ITS AFFILIATES BE LIABLE UNDER ANY THEORY OF LIABILITY,  WHETHER IN CONTRACT, TORT, NEGLIGENCE, PRODUCTS LIABILITY, OR OTHERWISE, ARISING OUT OF THIS AGREEMENT,  FOR ANY LOST PROFITS OR ANY INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR PUNITIVE DAMAGES, EVEN  IF META OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF ANY OF THE FOREGOING.\n5. Intellectual Property.\na. No trademark licenses are granted under this Agreement, and in connection with the Llama Materials,  neither Meta nor Licensee may use any name or mark owned by or associated with the other or any of its affiliates,  except as required for reasonable and customary use in describing and redistributing the Llama Materials or as  set forth in this Section 5(a). Meta hereby grants you a license to use “Llama” (the “Mark”) solely as required  to comply with the last sentence of Section 1.b.i. You will comply with Meta’s brand guidelines (currently accessible  at https://about.meta.com/brand/resources/meta/company-brand/). All goodwill arising out of your use of the Mark  will inure to the benefit of Meta.\nb. Subject to Meta’s ownership of Llama Materials and derivatives made by or for Meta, with respect to any derivative works and modifications of the Llama Materials that are made by you, as between you and Meta, you are and will be the owner of such derivative works and modifications.\nc. If you institute litigation or other proceedings against Meta or any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Llama Materials or Llama 3.2 outputs or results, or any portion of any of the foregoing, constitutes infringement of intellectual property or other rights owned or licensable by you, then any licenses granted to you under this Agreement shall terminate as of the date such litigation or claim is filed or instituted. You will indemnify and hold harmless Meta from and against any claim by any third party arising out of or related to your use or distribution of the Llama Materials.\n6. Term and Termination. The term of this Agreement will commence upon your acceptance of this Agreement or access to the Llama Materials and will continue in full force and effect until terminated in accordance with the terms and conditions herein. Meta may terminate this Agreement if you are in breach of any term or condition of this Agreement. Upon termination of this Agreement, you shall delete and cease use of the Llama Materials. Sections 3, 4 and 7 shall survive the termination of this Agreement. \n7. Governing Law and Jurisdiction. This Agreement will be governed and construed under the laws of the State of  California without regard to choice of law principles, and the UN Convention on Contracts for the International Sale of Goods does not apply to this Agreement. The courts of California shall have exclusive jurisdiction of any dispute arising out of this Agreement. \n### Llama 3.2 Acceptable Use Policy\nMeta is committed to promoting safe and fair use of its tools and features, including Llama 3.2.  If you access or use Llama 3.2, you agree to this Acceptable Use Policy (“**Policy**”).  The most recent copy of this policy can be found at [https://www.llama.com/llama3_2/use-policy](https://www.llama.com/llama3_2/use-policy).\n#### Prohibited Uses\nWe want everyone to use Llama 3.2 safely and responsibly. You agree you will not use, or allow others to use, Llama 3.2 to:\n1. Violate the law or others’ rights, including to:\n    1. Engage in, promote, generate, contribute to, encourage, plan, incite, or further illegal or unlawful activity or content, such as:\n        1. Violence or terrorism\n        2. Exploitation or harm to children, including the solicitation, creation, acquisition, or dissemination of child exploitative content or failure to report Child Sexual Abuse Material\n        3. Human trafficking, exploitation, and sexual violence\n        4. The illegal distribution of information or materials to minors, including obscene materials, or failure to employ legally required age-gating in connection with such information or materials.\n        5. Sexual solicitation\n        6. Any other criminal activity\n    1. Engage in, promote, incite, or facilitate the harassment, abuse, threatening, or bullying of individuals or groups of individuals\n    2. Engage in, promote, incite, or facilitate discrimination or other unlawful or harmful conduct in the provision of employment, employment benefits, credit, housing, other economic benefits, or other essential goods and services\n    3. Engage in the unauthorized or unlicensed practice of any profession including, but not limited to, financial, legal, medical/health, or related professional practices\n    4. Collect, process, disclose, generate, or infer private or sensitive information about individuals, including information about individuals’ identity, health, or demographic information, unless you have obtained the right to do so in accordance with applicable law\n    5. Engage in or facilitate any action or generate any content that infringes, misappropriates, or otherwise violates any third-party rights, including the outputs or results of any products or services using the Llama Materials\n    6. Create, generate, or facilitate the creation of malicious code, malware, computer viruses or do anything else that could disable, overburden, interfere with or impair the proper working, integrity, operation or appearance of a website or computer system\n    7. Engage in any action, or facilitate any action, to intentionally circumvent or remove usage restrictions or other safety measures, or to enable functionality disabled by Meta \n2. Engage in, promote, incite, facilitate, or assist in the planning or development of activities that present a risk of death or bodily harm to individuals, including use of Llama 3.2 related to the following:\n    8. Military, warfare, nuclear industries or applications, espionage, use for materials or activities that are subject to the International Traffic Arms Regulations (ITAR) maintained by the United States Department of State or to the U.S. Biological Weapons Anti-Terrorism Act of 1989 or the Chemical Weapons Convention Implementation Act of 1997\n    9. Guns and illegal weapons (including weapon development)\n    10. Illegal drugs and regulated/controlled substances\n    11. Operation of critical infrastructure, transportation technologies, or heavy machinery\n    12. Self-harm or harm to others, including suicide, cutting, and eating disorders\n    13. Any content intended to incite or promote violence, abuse, or any infliction of bodily harm to an individual\n3. Intentionally deceive or mislead others, including use of Llama 3.2 related to the following:\n    14. Generating, promoting, or furthering fraud or the creation or promotion of disinformation\n    15. Generating, promoting, or furthering defamatory content, including the creation of defamatory statements, images, or other content\n    16. Generating, promoting, or further distributing spam\n    17. Impersonating another individual without consent, authorization, or legal right\n    18. Representing that the use of Llama 3.2 or outputs are human-generated\n    19. Generating or facilitating false online engagement, including fake reviews and other means of fake online engagement \n4. Fail to appropriately disclose to end users any known dangers of your AI system 5. Interact with third party tools, models, or software designed to generate unlawful content or engage in unlawful or harmful conduct and/or represent that the outputs of such tools, models, or software are associated with Meta or Llama 3.2\n\nWith respect to any multimodal models included in Llama 3.2, the rights granted under Section 1(a) of the Llama 3.2 Community License Agreement are not being granted to you if you are an individual domiciled in, or a company with a principal place of business in, the European Union. This restriction does not apply to end users of a product or service that incorporates any such multimodal models.\n\nPlease report any violation of this Policy, software “bug,” or other problems that could lead to a violation of this Policy through one of the following means:\n\n* Reporting issues with the model: [https://github.com/meta-llama/llama-models/issues](https://l.workplace.com/l.php?u=https%3A%2F%2Fgithub.com%2Fmeta-llama%2Fllama-models%2Fissues&h=AT0qV8W9BFT6NwihiOHRuKYQM_UnkzN_NmHMy91OT55gkLpgi4kQupHUl0ssR4dQsIQ8n3tfd0vtkobvsEvt1l4Ic6GXI2EeuHV8N08OG2WnbAmm0FL4ObkazC6G_256vN0lN9DsykCvCqGZ)\n* Reporting risky content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)\n* Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)\n* Reporting violations of the Acceptable Use Policy or unlicensed uses of Llama 3.2: LlamaUseReport@meta.com",
            "extra_gated_fields": {
                "First Name": "text",
                "Last Name": "text",
                "Date of birth": "date_picker",
                "Country": "country",
                "Affiliation": "text",
                "Job title": {
                    "type": "select",
                    "options": [
                        "Student",
                        "Research Graduate",
                        "AI researcher",
                        "AI developer/engineer",
                        "Reporter",
                        "Other"
                    ]
                },
                "geo": "ip_location",
                "By clicking Submit below I accept the terms of the license and acknowledge that the information I provide will be collected stored processed and shared in accordance with the Meta Privacy Policy": "checkbox"
            },
            "extra_gated_description": "The information you provide will be collected, stored, processed and shared in accordance with the [Meta Privacy Policy](https://www.facebook.com/privacy/policy/).",
            "extra_gated_button_content": "Submit"
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "pipeline_tag": "text-generation",
            "processor": "AutoTokenizer"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE.txt"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "USE_POLICY.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "model.safetensors"
            },
            {
                "rfilename": "original/consolidated.00.pth"
            },
            {
                "rfilename": "original/params.json"
            },
            {
                "rfilename": "original/tokenizer.model"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [
            "Sarath0x8f/Document-QA-bot",
            "Vishal3152/meta-llama-Llama-3.2-1B",
            "solnone/meta-llama-Llama-3.2-1B",
            "M4A132/mixtral-46.7b-fastapi2",
            "msaifee/LLaMA-3-2-Text-Generator",
            "Minorutanaka14052005/meta-llama-Llama-3.2-1Bk",
            "Chris4K/More_Advanced_Embeddings_Comparator",
            "sailfish/lightweight-chat",
            "samyaic/meta-llama-Llama-3.2-1B",
            "e-nigma/meta-llama-Llama-3.2-1B",
            "LucasBrito06/meta-llama-Llama-3.2-1B",
            "kushbhandari/Llama-3.2-1B",
            "FradigmaDangerYT/meta-llayama-Llamaya-3.2-1B",
            "frimponge/Generative_AI_with_poultry_disease_detection_system",
            "abhilashnl2006/EmailGenie",
            "Sabbah13/meta-llama-Llama-3.2-1B",
            "AIMattrs/meta-llama-Llama-3.2-1B",
            "Instancy/meta-llama-Llama-3.2-1B",
            "andika16/meta-llama-Llama-3.2-1B",
            "ObindiG/moto",
            "mtcporto/meta-llama-Llama-3.2-1B",
            "Minorutanaka14052005/meta-llama-Llama-3.2-1B",
            "Minorutanaka14052005/meta-llama-Llama-3.2-1Bm",
            "ZelonPrograms/meta-llama-Llama-3.2-1B",
            "erstrik/meta-llama-Llama-3.2-1B",
            "starting123/mentlly",
            "Fzina/Llama-3.21-B",
            "MozartKato/meta-llama-Llama-3.2-1B",
            "emirkaanozdemr/Trendyol-Hackhathon",
            "timallred/Test_2",
            "avinashmerkle/meta-llama-Llama-3.2-1B",
            "Topicos-IA/Practica4",
            "AleDiazT/ModelPrompt",
            "8u9i/meta-llama-Llama-3.2-1B",
            "QWERTYertj/meta-llama-Llama-3.2-1B",
            "sinceweb/meta-llama-Llama-3.2-1B",
            "Shanat/chtbt_tst",
            "rasyosef/Llama-3.2-Amharic",
            "BetoMenten/BEM",
            "crystal99/meta-llama-Llama-3.2-1B",
            "Shanat/chtbt_rag",
            "internet-zero/flash_prompt",
            "tech-Dk/meta-llama-Llama-3.2-1B",
            "Dylankr1/meta-llama-Llama-3.2-1B",
            "dominiconorton/meta-llama-Llama-3.2-1B-Chipp",
            "Gihani111/meta-llama-Llama-3.2-1B",
            "staythepath/meta-llama-Llama-3.2-1B",
            "MyraLadiosa/meta-llama-Llama-3.2-1B",
            "nicpopovic/ember",
            "JamesDuong7/OpenBioLLM8BAPI",
            "VHKad/meta-llama-Llama-3.2-1B",
            "hamzaeejaaz/meta-llama-Llama-3.2-1Ba",
            "yj920/meta-llama-Llama-3.2-1B",
            "nicpopovic/ember_details",
            "ImBetterThanYesterday/NLPS-COURSE-2024-3",
            "UnionJack/CarlosElMejor",
            "hamsomp3/tecnicas2024",
            "juanmandrader/tecnicas2024",
            "Zerox6/tecnicas2024",
            "Use1123456789/Ejercicio1",
            "EdwSanIA/tecnicas2024",
            "darioparejadiaz/llamatest2024-2",
            "michael-munoz/tecnicas2024",
            "Valleco/Vallecollama",
            "Sebastian721/tri",
            "js-uao/llm_2024",
            "Kevin2801/tecnicas2024",
            "KarenVargasHurtado/LLMs",
            "vinzcyun/meta-llama-Llama-3.2-1B",
            "Andres1118/Clase1",
            "TeamRemoteWork/Llama-Test",
            "Niyaki/meta-llama-Llama-3.2-1B",
            "Ansh488854895/meta-llama-Llama-3.2-1B",
            "dineshhv/meta-llama-Llama-3.2-1B",
            "wagnew3/meta-llama-Llama-3.2-1B",
            "fsadeek/meta-llama-Llama-3.2-1B",
            "jay1325/meta-llama-Llama-3.2-1B",
            "danrdoran/ai_tutor_llama",
            "Kevin2801/bla",
            "akhaliq/meta-llama-Llama-3.2-1B",
            "krishnk/tested",
            "JusyMara/tecnicas2024",
            "arryuann/meta-llama-Llama-3.2-1B",
            "montorog/meta-llama-Llama-3.2-1B",
            "goatley/meta-llama-Llama-3.2-1B",
            "LLAI2004/meta-llama-Llama-3.2-1B",
            "nkundtz11/aboutme",
            "thomas316/meta-llama-Llama-3.2-1B",
            "Aslamsk777/meta-llama-Llama-3.2-1B",
            "piyushkr303/CP_Solver",
            "danielritchie/october-bwc-workshop",
            "ellthehugger/try_this_out",
            "papaemmobear/spinnakerAI",
            "danielritchie/meta32",
            "Mars-Signvrse/gross-llama3.2-1b",
            "bainskarman/ATSScanner",
            "BICORP/meta-llama-Llama-3.2-1B",
            "DraxJC/Tecnicas2024",
            "jonerruiz/meta-llama_Llama-3.2-1B",
            "Chilliming/meta-llama-Llama-3.2-1B"
        ],
        "createdAt": "2024-09-18T15:03:14.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 1235814400
            },
            "total": 1235814400
        }
    },
    {
        "_id": "670f102cd1996bbd07e603c5",
        "id": "seawolf2357/hanbok",
        "modelId": "seawolf2357/hanbok",
        "author": "seawolf2357",
        "sha": "50baf043eb36e5c73cb91dbb9bdd9549a09bb592",
        "lastModified": "2024-10-16T01:07:22.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "text-to-image",
            "flux",
            "lora",
            "template:sd-lora",
            "ai-toolkit",
            "base_model:black-forest-labs/FLUX.1-dev",
            "base_model:adapter:black-forest-labs/FLUX.1-dev",
            "license:other",
            "region:us"
        ],
        "downloads": 421,
        "library_name": "diffusers",
        "widgetData": [
            {
                "text": "a woman wearing a traditional Korean Hanbok, a long-sleeved blouse with intricate embroidery and a high-waisted skirt. The blouse is a deep blue color with a white collar and cuffs, and the skirt is a lighter shade of blue with a pattern of small white flowers. The woman is standing in a graceful pose, her hands clasped in front of her and her head tilted slightly to the side. [trigger]",
                "output": {
                    "url": "https://huggingface.co/seawolf2357/hanbok/resolve/main/samples/1729040425975__000001000_0.jpg"
                }
            }
        ],
        "likes": 92,
        "model-index": null,
        "cardData": {
            "tags": [
                "text-to-image",
                "flux",
                "lora",
                "diffusers",
                "template:sd-lora",
                "ai-toolkit"
            ],
            "widget": [
                {
                    "text": "a woman wearing a traditional Korean Hanbok, a long-sleeved blouse with intricate embroidery and a high-waisted skirt. The blouse is a deep blue color with a white collar and cuffs, and the skirt is a lighter shade of blue with a pattern of small white flowers. The woman is standing in a graceful pose, her hands clasped in front of her and her head tilted slightly to the side. [trigger]",
                    "output": {
                        "url": "https://huggingface.co/seawolf2357/hanbok/resolve/main/samples/1729040425975__000001000_0.jpg"
                    }
                }
            ],
            "base_model": "black-forest-labs/FLUX.1-dev",
            "instance_prompt": "hanbok",
            "license": "other",
            "license_name": "flux-1-dev-non-commercial-license",
            "license_link": "https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "hanbok.safetensors"
            },
            {
                "rfilename": "samples/1729040425975__000001000_0.jpg"
            }
        ],
        "spaces": [
            "openfree/mixgen3",
            "openfree/ginigen-gallery",
            "openfree/ginigen-gallery-backup"
        ],
        "createdAt": "2024-10-16T01:00:28.000Z"
    },
    {
        "_id": "6723ae720a41008803294eff",
        "id": "nvidia/Hymba-1.5B-Instruct",
        "modelId": "nvidia/Hymba-1.5B-Instruct",
        "author": "nvidia",
        "sha": "88c5c58816070544c8c053548243f0e6dda8b898",
        "lastModified": "2024-11-29T16:23:18.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "safetensors",
            "hymba",
            "text-generation",
            "conversational",
            "custom_code",
            "arxiv:2411.13676",
            "base_model:nvidia/Hymba-1.5B-Base",
            "base_model:finetune:nvidia/Hymba-1.5B-Base",
            "license:other",
            "autotrain_compatible",
            "region:us"
        ],
        "downloads": 4711,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 167,
        "model-index": null,
        "config": {
            "architectures": [
                "HymbaForCausalLM"
            ],
            "auto_map": {
                "AutoConfig": "configuration_hymba.HymbaConfig",
                "AutoModelForCausalLM": "modeling_hymba.HymbaForCausalLM"
            },
            "model_type": "hymba",
            "tokenizer_config": {
                "bos_token": "<s>",
                "chat_template": "{{'<extra_id_0>System'}}{% for message in messages %}{% if message['role'] == 'system' %}{{'\n' + message['content'].strip()}}{% if tools or contexts %}{{'\n'}}{% endif %}{% endif %}{% endfor %}{% if tools %}{% for tool in tools %}{{ '\n<tool> ' + tool|tojson + ' </tool>' }}{% endfor %}{% endif %}{% if contexts %}{% if tools %}{{'\n'}}{% endif %}{% for context in contexts %}{{ '\n<context> ' + context.strip() + ' </context>' }}{% endfor %}{% endif %}{{'\n\n'}}{% for message in messages %}{% if message['role'] == 'user' %}{{ '<extra_id_1>User\n' + message['content'].strip() + '\n' }}{% elif message['role'] == 'assistant' %}{{ '<extra_id_1>Assistant\n' + message['content'].strip() + '\n' }}{% elif message['role'] == 'tool' %}{{ '<extra_id_1>Tool\n' + message['content'].strip() + '\n' }}{% endif %}{% endfor %}{%- if add_generation_prompt %}{{'<extra_id_1>Assistant\n'}}{%- endif %}",
                "eos_token": "</s>",
                "pad_token": "[PAD]",
                "unk_token": "<unk>",
                "use_default_system_prompt": false
            }
        },
        "cardData": {
            "library_name": "transformers",
            "license": "other",
            "license_name": "nvidia-open-model-license",
            "license_link": "https://developer.download.nvidia.com/licenses/nvidia-open-model-license-agreement-june-2024.pdf",
            "pipeline_tag": "text-generation",
            "base_model": [
                "nvidia/Hymba-1.5B-Base"
            ]
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "custom_class": "modeling_hymba.HymbaForCausalLM",
            "pipeline_tag": "text-generation"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "added_tokens.json"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "configuration_hymba.py"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "images/instruct_performance.png"
            },
            {
                "rfilename": "images/macro_arch.png"
            },
            {
                "rfilename": "images/module.png"
            },
            {
                "rfilename": "instruct_performance.png"
            },
            {
                "rfilename": "model.safetensors"
            },
            {
                "rfilename": "modeling_hymba.py"
            },
            {
                "rfilename": "setup.sh"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer.model"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [
            "Locon213/nvidia_Hymba-1.5B-Instruct",
            "pmolchanov/Hymba-chat",
            "DJakie/nvidia-Hymba-1.5B-Instruct",
            "spedrox-sac/nvidia-Hymba-1.5B-Instruct"
        ],
        "createdAt": "2024-10-31T16:21:06.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 1522797824
            },
            "total": 1522797824
        }
    },
    {
        "_id": "673e3ca06045033e62a4c72b",
        "id": "black-forest-labs/FLUX.1-Redux-dev",
        "modelId": "black-forest-labs/FLUX.1-Redux-dev",
        "author": "black-forest-labs",
        "sha": "1282f955f706b5240161278f2ef261d2a29ad649",
        "lastModified": "2024-11-25T22:49:32.000Z",
        "private": false,
        "disabled": false,
        "gated": "auto",
        "tags": [
            "diffusers",
            "safetensors",
            "image-generation",
            "flux",
            "diffusion-single-file",
            "en",
            "license:other",
            "diffusers:FluxPriorReduxPipeline",
            "region:us"
        ],
        "downloads": 19421,
        "library_name": "diffusers",
        "likes": 234,
        "model-index": null,
        "config": {
            "diffusers": {
                "_class_name": "FluxPriorReduxPipeline"
            }
        },
        "cardData": {
            "language": [
                "en"
            ],
            "license": "other",
            "license_name": "flux-1-dev-non-commercial-license",
            "license_link": "LICENSE.md",
            "extra_gated_prompt": "By clicking \"Agree\", you agree to the [FluxDev Non-Commercial License Agreement](https://huggingface.co/black-forest-labs/FLUX.1-Depth-dev/blob/main/LICENSE.md) and acknowledge the [Acceptable Use Policy](https://huggingface.co/black-forest-labs/FLUX.1-Depth-dev/blob/main/POLICY.md).",
            "tags": [
                "image-generation",
                "flux",
                "diffusion-single-file"
            ]
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE.md"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "feature_extractor/preprocessor_config.json"
            },
            {
                "rfilename": "flux1-redux-dev.safetensors"
            },
            {
                "rfilename": "image_embedder/config.json"
            },
            {
                "rfilename": "image_embedder/diffusion_pytorch_model.safetensors"
            },
            {
                "rfilename": "image_encoder/config.json"
            },
            {
                "rfilename": "image_encoder/model.safetensors"
            },
            {
                "rfilename": "model_index.json"
            },
            {
                "rfilename": "redux.png"
            }
        ],
        "spaces": [
            "black-forest-labs/FLUX.1-Redux-dev",
            "MohamedRashad/Flux-Redux",
            "aifeifei798/DarkIdol-FLUX.1-Redux-dev",
            "Nymbo/Flux-Redux"
        ],
        "createdAt": "2024-11-20T19:46:40.000Z"
    },
    {
        "_id": "6748c1ca7c6a657251447b66",
        "id": "PrimeIntellect/INTELLECT-1-Instruct",
        "modelId": "PrimeIntellect/INTELLECT-1-Instruct",
        "author": "PrimeIntellect",
        "sha": "14d9716e61324759fffd57b91d13db19765ca1c0",
        "lastModified": "2024-11-29T20:17:26.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "safetensors",
            "llama",
            "text-generation",
            "conversational",
            "en",
            "dataset:PrimeIntellect/fineweb-edu",
            "dataset:PrimeIntellect/fineweb",
            "dataset:PrimeIntellect/StackV1-popular",
            "dataset:mlfoundations/dclm-baseline-1.0-parquet",
            "dataset:open-web-math/open-web-math",
            "dataset:arcee-ai/EvolKit-75K",
            "dataset:arcee-ai/Llama-405B-Logits",
            "dataset:arcee-ai/The-Tomb",
            "dataset:mlabonne/open-perfectblend-fixed",
            "dataset:microsoft/orca-agentinstruct-1M-v1-cleaned",
            "dataset:Post-training-Data-Flywheel/AutoIF-instruct-61k-with-funcs",
            "dataset:Team-ACE/ToolACE",
            "dataset:Synthia-coder",
            "dataset:ServiceNow-AI/M2Lingual",
            "dataset:AI-MO/NuminaMath-TIR",
            "dataset:allenai/tulu-3-sft-personas-code",
            "dataset:allenai/tulu-3-sft-personas-math",
            "dataset:allenai/tulu-3-sft-personas-math-grade",
            "dataset:allenai/tulu-3-sft-personas-algebra",
            "arxiv:2311.08105",
            "base_model:PrimeIntellect/INTELLECT-1",
            "base_model:finetune:PrimeIntellect/INTELLECT-1",
            "license:apache-2.0",
            "region:us"
        ],
        "downloads": 1549,
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 65,
        "model-index": null,
        "config": {
            "architectures": [
                "LlamaForCausalLM"
            ],
            "model_type": "llama",
            "tokenizer_config": {
                "bos_token": "<|begin_of_text|>",
                "chat_template": "{% if not add_generation_prompt is defined %}{% set add_generation_prompt = false %}{% endif %}{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{% if add_generation_prompt %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{% endif %}",
                "eos_token": "<|eot_id|>",
                "pad_token": "<|reserved_special_token_250|>"
            }
        },
        "cardData": {
            "license": "apache-2.0",
            "datasets": [
                "PrimeIntellect/fineweb-edu",
                "PrimeIntellect/fineweb",
                "PrimeIntellect/StackV1-popular",
                "mlfoundations/dclm-baseline-1.0-parquet",
                "open-web-math/open-web-math",
                "arcee-ai/EvolKit-75K",
                "arcee-ai/Llama-405B-Logits",
                "arcee-ai/The-Tomb",
                "mlabonne/open-perfectblend-fixed",
                "microsoft/orca-agentinstruct-1M-v1-cleaned",
                "Post-training-Data-Flywheel/AutoIF-instruct-61k-with-funcs",
                "Team-ACE/ToolACE",
                "Synthia-coder",
                "ServiceNow-AI/M2Lingual",
                "AI-MO/NuminaMath-TIR",
                "allenai/tulu-3-sft-personas-code",
                "allenai/tulu-3-sft-personas-math",
                "allenai/tulu-3-sft-personas-math-grade",
                "allenai/tulu-3-sft-personas-algebra"
            ],
            "language": [
                "en"
            ],
            "base_model": [
                "PrimeIntellect/INTELLECT-1"
            ],
            "pipeline_tag": "text-generation"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "intellect-1-map.png"
            },
            {
                "rfilename": "model-00001-of-00005.safetensors"
            },
            {
                "rfilename": "model-00002-of-00005.safetensors"
            },
            {
                "rfilename": "model-00003-of-00005.safetensors"
            },
            {
                "rfilename": "model-00004-of-00005.safetensors"
            },
            {
                "rfilename": "model-00005-of-00005.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [],
        "createdAt": "2024-11-28T19:17:30.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 10211381248
            },
            "total": 10211381248
        }
    },
    {
        "_id": "671755e338bc25eac38bbd59",
        "id": "genmo/mochi-1-preview",
        "modelId": "genmo/mochi-1-preview",
        "author": "genmo",
        "sha": "89a09a455fa0fd17b61a4c8a633067984f57bd9f",
        "lastModified": "2024-11-22T04:27:17.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-video",
        "tags": [
            "diffusers",
            "safetensors",
            "video",
            "genmo",
            "text-to-video",
            "en",
            "license:apache-2.0",
            "diffusers:MochiPipeline",
            "region:us"
        ],
        "downloads": 45350,
        "library_name": "diffusers",
        "likes": 1053,
        "model-index": null,
        "config": {
            "diffusers": {
                "_class_name": "MochiPipeline"
            }
        },
        "cardData": {
            "language": [
                "en"
            ],
            "tags": [
                "video",
                "genmo"
            ],
            "license": "apache-2.0",
            "pipeline_tag": "text-to-video",
            "library_name": "diffusers"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "assets/grid.gif"
            },
            {
                "rfilename": "decoder.safetensors"
            },
            {
                "rfilename": "dit.safetensors"
            },
            {
                "rfilename": "encoder.safetensors"
            },
            {
                "rfilename": "model_index.json"
            },
            {
                "rfilename": "scheduler/scheduler_config.json"
            },
            {
                "rfilename": "text_encoder/config.json"
            },
            {
                "rfilename": "text_encoder/model-00001-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder/model-00002-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder/model.safetensors.index.json"
            },
            {
                "rfilename": "tokenizer/added_tokens.json"
            },
            {
                "rfilename": "tokenizer/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer/spiece.model"
            },
            {
                "rfilename": "tokenizer/tokenizer_config.json"
            },
            {
                "rfilename": "transformer/config.json"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00001-of-00005.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00002-of-00005.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00003-of-00005.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00004-of-00005.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00005-of-00005.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model.bf16-00001-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model.bf16-00002-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model.bf16-00003-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model.safetensors.index.bf16.json"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model.safetensors.index.json"
            },
            {
                "rfilename": "vae/config.json"
            },
            {
                "rfilename": "vae/diffusion_pytorch_model.bf16.safetensors"
            },
            {
                "rfilename": "vae/diffusion_pytorch_model.safetensors"
            }
        ],
        "spaces": [
            "PR-Puppets/PR-Puppet-Sora",
            "thesab/mochi-1",
            "ninjawick/PR-Puppet-Sora-2",
            "tsqn/mochi-1",
            "Greff3/mochi-1",
            "AngeT10/pass",
            "johann22/ss",
            "ylues/PR-Puppet-Sora",
            "lilcheaty/sora_test",
            "Konst2021/PR-Puppet-Sora",
            "alexlevy0/PR-Puppet-Sora",
            "Masterdqqq/PR-Puppet-Sora",
            "mlmPenguin/VideoWorkspace"
        ],
        "createdAt": "2024-10-22T07:36:03.000Z"
    },
    {
        "_id": "672c546451c2c90f81ddb6f9",
        "id": "ali-vilab/In-Context-LoRA",
        "modelId": "ali-vilab/In-Context-LoRA",
        "author": "ali-vilab",
        "sha": "bd98182c99bb1f78e37400305802a724626037b9",
        "lastModified": "2024-11-17T15:39:16.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "text-to-image",
            "lora",
            "template:diffusion-lora",
            "arxiv:2410.23775",
            "arxiv:2410.15027",
            "base_model:black-forest-labs/FLUX.1-dev",
            "base_model:adapter:black-forest-labs/FLUX.1-dev",
            "license:mit",
            "region:us"
        ],
        "downloads": 133665,
        "library_name": "diffusers",
        "likes": 403,
        "model-index": null,
        "cardData": {
            "tags": [
                "text-to-image",
                "lora",
                "diffusers",
                "template:diffusion-lora"
            ],
            "base_model": "black-forest-labs/FLUX.1-dev",
            "instance_prompt": null,
            "license": "mit"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "couple-profile.safetensors"
            },
            {
                "rfilename": "film-storyboard.safetensors"
            },
            {
                "rfilename": "font-design.safetensors"
            },
            {
                "rfilename": "home-decoration.safetensors"
            },
            {
                "rfilename": "images/2024-11-10-002611_0.jpeg"
            },
            {
                "rfilename": "images/386534865-9612cf8a-858d-4684-819e-7b97981d993c.png"
            },
            {
                "rfilename": "images/ComfyUI_00026_.jpeg"
            },
            {
                "rfilename": "images/ComfyUI_00098_.jpeg"
            },
            {
                "rfilename": "images/ComfyUI_temp_ditfb_00016_.jpeg"
            },
            {
                "rfilename": "images/ComfyUI_temp_opjou_00016_.jpeg"
            },
            {
                "rfilename": "images/example_1.png"
            },
            {
                "rfilename": "images/film-storyboard-1.jpeg"
            },
            {
                "rfilename": "images/role2story.jpeg"
            },
            {
                "rfilename": "images/teaser1.jpg"
            },
            {
                "rfilename": "images/teaser2.jpg"
            },
            {
                "rfilename": "images/vi-design.jpg"
            },
            {
                "rfilename": "portrait-illustration.safetensors"
            },
            {
                "rfilename": "portrait-photography.safetensors"
            },
            {
                "rfilename": "ppt-templates.safetensors"
            },
            {
                "rfilename": "sandstorm-visual-effect.safetensors"
            },
            {
                "rfilename": "sparklers-visual-effect.safetensors"
            },
            {
                "rfilename": "visual-identity-design.safetensors"
            }
        ],
        "spaces": [
            "multimodalart/logo-in-context",
            "yasassadeepa/ali-vilab-In-Context-LoRA",
            "ysmao/multiview-incontext",
            "Konst2021/ali-vilab-In-Context-LoRA",
            "Byhunny/new-space",
            "Ricofishing/ali-vilab-In-Context-LoRA",
            "NeurixYUFI/ImgGenChat",
            "yuxichat/ali-vilab-In-Context-LoRA",
            "lightawave/ali-vilab-In-Context-LoRA",
            "viviannnnnn/ali-vilab-In-Context-LoRA",
            "pokerogue/ali-vilab-In-Context-LoRA",
            "Nymbo/logo-in-context",
            "VictoriaAgent/ali-vilab-In-Context-LoRA",
            "MasterBlueSAMA/ali-vilab-In-Context-LoRA",
            "o1anuraganand/space",
            "Mohuu0601/logo-in-contest",
            "tamir0107/ali-vilab-In-Context-LoRA"
        ],
        "createdAt": "2024-11-07T05:47:16.000Z"
    },
    {
        "_id": "67046f77aa68703cb1d7fed9",
        "id": "microsoft/OmniParser",
        "modelId": "microsoft/OmniParser",
        "author": "microsoft",
        "sha": "3b2d35cb8ab9ae13fde7e5909a661b5be6615a4f",
        "lastModified": "2024-11-26T21:13:46.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "image-text-to-text",
        "tags": [
            "transformers",
            "safetensors",
            "blip-2",
            "visual-question-answering",
            "image-text-to-text",
            "arxiv:2408.00203",
            "license:mit",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 10600,
        "library_name": "transformers",
        "likes": 1401,
        "model-index": null,
        "config": {
            "architectures": [
                "Blip2ForConditionalGeneration"
            ],
            "model_type": "blip-2"
        },
        "cardData": {
            "library_name": "transformers",
            "license": "mit",
            "pipeline_tag": "image-text-to-text"
        },
        "transformersInfo": {
            "auto_model": "AutoModelForVisualQuestionAnswering",
            "pipeline_tag": "visual-question-answering",
            "processor": "AutoProcessor"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "icon_caption_blip2/LICENSE"
            },
            {
                "rfilename": "icon_caption_blip2/config.json"
            },
            {
                "rfilename": "icon_caption_blip2/generation_config.json"
            },
            {
                "rfilename": "icon_caption_blip2/pytorch_model-00001-of-00002.bin"
            },
            {
                "rfilename": "icon_caption_blip2/pytorch_model-00002-of-00002.bin"
            },
            {
                "rfilename": "icon_caption_blip2/pytorch_model.bin.index.json"
            },
            {
                "rfilename": "icon_caption_florence/LICENSE"
            },
            {
                "rfilename": "icon_caption_florence/config.json"
            },
            {
                "rfilename": "icon_caption_florence/generation_config.json"
            },
            {
                "rfilename": "icon_caption_florence/model.safetensors"
            },
            {
                "rfilename": "icon_detect/LICENSE"
            },
            {
                "rfilename": "icon_detect/model.safetensors"
            },
            {
                "rfilename": "icon_detect/model.yaml"
            },
            {
                "rfilename": "icon_detect_v1_5/LICENSE"
            },
            {
                "rfilename": "icon_detect_v1_5/model.safetensors"
            },
            {
                "rfilename": "icon_detect_v1_5/model.yaml"
            },
            {
                "rfilename": "icon_detect_v1_5/train_args.yaml"
            }
        ],
        "spaces": [
            "microsoft/OmniParser",
            "jadechoghari/OmniParser-demo",
            "Shak33l-UiRev/Ui-Rev-Doc-Model",
            "gabrielvaz/microsoft-OmniParser",
            "qween-beth/microsoft-OmniParser",
            "nisten/OmniParser",
            "boompack/OmniParser",
            "Nymbo/OmniParser",
            "charbel-malo/UXSpaghetti",
            "mathi28/automated_dynamic_web_crawling"
        ],
        "createdAt": "2024-10-07T23:32:07.000Z"
    },
    {
        "_id": "6698d8a0653e4babe21e1e7d",
        "id": "meta-llama/Llama-3.1-8B-Instruct",
        "modelId": "meta-llama/Llama-3.1-8B-Instruct",
        "author": "meta-llama",
        "sha": "0e9e39f249a16976918f6564b8830bc894c89659",
        "lastModified": "2024-09-25T17:00:57.000Z",
        "private": false,
        "disabled": false,
        "gated": "manual",
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "safetensors",
            "llama",
            "text-generation",
            "facebook",
            "meta",
            "pytorch",
            "llama-3",
            "conversational",
            "en",
            "de",
            "fr",
            "it",
            "pt",
            "hi",
            "es",
            "th",
            "arxiv:2204.05149",
            "base_model:meta-llama/Llama-3.1-8B",
            "base_model:finetune:meta-llama/Llama-3.1-8B",
            "license:llama3.1",
            "autotrain_compatible",
            "text-generation-inference",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 6407299,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 3160,
        "model-index": null,
        "config": {
            "architectures": [
                "LlamaForCausalLM"
            ],
            "model_type": "llama",
            "tokenizer_config": {
                "bos_token": "<|begin_of_text|>",
                "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if builtin_tools is defined or tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\\n\\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
                "eos_token": "<|eot_id|>"
            }
        },
        "cardData": {
            "language": [
                "en",
                "de",
                "fr",
                "it",
                "pt",
                "hi",
                "es",
                "th"
            ],
            "license": "llama3.1",
            "base_model": "meta-llama/Meta-Llama-3.1-8B",
            "pipeline_tag": "text-generation",
            "tags": [
                "facebook",
                "meta",
                "pytorch",
                "llama",
                "llama-3"
            ],
            "extra_gated_prompt": "### LLAMA 3.1 COMMUNITY LICENSE AGREEMENT\nLlama 3.1 Version Release Date: July 23, 2024\n\"Agreement\" means the terms and conditions for use, reproduction, distribution and modification of the  Llama Materials set forth herein.\n\"Documentation\" means the specifications, manuals and documentation accompanying Llama 3.1 distributed by Meta at https://llama.meta.com/doc/overview.\n\"Licensee\" or \"you\" means you, or your employer or any other person or entity (if you are entering into this Agreement on such person or entity’s behalf), of the age required under applicable laws, rules or regulations to provide legal consent and that has legal authority to bind your employer or such other person or entity if you are entering in this Agreement on their behalf.\n\"Llama 3.1\" means the foundational large language models and software and algorithms, including machine-learning model code, trained model weights, inference-enabling code, training-enabling code, fine-tuning enabling code and other elements of the foregoing distributed by Meta at https://llama.meta.com/llama-downloads.\n\"Llama Materials\" means, collectively, Meta’s proprietary Llama 3.1 and Documentation (and any portion thereof) made available under this Agreement.\n\"Meta\" or \"we\" means Meta Platforms Ireland Limited (if you are located in or, if you are an entity, your principal place of business is in the EEA or Switzerland) and Meta Platforms, Inc. (if you are located outside of the EEA or Switzerland).\n   \n1. License Rights and Redistribution.\na. Grant of Rights. You are granted a non-exclusive, worldwide, non-transferable and royalty-free limited license under Meta’s intellectual property or other rights owned by Meta embodied in the Llama Materials to use, reproduce, distribute, copy, create derivative works of, and make modifications to the Llama Materials.\nb. Redistribution and Use.\ni. If you distribute or make available the Llama Materials (or any derivative works thereof), or a product or service (including another AI model) that contains any of them, you shall (A) provide a copy of this Agreement with any such Llama Materials; and (B) prominently display “Built with Llama” on a related website, user interface, blogpost, about page, or product documentation. If you use the Llama Materials or any outputs or results of the Llama Materials to create, train, fine tune, or otherwise improve an AI model, which is distributed or made available, you shall also include “Llama” at the beginning of any such AI model name.\nii. If you receive Llama Materials, or any derivative works thereof, from a Licensee as part  of an integrated end user product, then Section 2 of this Agreement will not apply to you.\niii. You must retain in all copies of the Llama Materials that you distribute the following attribution notice within a “Notice” text file distributed as a part of such copies: “Llama 3.1 is licensed under the Llama 3.1 Community License, Copyright © Meta Platforms, Inc. All Rights Reserved.”\niv. Your use of the Llama Materials must comply with applicable laws and regulations (including trade compliance laws and regulations) and adhere to the Acceptable Use Policy for the Llama Materials (available at https://llama.meta.com/llama3_1/use-policy), which is hereby incorporated by reference into this Agreement.\n2. Additional Commercial Terms. If, on the Llama 3.1 version release date, the monthly active users of the products or services made available by or for Licensee, or Licensee’s affiliates, is greater than 700 million monthly active users in the preceding calendar month, you must request a license from Meta, which Meta may grant to you in its sole discretion, and you are not authorized to exercise any of the rights under this Agreement unless or until Meta otherwise expressly grants you such rights.\n3. Disclaimer of Warranty. UNLESS REQUIRED BY APPLICABLE LAW, THE LLAMA MATERIALS AND ANY OUTPUT AND RESULTS THEREFROM ARE PROVIDED ON AN “AS IS” BASIS, WITHOUT WARRANTIES OF ANY KIND, AND META DISCLAIMS ALL WARRANTIES OF ANY KIND, BOTH EXPRESS AND IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE. YOU ARE SOLELY RESPONSIBLE FOR DETERMINING THE APPROPRIATENESS OF USING OR REDISTRIBUTING THE LLAMA MATERIALS AND ASSUME ANY RISKS ASSOCIATED WITH YOUR USE OF THE LLAMA MATERIALS AND ANY OUTPUT AND RESULTS.\n4. Limitation of Liability. IN NO EVENT WILL META OR ITS AFFILIATES BE LIABLE UNDER ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, TORT, NEGLIGENCE, PRODUCTS LIABILITY, OR OTHERWISE, ARISING OUT OF THIS AGREEMENT, FOR ANY LOST PROFITS OR ANY INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR PUNITIVE DAMAGES, EVEN IF META OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF ANY OF THE FOREGOING.\n5. Intellectual Property.\na. No trademark licenses are granted under this Agreement, and in connection with the Llama Materials, neither Meta nor Licensee may use any name or mark owned by or associated with the other or any of its affiliates, except as required for reasonable and customary use in describing and redistributing the Llama Materials or as set forth in this Section 5(a). Meta hereby grants you a license to use “Llama” (the “Mark”) solely as required to comply with the last sentence of Section 1.b.i. You will comply with Meta’s brand guidelines (currently accessible at https://about.meta.com/brand/resources/meta/company-brand/ ). All goodwill arising out of your use of the Mark will inure to the benefit of Meta.\nb. Subject to Meta’s ownership of Llama Materials and derivatives made by or for Meta, with respect to any derivative works and modifications of the Llama Materials that are made by you, as between you and Meta, you are and will be the owner of such derivative works and modifications.\nc. If you institute litigation or other proceedings against Meta or any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Llama Materials or Llama 3.1 outputs or results, or any portion of any of the foregoing, constitutes infringement of intellectual property or other rights owned or licensable by you, then any licenses granted to you under this Agreement shall terminate as of the date such litigation or claim is filed or instituted. You will indemnify and hold harmless Meta from and against any claim by any third party arising out of or related to your use or distribution of the Llama Materials.\n6. Term and Termination. The term of this Agreement will commence upon your acceptance of this Agreement or access to the Llama Materials and will continue in full force and effect until terminated in accordance with the terms and conditions herein. Meta may terminate this Agreement if you are in breach of any term or condition of this Agreement. Upon termination of this Agreement, you shall delete and cease use of the Llama Materials. Sections 3, 4 and 7 shall survive the termination of this Agreement.\n7. Governing Law and Jurisdiction. This Agreement will be governed and construed under the laws of the State of California without regard to choice of law principles, and the UN Convention on Contracts for the International Sale of Goods does not apply to this Agreement. The courts of California shall have exclusive jurisdiction of any dispute arising out of this Agreement.\n### Llama 3.1 Acceptable Use Policy\nMeta is committed to promoting safe and fair use of its tools and features, including Llama 3.1. If you access or use Llama 3.1, you agree to this Acceptable Use Policy (“Policy”). The most recent copy of this policy can be found at [https://llama.meta.com/llama3_1/use-policy](https://llama.meta.com/llama3_1/use-policy)\n#### Prohibited Uses\nWe want everyone to use Llama 3.1 safely and responsibly. You agree you will not use, or allow others to use, Llama 3.1 to:\n 1. Violate the law or others’ rights, including to:\n    1. Engage in, promote, generate, contribute to, encourage, plan, incite, or further illegal or unlawful activity or content, such as:\n        1. Violence or terrorism\n        2. Exploitation or harm to children, including the solicitation, creation, acquisition, or dissemination of child exploitative content or failure to report Child Sexual Abuse Material\n        3. Human trafficking, exploitation, and sexual violence\n        4. The illegal distribution of information or materials to minors, including obscene materials, or failure to employ legally required age-gating in connection with such information or materials.\n        5. Sexual solicitation\n        6. Any other criminal activity\n    3. Engage in, promote, incite, or facilitate the harassment, abuse, threatening, or bullying of individuals or groups of individuals\n    4. Engage in, promote, incite, or facilitate discrimination or other unlawful or harmful conduct in the provision of employment, employment benefits, credit, housing, other economic benefits, or other essential goods and services\n    5. Engage in the unauthorized or unlicensed practice of any profession including, but not limited to, financial, legal, medical/health, or related professional practices\n    6. Collect, process, disclose, generate, or infer health, demographic, or other sensitive personal or private information about individuals without rights and consents required by applicable laws\n    7. Engage in or facilitate any action or generate any content that infringes, misappropriates, or otherwise violates any third-party rights, including the outputs or results of any products or services using the Llama Materials\n    8. Create, generate, or facilitate the creation of malicious code, malware, computer viruses or do anything else that could disable, overburden, interfere with or impair the proper working, integrity, operation or appearance of a website or computer system\n2. Engage in, promote, incite, facilitate, or assist in the planning or development of activities that present a risk of death or bodily harm to individuals, including use of Llama 3.1 related to the following:\n    1. Military, warfare, nuclear industries or applications, espionage, use for materials or activities that are subject to the International Traffic Arms Regulations (ITAR) maintained by the United States Department of State\n    2. Guns and illegal weapons (including weapon development)\n    3. Illegal drugs and regulated/controlled substances\n    4. Operation of critical infrastructure, transportation technologies, or heavy machinery\n    5. Self-harm or harm to others, including suicide, cutting, and eating disorders\n    6. Any content intended to incite or promote violence, abuse, or any infliction of bodily harm to an individual\n3. Intentionally deceive or mislead others, including use of Llama 3.1 related to the following:\n    1. Generating, promoting, or furthering fraud or the creation or promotion of disinformation\n    2. Generating, promoting, or furthering defamatory content, including the creation of defamatory statements, images, or other content\n    3. Generating, promoting, or further distributing spam\n    4. Impersonating another individual without consent, authorization, or legal right\n    5. Representing that the use of Llama 3.1 or outputs are human-generated\n    6. Generating or facilitating false online engagement, including fake reviews and other means of fake online engagement\n4. Fail to appropriately disclose to end users any known dangers of your AI system\nPlease report any violation of this Policy, software “bug,” or other problems that could lead to a violation of this Policy through one of the following means:\n    * Reporting issues with the model: [https://github.com/meta-llama/llama-models/issues](https://github.com/meta-llama/llama-models/issues)\n    * Reporting risky content generated by the model:\n    developers.facebook.com/llama_output_feedback\n    * Reporting bugs and security concerns: facebook.com/whitehat/info\n    * Reporting violations of the Acceptable Use Policy or unlicensed uses of Meta Llama 3: LlamaUseReport@meta.com",
            "extra_gated_fields": {
                "First Name": "text",
                "Last Name": "text",
                "Date of birth": "date_picker",
                "Country": "country",
                "Affiliation": "text",
                "Job title": {
                    "type": "select",
                    "options": [
                        "Student",
                        "Research Graduate",
                        "AI researcher",
                        "AI developer/engineer",
                        "Reporter",
                        "Other"
                    ]
                },
                "geo": "ip_location",
                "By clicking Submit below I accept the terms of the license and acknowledge that the information I provide will be collected stored processed and shared in accordance with the Meta Privacy Policy": "checkbox"
            },
            "extra_gated_description": "The information you provide will be collected, stored, processed and shared in accordance with the [Meta Privacy Policy](https://www.facebook.com/privacy/policy/).",
            "extra_gated_button_content": "Submit"
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "pipeline_tag": "text-generation",
            "processor": "AutoTokenizer"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "USE_POLICY.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "model-00001-of-00004.safetensors"
            },
            {
                "rfilename": "model-00002-of-00004.safetensors"
            },
            {
                "rfilename": "model-00003-of-00004.safetensors"
            },
            {
                "rfilename": "model-00004-of-00004.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "original/consolidated.00.pth"
            },
            {
                "rfilename": "original/params.json"
            },
            {
                "rfilename": "original/tokenizer.model"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [
            "KingNish/OpenGPT-4o",
            "akhaliq/anychat",
            "argilla/synthetic-data-generator",
            "featherless-ai/try-this-model",
            "baconnier/prompt-plus-plus",
            "eduagarcia/open_pt_llm_leaderboard",
            "vilarin/Skywork-o1-Open-Llama3.1-8B",
            "microsoft/MInference",
            "logikon/open_cot_leaderboard",
            "Crisp-Unimib/INVALSIbenchmark",
            "NiansuhAI/HFLLMs",
            "flowers-team/StickToYourRoleLeaderboard",
            "ngebodh/SimpleChatbot",
            "ysharma/Chat_with_Meta_llama3_1_8b",
            "CZLC/BenCzechMark",
            "prithivMLmods/Llama-3.1-8B-Instruct",
            "Shreyas094/SearchGPT",
            "codelion/optillm",
            "Nymbo/overthink-1",
            "davanstrien/would-you-read-it",
            "davidberenstein1957/llm-human-feedback-collector-chat-interface-dpo",
            "panuthept/thai_sentence_embedding_benchmark",
            "freQuensy23/LLMhistory",
            "ml-energy/leaderboard",
            "yanolja/arena",
            "cot-leaderboard/open-cot-dashboard",
            "dataset-rewriter/dataset-rewriter",
            "NiansuhAI/Main",
            "davidberenstein1957/llm-human-feedback-collector-chat-interface-kto",
            "TWO/sutra-tokenizer-comparison",
            "prithivMLmods/NEMO-vs-LLAMA",
            "merve/gradio-tgi-2",
            "cryptocalypse/sophia_ai_robot_prophet",
            "awacke1/ChatStreamlitMultiplayer",
            "GIZ/audit_assistant",
            "gaverfraxz/Weight_Comparator",
            "saikub/chat",
            "cdcvd/Evalution_resume",
            "Nymbo/Llama-3.1-8B-Instruct",
            "Ffftdtd5dtft/gfgf",
            "saikub/chatB",
            "prithivMLmods/Mood-Swings",
            "argilla/distilabel-argilla-labeller",
            "arad1367/Llama-3.1-8b-Chatbot",
            "open-nlp/Chris-lab",
            "nbroad/HF-API-monitor",
            "DanielDJ1987/chat-financial",
            "TTsamurai/UserStudyFinancialAdvisor",
            "coltt/paper-reading-assistant",
            "GIZ/climate_vulnerability_analysis",
            "aliceblue11/logo_o1-preview",
            "burtenshaw/my_personas_generator",
            "CreativeWorks/Test_Llama-3.1-8B-Instruct",
            "Rijgersberg/Meta-Llama-3.1-8B",
            "Shreyas094/Sentinel-AI-Beta-Test",
            "dragonhearted/ai-coding-assistant",
            "ashmib/green-city-finder",
            "Nymbo/Llama-3.1-8B-Instruct-Inference",
            "artificialguybr/OpenRouter-LLM-Chat",
            "sudonate/meta-llama-Meta-Llama-3.1-8B-Instruct",
            "chernistry/overthink-1",
            "ILLERRAPS/OpenGPT-4o",
            "lightmate/llm-chatbot",
            "jirvingphd/blog-personal-chatbot",
            "J-LAB/FluxiIA_LLama-Florence",
            "awacke1/DrNovaQuantumVoiceAI",
            "ireinisi/arambot",
            "pzshen/shuttle-ai",
            "HarshBhanushali7705/own_meta_llama_Llama_3.2-1B",
            "h20ahmadi/meta-llama-Meta-Llama-3.1-8B-Instruct",
            "gendev/aidenforfina",
            "MoritzLaurer/chat-with-nim-api",
            "Aqcua/Lumina-1.5-Assistant",
            "hackerpro17/Llama-3.1-8B-Instruct",
            "chou3ishi/demo1",
            "isobaih/DATAibm",
            "Yersel/Meta-Llama-3.1-8B-Instruct",
            "Dragunflie-420/distilabel-datacraft",
            "featherless-ai/klimbr-demo",
            "SC999/NV_Nemotron",
            "ranamhamoud/webpluging",
            "markIA23/Galactica",
            "MadsGalsgaard/Project-W",
            "ale-bjanes/rag-chat",
            "ignitariumcloud/TI_demo_E2E",
            "ale-bjanes/rag-chat-ui",
            "drodin/meta-llama-Meta-Llama-3.1-8B-Instruct",
            "seawolf2357/kai-l3-8b",
            "sofianhw/llama-3.1-8B-Instruct-test",
            "gagan3012/ArchiveRAG",
            "odaly/fuzzylab",
            "ariankhalfani/LLAMA",
            "mtyrrell/cpv_3.1",
            "gatagat/meta-llama-Meta-Llama-3.1-8B-Instruct",
            "ordlibrary/meta-llama-Meta-Llama-3.1-8B-Instruct",
            "AJpaka/meta-llama-Meta-Llama-3.1-8B-Instruct",
            "ordlibrary/ordgpt",
            "fgrreloaded/fgr_ai",
            "IntellijMind/chat-llm",
            "Zoilo23/meta-llama-Meta-Llama-3.1-8B-Instruct"
        ],
        "createdAt": "2024-07-18T08:56:00.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 8030261248
            },
            "total": 8030261248
        }
    },
    {
        "_id": "6742de96ef638e96959068df",
        "id": "OuteAI/OuteTTS-0.2-500M-GGUF",
        "modelId": "OuteAI/OuteTTS-0.2-500M-GGUF",
        "author": "OuteAI",
        "sha": "2722a114c8346f3dd477f1a0832456d15e9f2684",
        "lastModified": "2024-12-02T15:18:46.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-speech",
        "tags": [
            "gguf",
            "text-to-speech",
            "en",
            "zh",
            "ja",
            "ko",
            "dataset:facebook/multilingual_librispeech",
            "dataset:parler-tts/libritts_r_filtered",
            "dataset:amphion/Emilia-Dataset",
            "dataset:parler-tts/mls_eng",
            "license:cc-by-nc-4.0",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 3586,
        "likes": 60,
        "model-index": null,
        "cardData": {
            "license": "cc-by-nc-4.0",
            "datasets": [
                "facebook/multilingual_librispeech",
                "parler-tts/libritts_r_filtered",
                "amphion/Emilia-Dataset",
                "parler-tts/mls_eng"
            ],
            "language": [
                "en",
                "zh",
                "ja",
                "ko"
            ],
            "pipeline_tag": "text-to-speech"
        },
        "gguf": {
            "total": 499193728,
            "architecture": "qwen2",
            "context_length": 32768,
            "bos_token": "<|endoftext|>",
            "eos_token": "<|im_end|>"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-FP16.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q2_K.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q3_K_L.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q3_K_M.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q3_K_S.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q4_0.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q4_1.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q4_K_M.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q4_K_S.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q5_0.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q5_1.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q5_K_M.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q5_K_S.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q6_K.gguf"
            },
            {
                "rfilename": "OuteTTS-0.2-500M-Q8_0.gguf"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "media/demo.mp4"
            }
        ],
        "spaces": [],
        "createdAt": "2024-11-24T08:06:46.000Z"
    },
    {
        "_id": "6738310a5bfecf1be6e6cad0",
        "id": "showlab/ShowUI-2B",
        "modelId": "showlab/ShowUI-2B",
        "author": "showlab",
        "sha": "6e002efa5e644f01c15052d6581b8480f61d26d4",
        "lastModified": "2024-11-29T09:20:16.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "tags": [
            "pytorch",
            "qwen2_vl",
            "GUI agents",
            "vision-language-action model",
            "computer use",
            "arxiv:2411.17465",
            "base_model:Qwen/Qwen2-VL-2B-Instruct",
            "base_model:finetune:Qwen/Qwen2-VL-2B-Instruct",
            "license:mit",
            "region:us"
        ],
        "downloads": 2218,
        "likes": 52,
        "model-index": null,
        "config": {
            "architectures": [
                "Qwen2VLForConditionalGeneration"
            ],
            "model_type": "qwen2_vl",
            "tokenizer_config": {
                "bos_token": null,
                "chat_template": "{% set image_count = namespace(value=0) %}{% set video_count = namespace(value=0) %}{% for message in messages %}{% if loop.first and message['role'] != 'system' %}<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n{% endif %}<|im_start|>{{ message['role'] }}\n{% if message['content'] is string %}{{ message['content'] }}<|im_end|>\n{% else %}{% for content in message['content'] %}{% if content['type'] == 'image' or 'image' in content or 'image_url' in content %}{% set image_count.value = image_count.value + 1 %}{% if add_vision_id %}Picture {{ image_count.value }}: {% endif %}<|vision_start|><|image_pad|><|vision_end|>{% elif content['type'] == 'video' or 'video' in content %}{% set video_count.value = video_count.value + 1 %}{% if add_vision_id %}Video {{ video_count.value }}: {% endif %}<|vision_start|><|video_pad|><|vision_end|>{% elif 'text' in content %}{{ content['text'] }}{% endif %}{% endfor %}<|im_end|>\n{% endif %}{% endfor %}{% if add_generation_prompt %}<|im_start|>assistant\n{% endif %}",
                "eos_token": "<|im_end|>",
                "pad_token": null,
                "unk_token": null
            }
        },
        "cardData": {
            "tags": [
                "GUI agents",
                "vision-language-action model",
                "computer use"
            ],
            "base_model": [
                "Qwen/Qwen2-VL-2B-Instruct"
            ],
            "license": "mit"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "added_tokens.json"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "examples/0730d43001da36204b8cb9495b61308.png"
            },
            {
                "rfilename": "examples/chrome.png"
            },
            {
                "rfilename": "examples/showui.png"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "merges.txt"
            },
            {
                "rfilename": "preprocessor_config.json"
            },
            {
                "rfilename": "pytorch_model.bin"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            },
            {
                "rfilename": "vocab.json"
            }
        ],
        "spaces": [
            "showlab/ShowUI"
        ],
        "createdAt": "2024-11-16T05:43:38.000Z"
    },
    {
        "_id": "6745bb3ced3dcce771ebdccf",
        "id": "Skywork/Skywork-o1-Open-Llama-3.1-8B",
        "modelId": "Skywork/Skywork-o1-Open-Llama-3.1-8B",
        "author": "Skywork",
        "sha": "a41903315f39ebf1c08fdba0ef52758f7afe3682",
        "lastModified": "2024-11-27T09:17:46.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "safetensors",
            "llama",
            "text-generation",
            "conversational",
            "base_model:meta-llama/Llama-3.1-8B-Instruct",
            "base_model:finetune:meta-llama/Llama-3.1-8B-Instruct",
            "license:other",
            "region:us"
        ],
        "downloads": 639,
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 50,
        "model-index": null,
        "config": {
            "architectures": [
                "LlamaForCausalLM"
            ],
            "model_type": "llama",
            "tokenizer_config": {
                "bos_token": "<|begin_of_text|>",
                "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if builtin_tools is defined or tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\\n\\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
                "eos_token": "<|eot_id|>",
                "pad_token": "<|eot_id|>"
            }
        },
        "cardData": {
            "license": "other",
            "base_model": "meta-llama/Meta-Llama-3.1-8B-Instruct",
            "pipeline_tag": "text-generation"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "misc/demo_case.png"
            },
            {
                "rfilename": "misc/main_result_code.png"
            },
            {
                "rfilename": "misc/main_result_math.png"
            },
            {
                "rfilename": "misc/misc_Skywork Community License.pdf"
            },
            {
                "rfilename": "misc/misc_Skywork 模型社区许可协议.pdf"
            },
            {
                "rfilename": "misc/misc_fig.jpg"
            },
            {
                "rfilename": "misc/prm_result_code.png"
            },
            {
                "rfilename": "misc/prm_result_math.png"
            },
            {
                "rfilename": "model-00001-of-00004.safetensors"
            },
            {
                "rfilename": "model-00002-of-00004.safetensors"
            },
            {
                "rfilename": "model-00003-of-00004.safetensors"
            },
            {
                "rfilename": "model-00004-of-00004.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [
            "vilarin/Skywork-o1-Open-Llama3.1-8B"
        ],
        "createdAt": "2024-11-26T12:12:44.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 8030261248
            },
            "total": 8030261248
        }
    },
    {
        "_id": "672129efed924b0a4bed248f",
        "id": "rain1011/pyramid-flow-miniflux",
        "modelId": "rain1011/pyramid-flow-miniflux",
        "author": "rain1011",
        "sha": "c0ea661ae8fc64ddf57e2caa4717daea085dca91",
        "lastModified": "2024-11-13T16:03:07.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-video",
        "tags": [
            "diffusers",
            "safetensors",
            "text-to-image",
            "image-to-video",
            "flux",
            "text-to-video",
            "arxiv:2410.05954",
            "license:apache-2.0",
            "region:us"
        ],
        "downloads": 0,
        "library_name": "diffusers",
        "likes": 124,
        "model-index": null,
        "cardData": {
            "license": "apache-2.0",
            "pipeline_tag": "text-to-video",
            "tags": [
                "text-to-image",
                "image-to-video",
                "flux"
            ]
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "causal_video_vae/config.json"
            },
            {
                "rfilename": "causal_video_vae/diffusion_pytorch_model.bin"
            },
            {
                "rfilename": "diffusion_transformer_384p/config.json"
            },
            {
                "rfilename": "diffusion_transformer_384p/diffusion_pytorch_model.safetensors"
            },
            {
                "rfilename": "diffusion_transformer_768p/config.json"
            },
            {
                "rfilename": "diffusion_transformer_768p/diffusion_pytorch_model.safetensors"
            },
            {
                "rfilename": "diffusion_transformer_image/config.json"
            },
            {
                "rfilename": "diffusion_transformer_image/diffusion_pytorch_model.safetensors"
            },
            {
                "rfilename": "text_encoder/config.json"
            },
            {
                "rfilename": "text_encoder/model.safetensors"
            },
            {
                "rfilename": "text_encoder_2/config.json"
            },
            {
                "rfilename": "text_encoder_2/model-00001-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_2/model-00002-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_2/model.safetensors.index.json"
            },
            {
                "rfilename": "tokenizer/merges.txt"
            },
            {
                "rfilename": "tokenizer/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer/tokenizer_config.json"
            },
            {
                "rfilename": "tokenizer/vocab.json"
            },
            {
                "rfilename": "tokenizer_2/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer_2/spiece.model"
            },
            {
                "rfilename": "tokenizer_2/tokenizer.json"
            },
            {
                "rfilename": "tokenizer_2/tokenizer_config.json"
            }
        ],
        "spaces": [
            "PR-Puppets/PR-Puppet-Sora",
            "ninjawick/PR-Puppet-Sora-2",
            "sironagasuyagi/Pyramid-Flow",
            "ylues/PR-Puppet-Sora",
            "lilcheaty/sora_test",
            "Konst2021/PR-Puppet-Sora",
            "alexlevy0/PR-Puppet-Sora",
            "Masterdqqq/PR-Puppet-Sora"
        ],
        "createdAt": "2024-10-29T18:31:11.000Z"
    },
    {
        "_id": "67379d72a535b357f61983d3",
        "id": "stabilityai/stable-diffusion-3.5-controlnets",
        "modelId": "stabilityai/stable-diffusion-3.5-controlnets",
        "author": "stabilityai",
        "sha": "a6f34a3dab484b5262be035038c29442fd36455e",
        "lastModified": "2024-11-28T00:57:50.000Z",
        "private": false,
        "disabled": false,
        "gated": "auto",
        "pipeline_tag": "text-to-image",
        "tags": [
            "stable-diffusion",
            "controlnet",
            "text-to-image",
            "en",
            "arxiv:2302.05543",
            "license:other",
            "region:us"
        ],
        "downloads": 0,
        "likes": 47,
        "model-index": null,
        "cardData": {
            "license": "other",
            "license_name": "stabilityai-ai-community",
            "license_link": "LICENSE.md",
            "tags": [
                "stable-diffusion",
                "controlnet"
            ],
            "inference": true,
            "extra_gated_prompt": "By clicking \"Agree\", you agree to the [License Agreement](https://huggingface.co/stabilityai/stable-diffusion-3.5-large/blob/main/LICENSE.md) and acknowledge Stability AI's [Privacy Policy](https://stability.ai/privacy-policy).",
            "extra_gated_fields": {
                "Name": "text",
                "Email": "text",
                "Country": "country",
                "Organization or Affiliation": "text",
                "Receive email updates and promotions on Stability AI products, services, and research?": {
                    "type": "select",
                    "options": [
                        "Yes",
                        "No"
                    ]
                },
                "What do you intend to use the model for?": {
                    "type": "select",
                    "options": [
                        "Research",
                        "Personal use",
                        "Creative Professional",
                        "Startup",
                        "Enterprise"
                    ]
                },
                "I agree to the License Agreement and acknowledge Stability AI's Privacy Policy": "checkbox"
            },
            "language": [
                "en"
            ],
            "pipeline_tag": "text-to-image"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE.md"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "canny_header.png"
            },
            {
                "rfilename": "sample_inputs/blur.png"
            },
            {
                "rfilename": "sample_inputs/canny.png"
            },
            {
                "rfilename": "sample_inputs/depth.png"
            },
            {
                "rfilename": "sample_result.png"
            },
            {
                "rfilename": "sd3.5_large_controlnet_blur.safetensors"
            },
            {
                "rfilename": "sd3.5_large_controlnet_canny.safetensors"
            },
            {
                "rfilename": "sd3.5_large_controlnet_depth.safetensors"
            }
        ],
        "spaces": [],
        "createdAt": "2024-11-15T19:13:54.000Z"
    },
    {
        "_id": "674a272ed0d6b36e22d19f90",
        "id": "shuttleai/shuttle-3.1-aesthetic",
        "modelId": "shuttleai/shuttle-3.1-aesthetic",
        "author": "shuttleai",
        "sha": "7fca4bcd7363cff96c7ab8ed5dd5e39cc915fa84",
        "lastModified": "2024-12-01T00:54:26.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "safetensors",
            "text-to-image",
            "image-generation",
            "shuttle",
            "en",
            "license:apache-2.0",
            "endpoints_compatible",
            "diffusers:FluxPipeline",
            "region:us"
        ],
        "downloads": 731,
        "library_name": "diffusers",
        "likes": 47,
        "model-index": null,
        "config": {
            "diffusers": {
                "_class_name": "FluxPipeline"
            }
        },
        "cardData": {
            "language": [
                "en"
            ],
            "license": "apache-2.0",
            "library_name": "diffusers",
            "pipeline_tag": "text-to-image",
            "tags": [
                "text-to-image",
                "image-generation",
                "shuttle"
            ],
            "instance_prompt": null
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "demo.png"
            },
            {
                "rfilename": "fp8/shuttle-3.1-aesthetic-fp8.safetensors"
            },
            {
                "rfilename": "model_index.json"
            },
            {
                "rfilename": "scheduler/.ipynb_checkpoints/scheduler_config-checkpoint.json"
            },
            {
                "rfilename": "scheduler/scheduler_config.json"
            },
            {
                "rfilename": "shuttle-3.1-aesthetic.safetensors"
            },
            {
                "rfilename": "text_encoder/.ipynb_checkpoints/config-checkpoint.json"
            },
            {
                "rfilename": "text_encoder/config.json"
            },
            {
                "rfilename": "text_encoder/model.safetensors"
            },
            {
                "rfilename": "text_encoder_2/.ipynb_checkpoints/config-checkpoint.json"
            },
            {
                "rfilename": "text_encoder_2/config.json"
            },
            {
                "rfilename": "text_encoder_2/model-00001-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_2/model-00002-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_2/model.safetensors.index.json"
            },
            {
                "rfilename": "tokenizer/.ipynb_checkpoints/special_tokens_map-checkpoint.json"
            },
            {
                "rfilename": "tokenizer/.ipynb_checkpoints/tokenizer_config-checkpoint.json"
            },
            {
                "rfilename": "tokenizer/.ipynb_checkpoints/vocab-checkpoint.json"
            },
            {
                "rfilename": "tokenizer/merges.txt"
            },
            {
                "rfilename": "tokenizer/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer/tokenizer_config.json"
            },
            {
                "rfilename": "tokenizer/vocab.json"
            },
            {
                "rfilename": "tokenizer_2/.ipynb_checkpoints/special_tokens_map-checkpoint.json"
            },
            {
                "rfilename": "tokenizer_2/.ipynb_checkpoints/tokenizer-checkpoint.json"
            },
            {
                "rfilename": "tokenizer_2/.ipynb_checkpoints/tokenizer_config-checkpoint.json"
            },
            {
                "rfilename": "tokenizer_2/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer_2/spiece.model"
            },
            {
                "rfilename": "tokenizer_2/tokenizer.json"
            },
            {
                "rfilename": "tokenizer_2/tokenizer_config.json"
            },
            {
                "rfilename": "transformer/.ipynb_checkpoints/config-checkpoint.json"
            },
            {
                "rfilename": "transformer/config.json"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00001-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00002-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00003-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model.safetensors.index.json"
            },
            {
                "rfilename": "vae/.ipynb_checkpoints/config-checkpoint.json"
            },
            {
                "rfilename": "vae/config.json"
            },
            {
                "rfilename": "vae/diffusion_pytorch_model.safetensors"
            }
        ],
        "spaces": [
            "shuttleai/shuttle-3.1-aesthetic"
        ],
        "createdAt": "2024-11-29T20:42:22.000Z"
    },
    {
        "_id": "66aa974d1f83b210ae7f74ae",
        "id": "black-forest-labs/FLUX.1-schnell",
        "modelId": "black-forest-labs/FLUX.1-schnell",
        "author": "black-forest-labs",
        "sha": "741f7c3ce8b383c54771c7003378a50191e9efe9",
        "lastModified": "2024-08-16T14:37:56.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "safetensors",
            "text-to-image",
            "image-generation",
            "flux",
            "en",
            "license:apache-2.0",
            "endpoints_compatible",
            "diffusers:FluxPipeline",
            "region:us"
        ],
        "downloads": 1754903,
        "library_name": "diffusers",
        "likes": 2954,
        "model-index": null,
        "config": {
            "diffusers": {
                "_class_name": "FluxPipeline"
            }
        },
        "cardData": {
            "language": [
                "en"
            ],
            "license": "apache-2.0",
            "tags": [
                "text-to-image",
                "image-generation",
                "flux"
            ]
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "ae.safetensors"
            },
            {
                "rfilename": "flux1-schnell.safetensors"
            },
            {
                "rfilename": "model_index.json"
            },
            {
                "rfilename": "scheduler/scheduler_config.json"
            },
            {
                "rfilename": "schnell_grid.jpeg"
            },
            {
                "rfilename": "text_encoder/config.json"
            },
            {
                "rfilename": "text_encoder/model.safetensors"
            },
            {
                "rfilename": "text_encoder_2/config.json"
            },
            {
                "rfilename": "text_encoder_2/model-00001-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_2/model-00002-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder_2/model.safetensors.index.json"
            },
            {
                "rfilename": "tokenizer/merges.txt"
            },
            {
                "rfilename": "tokenizer/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer/tokenizer_config.json"
            },
            {
                "rfilename": "tokenizer/vocab.json"
            },
            {
                "rfilename": "tokenizer_2/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer_2/spiece.model"
            },
            {
                "rfilename": "tokenizer_2/tokenizer.json"
            },
            {
                "rfilename": "tokenizer_2/tokenizer_config.json"
            },
            {
                "rfilename": "transformer/config.json"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00001-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00002-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model-00003-of-00003.safetensors"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model.safetensors.index.json"
            },
            {
                "rfilename": "vae/config.json"
            },
            {
                "rfilename": "vae/diffusion_pytorch_model.safetensors"
            }
        ],
        "spaces": [
            "KingNish/OpenGPT-4o",
            "black-forest-labs/FLUX.1-schnell",
            "yanze/PuLID-FLUX",
            "SkalskiP/FLUX.1-inpaint",
            "KingNish/Realtime-FLUX",
            "multimodalart/FLUX.1-merged",
            "prithivMLmods/FLUX-LoRA-DLC",
            "latentexplorers/latentnavigation-flux",
            "CohereForAI/aya_expanse",
            "DamarJati/FLUX.1-DEV-Canny",
            "autotrain-projects/train-flux-lora-ease",
            "Yuanshi/OminiControl",
            "ginipick/Realtime-FLUX",
            "aexyb/MidJourney-V6",
            "Gradio-Community/Text-guided-Flux-Inpainting",
            "InstantX/flux-IP-adapter",
            "John6666/DiffuseCraftMod",
            "Nymbo/Compare-6",
            "ChristianHappy/FLUX.1-schnell",
            "John6666/votepurchase-multiple-model",
            "SkalskiP/FLUX.1-inpaint-dev",
            "multimodalart/civitai-to-hf",
            "InstantX/SD35-IP-Adapter",
            "guardiancc/flux-advanced-explorer",
            "fffiloni/Flux_Upscaled",
            "MohamedRashad/Character-Generator",
            "Djrango/qwen2vl-flux-mini-demo",
            "randomtable/Simple-FLUX-Image-Generator",
            "adaface-neurips/adaface-animate",
            "Nymbo/FLUX.1-Schnell-Serverless",
            "doevent/FLUX.1-merged",
            "multimodalart/low-step-flux-comparison",
            "Wauplin/space_to_dataset_saver",
            "PeepDaSlan9/B2BMGMT_FLUX.1-Schnell-Serverless",
            "fffiloni/ReNO",
            "phenixrhyder/NSFW-ToyWorld",
            "NJU/RAG-Diffusion",
            "K00B404/FluxCapacitor",
            "AI-Platform/FLUXPro",
            "wjs0725/RF-Solver-Edit",
            "Deddy/Unlimited_FLUX_Schnell_V1-3",
            "aexyb/Diffusion",
            "huanhoang/flux2",
            "KwabsHug/GameConfigIdea",
            "takarajordan/flux-lightning",
            "Deddy/PuLid-FLX-GPU",
            "sofianhw/PuLID-FLUX",
            "mukaist/FLUX.1-schnell",
            "PAIR/StreamingSVD",
            "aipicasso/commonart-latest",
            "Zhofang/FLUX.1-Dev-Serverless-darn",
            "Akjava/flux1-schnell-img2img",
            "Nymbo/Serverless-ImgGen-Hub",
            "frankbank999/black-forest-labs-FLUX.1-schnell",
            "stazizov/XFluxSpace",
            "lichorosario/FLUX.1-schnell",
            "Greff3/MidJourney-V6",
            "AlekseyCalvin/LibreFLUX_LoRAs_Gallery",
            "colbyford/flux2",
            "bghira/FluxBooru-CFG3.5",
            "Deddy/FLUX-Wallpaper-HD-Maker",
            "John6666/flux-to-diffusers-test",
            "K00B404/FLUX.1-Dev-Serverless-darn",
            "vincenthugging/flux-lora-myself",
            "fantaxy/flx-pulid",
            "Carrekop10/FLUX.1-schnell-T2I",
            "Nymbo/FLUX-LoRA-DLC",
            "MakiAi/FLUX.1-inpaint",
            "Amin-IT/Image-Generator",
            "brokerrobin/Realtime-FLUX",
            "PeepDaSlan9/HYDRAS_flux2",
            "qiuzhi2046/PuLID-FLUX",
            "FlowChef/FlowChef-Flux1-dev",
            "Niansuh/FLUX.1-schnell",
            "el-el-san/t2i_flux",
            "John6666/Diffusion80XX4g",
            "Jeff850/FLUX.1-schnell",
            "rajofearth/black-forest-labs-FLUX.1-schnell",
            "aexyb/Dale",
            "Deadmon/FLUX.1-DEV-Canny",
            "AlekseyCalvin/soonfactory",
            "Deddy/FLUX_PaketLengkap",
            "Akjava/flux1-schnell-mask-inpaint",
            "vyloup/FLUX-LoRA-DLC",
            "KoiBoi9/black-forest-labs-FLUX.1-schnell",
            "voodoohop/FLUX.1-schnell",
            "John6666/Diffusion80XX4",
            "altetaube/black-forest-labs-FLUX.1-schnell",
            "AlekseyCalvin/soonfactory3",
            "Ffftdtd5dtft/gfgf",
            "John6666/blitz_diffusion4",
            "huan2hoang3/flux2",
            "Rooc/FLUX-Fast",
            "m-ric/PuLID-FLUX",
            "guardiancc/FLUX-LoRA-DLC",
            "Dagfinn1962/FLUX.1-Schnell-Serverless",
            "PeepDaSlan9/HYDRAS_black-forest-labs-FLUX.1-schnell",
            "arad1367/FLUX.1_For_Marketing_Advertising",
            "ighoshsubho/flux-sam-florence",
            "adamelliotfields/playground-template"
        ],
        "createdAt": "2024-07-31T19:58:05.000Z"
    },
    {
        "_id": "66e975eddc6a07585b2835a0",
        "id": "seawolf2357/flux-lora-military-artillery-k9",
        "modelId": "seawolf2357/flux-lora-military-artillery-k9",
        "author": "seawolf2357",
        "sha": "e0697018338236296713f268ec55d7d4c737661b",
        "lastModified": "2024-09-17T12:30:45.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "autotrain",
            "spacerunner",
            "text-to-image",
            "flux",
            "lora",
            "template:sd-lora",
            "base_model:black-forest-labs/FLUX.1-dev",
            "base_model:adapter:black-forest-labs/FLUX.1-dev",
            "license:other",
            "region:us"
        ],
        "downloads": 298,
        "library_name": "diffusers",
        "widgetData": [
            {
                "text": "driving, self-propelled artillery 'K9'",
                "output": {
                    "url": "https://huggingface.co/seawolf2357/flux-lora-military-artillery-k9/resolve/main/samples/1726576049901__000001000_0.jpg"
                }
            },
            {
                "text": "battle,  self-propelled artillery 'K9'",
                "output": {
                    "url": "https://huggingface.co/seawolf2357/flux-lora-military-artillery-k9/resolve/main/samples/1726576100467__000001000_2.jpg"
                }
            }
        ],
        "likes": 46,
        "model-index": null,
        "cardData": {
            "base_model": "black-forest-labs/FLUX.1-dev",
            "license": "other",
            "license_name": "flux-1-dev-non-commercial-license",
            "license_link": "https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md",
            "tags": [
                "autotrain",
                "spacerunner",
                "text-to-image",
                "flux",
                "lora",
                "diffusers",
                "template:sd-lora"
            ],
            "widget": [
                {
                    "text": "driving, self-propelled artillery 'K9'",
                    "output": {
                        "url": "https://huggingface.co/seawolf2357/flux-lora-military-artillery-k9/resolve/main/samples/1726576049901__000001000_0.jpg"
                    }
                },
                {
                    "text": "battle,  self-propelled artillery 'K9'",
                    "output": {
                        "url": "https://huggingface.co/seawolf2357/flux-lora-military-artillery-k9/resolve/main/samples/1726576100467__000001000_2.jpg"
                    }
                }
            ],
            "instance_prompt": "self-propelled artillery 'K9'"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "flux-lora-military-artillery-k9.safetensors"
            },
            {
                "rfilename": "samples/1726576049901__000001000_0.jpg"
            },
            {
                "rfilename": "samples/1726576075191__000001000_1.jpg"
            },
            {
                "rfilename": "samples/1726576100467__000001000_2.jpg"
            }
        ],
        "spaces": [
            "openfree/mixgen3",
            "openfree/ginigen-gallery",
            "openfree/ginigen-gallery-backup"
        ],
        "createdAt": "2024-09-17T12:28:29.000Z"
    },
    {
        "_id": "67477e5bf03b99395789d8a5",
        "id": "bartowski/QwQ-32B-Preview-GGUF",
        "modelId": "bartowski/QwQ-32B-Preview-GGUF",
        "author": "bartowski",
        "sha": "8f5be0e405df00fdc3cc2905ca63aaccedafd59f",
        "lastModified": "2024-11-27T21:57:57.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "gguf",
            "chat",
            "text-generation",
            "en",
            "base_model:Qwen/QwQ-32B-Preview",
            "base_model:quantized:Qwen/QwQ-32B-Preview",
            "license:apache-2.0",
            "endpoints_compatible",
            "region:us",
            "imatrix",
            "conversational"
        ],
        "downloads": 49994,
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 43,
        "model-index": null,
        "cardData": {
            "quantized_by": "bartowski",
            "pipeline_tag": "text-generation",
            "language": [
                "en"
            ],
            "license_link": "https://huggingface.co/Qwen/QwQ-32B-Preview/blob/main/LICENSE",
            "license": "apache-2.0",
            "tags": [
                "chat"
            ],
            "base_model": "Qwen/QwQ-32B-Preview"
        },
        "gguf": {
            "total": 32763876352,
            "architecture": "qwen2",
            "context_length": 32768,
            "quantize_imatrix_file": "/models_out/QwQ-32B-Preview-GGUF/QwQ-32B-Preview.imatrix",
            "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are a helpful and harmless assistant. You are Qwen developed by Alibaba. You should think step-by-step.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
            "bos_token": "<|endoftext|>",
            "eos_token": "<|im_end|>"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "QwQ-32B-Preview-IQ2_M.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-IQ2_S.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-IQ2_XS.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-IQ3_M.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-IQ3_XS.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-IQ4_NL.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-IQ4_XS.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q2_K.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q2_K_L.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q3_K_L.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q3_K_M.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q3_K_S.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q3_K_XL.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q4_0.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q4_0_4_4.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q4_0_4_8.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q4_0_8_8.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q4_K_L.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q4_K_M.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q4_K_S.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q5_K_L.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q5_K_M.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q5_K_S.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q6_K.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q6_K_L.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-Q8_0.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-bf16/QwQ-32B-Preview-bf16-00001-of-00002.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview-bf16/QwQ-32B-Preview-bf16-00002-of-00002.gguf"
            },
            {
                "rfilename": "QwQ-32B-Preview.imatrix"
            },
            {
                "rfilename": "README.md"
            }
        ],
        "spaces": [
            "Lyte/QwQ-32-Preview-GGUF-Demo"
        ],
        "createdAt": "2024-11-27T20:17:31.000Z"
    },
    {
        "_id": "67458a083dd665eec82ab2c1",
        "id": "AIDC-AI/Ovis1.6-Gemma2-27B",
        "modelId": "AIDC-AI/Ovis1.6-Gemma2-27B",
        "author": "AIDC-AI",
        "sha": "1c18c1e92281df303545f22c27200f046fc44ec4",
        "lastModified": "2024-11-26T09:14:29.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "image-text-to-text",
        "tags": [
            "transformers",
            "safetensors",
            "ovis",
            "text-generation",
            "MLLM",
            "image-text-to-text",
            "conversational",
            "custom_code",
            "en",
            "dataset:AIDC-AI/Ovis-dataset",
            "arxiv:2405.20797",
            "license:apache-2.0",
            "autotrain_compatible",
            "region:us"
        ],
        "downloads": 335,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 42,
        "model-index": null,
        "config": {
            "architectures": [
                "Ovis"
            ],
            "auto_map": {
                "AutoConfig": "configuration_ovis.OvisConfig",
                "AutoModelForCausalLM": "modeling_ovis.Ovis"
            },
            "model_type": "ovis",
            "tokenizer_config": {
                "bos_token": "<bos>",
                "chat_template": "{{ bos_token }}{% if messages[0]['role'] == 'system' %}{{ raise_exception('System role not supported') }}{% endif %}{% for message in messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{{ '<start_of_turn>' + role + '\n' + message['content'] | trim + '<end_of_turn>\n' }}{% endfor %}{% if add_generation_prompt %}{{'<start_of_turn>model\n'}}{% endif %}",
                "eos_token": "<eos>",
                "pad_token": "<pad>",
                "unk_token": "<unk>",
                "use_default_system_prompt": false
            }
        },
        "cardData": {
            "license": "apache-2.0",
            "datasets": [
                "AIDC-AI/Ovis-dataset"
            ],
            "library_name": "transformers",
            "tags": [
                "MLLM"
            ],
            "pipeline_tag": "image-text-to-text",
            "language": [
                "en"
            ]
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "custom_class": "modeling_ovis.Ovis",
            "pipeline_tag": "text-generation"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "NOTICE"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "configuration_ovis.py"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "model-00001-of-00012.safetensors"
            },
            {
                "rfilename": "model-00002-of-00012.safetensors"
            },
            {
                "rfilename": "model-00003-of-00012.safetensors"
            },
            {
                "rfilename": "model-00004-of-00012.safetensors"
            },
            {
                "rfilename": "model-00005-of-00012.safetensors"
            },
            {
                "rfilename": "model-00006-of-00012.safetensors"
            },
            {
                "rfilename": "model-00007-of-00012.safetensors"
            },
            {
                "rfilename": "model-00008-of-00012.safetensors"
            },
            {
                "rfilename": "model-00009-of-00012.safetensors"
            },
            {
                "rfilename": "model-00010-of-00012.safetensors"
            },
            {
                "rfilename": "model-00011-of-00012.safetensors"
            },
            {
                "rfilename": "model-00012-of-00012.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "modeling_ovis.py"
            },
            {
                "rfilename": "preprocessor_config.json"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer.model"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [],
        "createdAt": "2024-11-26T08:42:48.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 28863552566
            },
            "total": 28863552566
        }
    },
    {
        "_id": "6720d1ac035954d93b936a64",
        "id": "briaai/RMBG-2.0",
        "modelId": "briaai/RMBG-2.0",
        "author": "briaai",
        "sha": "9facff9247465843da0982b5033629fbd3abfc98",
        "lastModified": "2024-11-20T06:35:20.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "image-segmentation",
        "tags": [
            "transformers",
            "pytorch",
            "onnx",
            "safetensors",
            "image-segmentation",
            "remove background",
            "background",
            "background-removal",
            "Pytorch",
            "vision",
            "legal liability",
            "custom_code",
            "license:other",
            "region:us"
        ],
        "downloads": 61049,
        "library_name": "transformers",
        "likes": 462,
        "model-index": null,
        "config": {
            "architectures": [
                "BiRefNet"
            ],
            "auto_map": {
                "AutoConfig": "BiRefNet_config.BiRefNetConfig",
                "AutoModelForImageSegmentation": "birefnet.BiRefNet"
            }
        },
        "cardData": {
            "license": "other",
            "license_name": "bria-rmbg-2.0",
            "license_link": "https://bria.ai/bria-huggingface-model-license-agreement/",
            "pipeline_tag": "image-segmentation",
            "tags": [
                "remove background",
                "background",
                "background-removal",
                "Pytorch",
                "vision",
                "legal liability",
                "transformers"
            ]
        },
        "transformersInfo": {
            "auto_model": "AutoModelForImageSegmentation",
            "custom_class": "birefnet.BiRefNet",
            "pipeline_tag": "image-segmentation"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "BiRefNet_config.py"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "birefnet.py"
            },
            {
                "rfilename": "collage5.png"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "diagram1.png"
            },
            {
                "rfilename": "model.safetensors"
            },
            {
                "rfilename": "onnx/model.onnx"
            },
            {
                "rfilename": "onnx/model_bnb4.onnx"
            },
            {
                "rfilename": "onnx/model_fp16.onnx"
            },
            {
                "rfilename": "onnx/model_int8.onnx"
            },
            {
                "rfilename": "onnx/model_q4.onnx"
            },
            {
                "rfilename": "onnx/model_q4f16.onnx"
            },
            {
                "rfilename": "onnx/model_quantized.onnx"
            },
            {
                "rfilename": "onnx/model_uint8.onnx"
            },
            {
                "rfilename": "preprocessor_config.json"
            },
            {
                "rfilename": "pytorch_model.bin"
            },
            {
                "rfilename": "t4.png"
            }
        ],
        "spaces": [
            "briaai/BRIA-RMBG-2.0",
            "Jonny001/RMBG-Image-Background-Remover",
            "svjack/BRIA-RMBG-2.0-Video",
            "svjack/BRIA-RMBG-2.0",
            "tuan2308/BRIA-RMBG-2.0",
            "innoai/BRIA-RMBG-2.0",
            "iatiah/BRIA-RMBG-2.0",
            "Greff3/BRIA-RMBG-2.0",
            "Rayhan6251/ray",
            "mcmonostereo/BRIA-RMBG-2.0",
            "kooldark/removebg",
            "Eternal-AI/briaai-RMBG-2.0",
            "ViniDosSantos/Remove_Background",
            "John47225/BRIA-RMBG-2.0"
        ],
        "createdAt": "2024-10-29T12:14:36.000Z",
        "safetensors": {
            "parameters": {
                "I64": 497664,
                "F32": 220202578
            },
            "total": 220700242
        }
    },
    {
        "_id": "66e171715ff84d93297e71e5",
        "id": "seawolf2357/flux-lora-car-rolls-royce",
        "modelId": "seawolf2357/flux-lora-car-rolls-royce",
        "author": "seawolf2357",
        "sha": "d4b6281e28ce0655482d488b273ee513c1dcae8f",
        "lastModified": "2024-09-17T07:56:36.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "autotrain",
            "spacerunner",
            "text-to-image",
            "flux",
            "lora",
            "template:sd-lora",
            "base_model:black-forest-labs/FLUX.1-dev",
            "base_model:adapter:black-forest-labs/FLUX.1-dev",
            "license:other",
            "region:us"
        ],
        "downloads": 235,
        "library_name": "diffusers",
        "widgetData": [
            {
                "text": "a black and white photo of a Rolls Royce car with a hood ornament on top of it. The logo of the car is visible, along with the text \"Rolls Royce\" written on it.",
                "output": {
                    "url": "https://huggingface.co/seawolf2357/flux-lora-car-rolls-royce/resolve/main/samples/gallery_20240911_164722.png"
                }
            },
            {
                "text": "멋진 요트를 배경으로 한 롤스로이스, along with the text \"Rolls Royce\" written on it.",
                "output": {
                    "url": "https://huggingface.co/seawolf2357/flux-lora-car-rolls-royce/resolve/main/samples/gallery_20240911_124736.png"
                }
            },
            {
                "text": "멋진 자가용 비행기를 배경으로 한 롤스로이스, along with the text \"Rolls Royce\" written on it.",
                "output": {
                    "url": "https://huggingface.co/seawolf2357/flux-lora-car-rolls-royce/resolve/main/samples/gallery_20240911_124931.png"
                }
            },
            {
                "text": "롤스로이스 앞에 서있는 테일러스위프, along with the text \"Rolls Royce\" written on it.",
                "output": {
                    "url": "https://huggingface.co/seawolf2357/flux-lora-car-rolls-royce/resolve/main/samples/gallery_20240911_125109.png"
                }
            },
            {
                "text": "롤스로이스 실내 인테리어, along with the text \"Rolls Royce\" written on it.",
                "output": {
                    "url": "https://huggingface.co/seawolf2357/flux-lora-car-rolls-royce/resolve/main/samples/gallery_20240911_130343.png"
                }
            }
        ],
        "likes": 49,
        "model-index": null,
        "cardData": {
            "base_model": "black-forest-labs/FLUX.1-dev",
            "license": "other",
            "license_name": "flux-1-dev-non-commercial-license",
            "license_link": "https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md",
            "tags": [
                "autotrain",
                "spacerunner",
                "text-to-image",
                "flux",
                "lora",
                "diffusers",
                "template:sd-lora"
            ],
            "widget": [
                {
                    "text": "a black and white photo of a Rolls Royce car with a hood ornament on top of it. The logo of the car is visible, along with the text \"Rolls Royce\" written on it.",
                    "output": {
                        "url": "https://huggingface.co/seawolf2357/flux-lora-car-rolls-royce/resolve/main/samples/gallery_20240911_164722.png"
                    }
                },
                {
                    "text": "멋진 요트를 배경으로 한 롤스로이스, along with the text \"Rolls Royce\" written on it.",
                    "output": {
                        "url": "https://huggingface.co/seawolf2357/flux-lora-car-rolls-royce/resolve/main/samples/gallery_20240911_124736.png"
                    }
                },
                {
                    "text": "멋진 자가용 비행기를 배경으로 한 롤스로이스, along with the text \"Rolls Royce\" written on it.",
                    "output": {
                        "url": "https://huggingface.co/seawolf2357/flux-lora-car-rolls-royce/resolve/main/samples/gallery_20240911_124931.png"
                    }
                },
                {
                    "text": "롤스로이스 앞에 서있는 테일러스위프, along with the text \"Rolls Royce\" written on it.",
                    "output": {
                        "url": "https://huggingface.co/seawolf2357/flux-lora-car-rolls-royce/resolve/main/samples/gallery_20240911_125109.png"
                    }
                },
                {
                    "text": "롤스로이스 실내 인테리어, along with the text \"Rolls Royce\" written on it.",
                    "output": {
                        "url": "https://huggingface.co/seawolf2357/flux-lora-car-rolls-royce/resolve/main/samples/gallery_20240911_130343.png"
                    }
                }
            ],
            "instance_prompt": "car rollsroyce"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "flux-lora-car-rolls-royce.safetensors"
            },
            {
                "rfilename": "samples/1726050664981__000001000_0.jpg"
            },
            {
                "rfilename": "samples/gallery_20240911_124736.png"
            },
            {
                "rfilename": "samples/gallery_20240911_124931.png"
            },
            {
                "rfilename": "samples/gallery_20240911_125109.png"
            },
            {
                "rfilename": "samples/gallery_20240911_130343.png"
            },
            {
                "rfilename": "samples/gallery_20240911_164722.png"
            }
        ],
        "spaces": [
            "openfree/mixgen3",
            "openfree/ginigen-gallery",
            "openfree/ginigen-gallery-backup"
        ],
        "createdAt": "2024-09-11T10:31:13.000Z"
    },
    {
        "_id": "67287d0d53709f441b6509ba",
        "id": "Efficient-Large-Model/Sana_1600M_1024px",
        "modelId": "Efficient-Large-Model/Sana_1600M_1024px",
        "author": "Efficient-Large-Model",
        "sha": "bc305d7162d18570064236b17a3732dff1d57861",
        "lastModified": "2024-11-21T09:56:07.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-image",
        "tags": [
            "text-to-image",
            "Sana",
            "1024px_based_image_size",
            "en",
            "zh",
            "arxiv:2410.10629",
            "base_model:Efficient-Large-Model/Sana_1600M_1024px",
            "base_model:finetune:Efficient-Large-Model/Sana_1600M_1024px",
            "region:us"
        ],
        "downloads": 0,
        "likes": 92,
        "model-index": null,
        "cardData": {
            "tags": [
                "text-to-image",
                "Sana",
                "1024px_based_image_size"
            ],
            "language": [
                "en",
                "zh"
            ],
            "base_model": [
                "Efficient-Large-Model/Sana_1600M_1024px"
            ],
            "pipeline_tag": "text-to-image"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE.txt"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "checkpoints/Sana_1600M_1024px.pth"
            }
        ],
        "spaces": [
            "VamooseBambel/Sana-1.6B",
            "imw34531/nvlabs-sana",
            "gen6scp/sana-zero"
        ],
        "createdAt": "2024-11-04T07:51:41.000Z"
    },
    {
        "_id": "673555852d13ee612bc00910",
        "id": "NexaAIDev/omnivision-968M",
        "modelId": "NexaAIDev/omnivision-968M",
        "author": "NexaAIDev",
        "sha": "881a253172b4f5b9439d542e0bc3bddceafe2b8e",
        "lastModified": "2024-11-28T20:31:25.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "tags": [
            "gguf",
            "multimodal",
            "conversational",
            "GGUF",
            "Image-Text-to-Text",
            "license:apache-2.0",
            "region:us"
        ],
        "downloads": 10250,
        "likes": 441,
        "model-index": null,
        "cardData": {
            "license": "apache-2.0",
            "tags": [
                "multimodal",
                "conversational",
                "GGUF",
                "Image-Text-to-Text"
            ]
        },
        "gguf": {
            "total": 474367936,
            "architecture": "siglip"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "Nano-Vlm-Processor-494M-F16.gguf"
            },
            {
                "rfilename": "Nano-Vlm-Processor-494M-Q8_0.gguf"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "benchmark.png"
            },
            {
                "rfilename": "mmproj-omni-vlm-f16.gguf"
            },
            {
                "rfilename": "omnivision-text-optimized-llm-Q8_0.gguf"
            },
            {
                "rfilename": "omnivision-text-optimized-llm-f16.gguf"
            },
            {
                "rfilename": "omnivision-text-optimized-mmproj-f16.gguf"
            },
            {
                "rfilename": "omnivision-text-optimized-mmproj-f32.gguf"
            }
        ],
        "spaces": [
            "NexaAIDev/omnivlm-dpo-demo",
            "MasterBlueSAMA/NexaOmniVision",
            "thevatsalsaglani/omnivlm-dpo-demo",
            "dfhgrfsfdeaadw/omnivlm-dpo-demo",
            "Nymbo/omnivlm-dpo-demo"
        ],
        "createdAt": "2024-11-14T01:42:29.000Z"
    },
    {
        "_id": "66eb042015688c55aba845ac",
        "id": "meta-llama/Llama-3.2-11B-Vision-Instruct",
        "modelId": "meta-llama/Llama-3.2-11B-Vision-Instruct",
        "author": "meta-llama",
        "sha": "cee5b78e6faed15d5f2e6d8a654fd5b247c0d5ca",
        "lastModified": "2024-09-30T03:03:34.000Z",
        "private": false,
        "disabled": false,
        "gated": "manual",
        "pipeline_tag": "image-text-to-text",
        "tags": [
            "transformers",
            "safetensors",
            "mllama",
            "image-text-to-text",
            "facebook",
            "meta",
            "pytorch",
            "llama",
            "llama-3",
            "conversational",
            "en",
            "de",
            "fr",
            "it",
            "pt",
            "hi",
            "es",
            "th",
            "arxiv:2204.05149",
            "license:llama3.2",
            "text-generation-inference",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 2119672,
        "library_name": "transformers",
        "widgetData": [
            {
                "example_title": "rococo art",
                "messages": [
                    {
                        "role": "user",
                        "content": [
                            {
                                "type": "text",
                                "text": "Which era does this piece belong to? Give details about the era."
                            },
                            {
                                "type": "image_url",
                                "image_url": {
                                    "url": "https://huggingface.co/datasets/huggingface/release-assets/resolve/main/rococo.jpg"
                                }
                            }
                        ]
                    },
                    {
                        "role": "assistant",
                        "content": "The piece is a painting of a woman in a red dress, surrounded by gold and white ornate details. The woman is depicted in mid-air, with her arms outstretched and her legs bent at the knees. She is holding a bouquet of flowers in her right hand and a fruit in her left hand.\n\nThe background of the painting is a light blue sky with pink clouds, and there are also some pink flowers and green leaves surrounding the woman. The overall atmosphere of the painting is one of joy and celebration, as if the woman is dancing or celebrating something.\n\nThis piece belongs to the Rococo era, which was a style of art and architecture that emerged in Europe in the 18th century. The Rococo style is characterized by its use of pastel colors, curved lines, and ornate details. It was popularized during the reign of King Louis XV of France, who ruled from 1715 to 1774.\n"
                    }
                ]
            },
            {
                "example_title": "diagram understanding",
                "messages": [
                    {
                        "role": "user",
                        "content": [
                            {
                                "type": "text",
                                "text": "Where do the droughts happen according to this diagram?"
                            },
                            {
                                "type": "image_url",
                                "image_url": {
                                    "url": "https://huggingface.co/datasets/huggingface/release-assets/resolve/main/weather_events.png"
                                }
                            }
                        ]
                    },
                    {
                        "role": "assistant",
                        "content": "# Drought Regions in 2016\n\nAccording to the diagram, the regions that experienced severe droughts in 2016 are:\n\n- **Eastern and Southern Africa**: This region was severely affected by droughts, with significant impacts on agriculture and water resources.\n- **Western and Southern Africa**: Droughts also occurred in this region, leading to food insecurity and other challenges.\n\nThese regions were particularly vulnerable to droughts in 2016, highlighting the need for effective water management strategies and climate resilience measures.\n"
                    }
                ]
            },
            {
                "example_title": "document qa",
                "messages": [
                    {
                        "role": "user",
                        "content": [
                            {
                                "type": "text",
                                "text": "How long does it take from invoice date to due date? Be short and concise."
                            },
                            {
                                "type": "image_url",
                                "image_url": {
                                    "url": "https://huggingface.co/datasets/huggingface/release-assets/resolve/main/invoice.png"
                                }
                            }
                        ]
                    },
                    {
                        "role": "assistant",
                        "content": "To determine the time gap between the invoice date and the due date, we need to calculate the difference between these two dates.\n\nInvoice Date: February 11, 2019\nDue Date: February 26, 2019\n\nStep 1: Calculate the Difference in Days\n\nFebruary 26 - February 11 = 15 days\n\nTherefore, the time gap between the invoice date and the due date is 15 days.\n"
                    }
                ]
            }
        ],
        "likes": 1025,
        "model-index": null,
        "config": {
            "architectures": [
                "MllamaForConditionalGeneration"
            ],
            "model_type": "mllama",
            "processor_config": {
                "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- if strftime_now is defined %}\n        {%- set date_string = strftime_now(\"%d %b %Y\") %}\n    {%- else %}\n        {%- set date_string = \"26 Jul 2024\" %}\n    {%- endif %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- Find out if there are any images #}\n{% set image_ns = namespace(has_images=false) %}      \n{%- for message in messages %}\n    {%- for content in message['content'] %}\n        {%- if content['type'] == 'image' %}\n            {%- set image_ns.has_images = true %}\n        {%- endif %}\n    {%- endfor %}\n{%- endfor %}\n\n{#- Error out if there are images and system message #}\n{%- if image_ns.has_images and not system_message == \"\" %}\n    {{- raise_exception(\"Prompting with images is incompatible with system messages.\") }}\n{%- endif %}\n\n{#- System message if there are no images #}\n{%- if not image_ns.has_images %}\n    {{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n    {%- if tools is not none %}\n        {{- \"Environment: ipython\\n\" }}\n    {%- endif %}\n    {{- \"Cutting Knowledge Date: December 2023\\n\" }}\n    {{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n    {%- if tools is not none and not tools_in_user_message %}\n        {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n        {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n        {{- \"Do not use variables.\\n\\n\" }}\n        {%- for t in tools %}\n            {{- t | tojson(indent=4) }}\n            {{- \"\\n\\n\" }}\n        {%- endfor %}\n    {%- endif %}\n    {{- system_message }}\n    {{- \"<|eot_id|>\" }}\n{%- endif %}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n    {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n' }}\n        {%- if message['content'] is string %}\n            {{- message['content'] }}\n        {%- else %}\n            {%- for content in message['content'] %}\n                {%- if content['type'] == 'image' %}\n                    {{- '<|image|>' }}\n                {%- elif content['type'] == 'text' %}\n                    {{- content['text'] }}\n                {%- endif %}\n            {%- endfor %}\n        {%- endif %}\n        {{- '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n        {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n        {{- '\"parameters\": ' }}\n        {{- tool_call.arguments | tojson }}\n        {{- \"}\" }}\n        {{- \"<|eot_id|>\" }}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n"
            },
            "tokenizer_config": {
                "bos_token": "<|begin_of_text|>",
                "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- if strftime_now is defined %}\n        {%- set date_string = strftime_now(\"%d %b %Y\") %}\n    {%- else %}\n        {%- set date_string = \"26 Jul 2024\" %}\n    {%- endif %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- Find out if there are any images #}\n{% set image_ns = namespace(has_images=false) %}      \n{%- for message in messages %}\n    {%- for content in message['content'] %}\n        {%- if content['type'] == 'image' %}\n            {%- set image_ns.has_images = true %}\n        {%- endif %}\n    {%- endfor %}\n{%- endfor %}\n\n{#- Error out if there are images and system message #}\n{%- if image_ns.has_images and not system_message == \"\" %}\n    {{- raise_exception(\"Prompting with images is incompatible with system messages.\") }}\n{%- endif %}\n\n{#- System message if there are no images #}\n{%- if not image_ns.has_images %}\n    {{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n    {%- if tools is not none %}\n        {{- \"Environment: ipython\\n\" }}\n    {%- endif %}\n    {{- \"Cutting Knowledge Date: December 2023\\n\" }}\n    {{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n    {%- if tools is not none and not tools_in_user_message %}\n        {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n        {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n        {{- \"Do not use variables.\\n\\n\" }}\n        {%- for t in tools %}\n            {{- t | tojson(indent=4) }}\n            {{- \"\\n\\n\" }}\n        {%- endfor %}\n    {%- endif %}\n    {{- system_message }}\n    {{- \"<|eot_id|>\" }}\n{%- endif %}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n    {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n' }}\n        {%- if message['content'] is string %}\n            {{- message['content'] }}\n        {%- else %}\n            {%- for content in message['content'] %}\n                {%- if content['type'] == 'image' %}\n                    {{- '<|image|>' }}\n                {%- elif content['type'] == 'text' %}\n                    {{- content['text'] }}\n                {%- endif %}\n            {%- endfor %}\n        {%- endif %}\n        {{- '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n        {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n        {{- '\"parameters\": ' }}\n        {{- tool_call.arguments | tojson }}\n        {{- \"}\" }}\n        {{- \"<|eot_id|>\" }}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
                "eos_token": "<|eot_id|>",
                "pad_token": "<|finetune_right_pad_id|>"
            }
        },
        "cardData": {
            "language": [
                "en",
                "de",
                "fr",
                "it",
                "pt",
                "hi",
                "es",
                "th"
            ],
            "library_name": "transformers",
            "pipeline_tag": "image-text-to-text",
            "tags": [
                "facebook",
                "meta",
                "pytorch",
                "llama",
                "llama-3"
            ],
            "widget": [
                {
                    "example_title": "rococo art",
                    "messages": [
                        {
                            "role": "user",
                            "content": [
                                {
                                    "type": "text",
                                    "text": "Which era does this piece belong to? Give details about the era."
                                },
                                {
                                    "type": "image_url",
                                    "image_url": {
                                        "url": "https://huggingface.co/datasets/huggingface/release-assets/resolve/main/rococo.jpg"
                                    }
                                }
                            ]
                        },
                        {
                            "role": "assistant",
                            "content": "The piece is a painting of a woman in a red dress, surrounded by gold and white ornate details. The woman is depicted in mid-air, with her arms outstretched and her legs bent at the knees. She is holding a bouquet of flowers in her right hand and a fruit in her left hand.\n\nThe background of the painting is a light blue sky with pink clouds, and there are also some pink flowers and green leaves surrounding the woman. The overall atmosphere of the painting is one of joy and celebration, as if the woman is dancing or celebrating something.\n\nThis piece belongs to the Rococo era, which was a style of art and architecture that emerged in Europe in the 18th century. The Rococo style is characterized by its use of pastel colors, curved lines, and ornate details. It was popularized during the reign of King Louis XV of France, who ruled from 1715 to 1774.\n"
                        }
                    ]
                },
                {
                    "example_title": "diagram understanding",
                    "messages": [
                        {
                            "role": "user",
                            "content": [
                                {
                                    "type": "text",
                                    "text": "Where do the droughts happen according to this diagram?"
                                },
                                {
                                    "type": "image_url",
                                    "image_url": {
                                        "url": "https://huggingface.co/datasets/huggingface/release-assets/resolve/main/weather_events.png"
                                    }
                                }
                            ]
                        },
                        {
                            "role": "assistant",
                            "content": "# Drought Regions in 2016\n\nAccording to the diagram, the regions that experienced severe droughts in 2016 are:\n\n- **Eastern and Southern Africa**: This region was severely affected by droughts, with significant impacts on agriculture and water resources.\n- **Western and Southern Africa**: Droughts also occurred in this region, leading to food insecurity and other challenges.\n\nThese regions were particularly vulnerable to droughts in 2016, highlighting the need for effective water management strategies and climate resilience measures.\n"
                        }
                    ]
                },
                {
                    "example_title": "document qa",
                    "messages": [
                        {
                            "role": "user",
                            "content": [
                                {
                                    "type": "text",
                                    "text": "How long does it take from invoice date to due date? Be short and concise."
                                },
                                {
                                    "type": "image_url",
                                    "image_url": {
                                        "url": "https://huggingface.co/datasets/huggingface/release-assets/resolve/main/invoice.png"
                                    }
                                }
                            ]
                        },
                        {
                            "role": "assistant",
                            "content": "To determine the time gap between the invoice date and the due date, we need to calculate the difference between these two dates.\n\nInvoice Date: February 11, 2019\nDue Date: February 26, 2019\n\nStep 1: Calculate the Difference in Days\n\nFebruary 26 - February 11 = 15 days\n\nTherefore, the time gap between the invoice date and the due date is 15 days.\n"
                        }
                    ]
                }
            ],
            "license": "llama3.2",
            "extra_gated_prompt": "### LLAMA 3.2 COMMUNITY LICENSE AGREEMENT\n\nLlama 3.2 Version Release Date: September 25, 2024\n\n“Agreement” means the terms and conditions for use, reproduction, distribution  and modification of the Llama Materials set forth herein.\n\n“Documentation” means the specifications, manuals and documentation accompanying Llama 3.2 distributed by Meta at https://llama.meta.com/doc/overview.\n\n“Licensee” or “you” means you, or your employer or any other person or entity (if you are  entering into this Agreement on such person or entity’s behalf), of the age required under applicable laws, rules or regulations to provide legal consent and that has legal authority to bind your employer or such other person or entity if you are entering in this Agreement on their behalf.\n\n“Llama 3.2” means the foundational large language models and software and algorithms, including machine-learning model code, trained model weights, inference-enabling code, training-enabling code, fine-tuning enabling code and other elements of the foregoing distributed by Meta at  https://www.llama.com/llama-downloads.\n\n“Llama Materials” means, collectively, Meta’s proprietary Llama 3.2 and Documentation (and  any portion thereof) made available under this Agreement.\n\n“Meta” or “we” means Meta Platforms Ireland Limited (if you are located in or,  if you are an entity, your principal place of business is in the EEA or Switzerland)  and Meta Platforms, Inc. (if you are located outside of the EEA or Switzerland). \n\nBy clicking “I Accept” below or by using or distributing any portion or element of the Llama Materials, you agree to be bound by this Agreement.\n\n1. License Rights and Redistribution.\na. Grant of Rights. You are granted a non-exclusive, worldwide,  non-transferable and royalty-free limited license under Meta’s intellectual property or other rights  owned by Meta embodied in the Llama Materials to use, reproduce, distribute, copy, create derivative works  of, and make modifications to the Llama Materials.  \nb. Redistribution and Use.  \ni. If you distribute or make available the Llama Materials (or any derivative works thereof),  or a product or service (including another AI model) that contains any of them, you shall (A) provide a copy of this Agreement with any such Llama Materials; and (B) prominently display “Built with Llama” on a related website, user interface, blogpost, about page, or product documentation. If you use the Llama Materials or any outputs or results of the Llama Materials to create, train, fine tune, or otherwise improve an AI model, which is distributed or made available, you shall also include “Llama” at the beginning of any such AI model name.\nii. If you receive Llama Materials, or any derivative works thereof, from a Licensee as part of an integrated end user product, then Section 2 of this Agreement will not apply to you. \niii. You must retain in all copies of the Llama Materials that you distribute the  following attribution notice within a “Notice” text file distributed as a part of such copies:  “Llama 3.2 is licensed under the Llama 3.2 Community License, Copyright © Meta Platforms, Inc. All Rights Reserved.”\niv. Your use of the Llama Materials must comply with applicable laws and regulations (including trade compliance laws and regulations) and adhere to the Acceptable Use Policy for the Llama Materials (available at https://www.llama.com/llama3_2/use-policy), which is hereby  incorporated by reference into this Agreement.\n  \n2. Additional Commercial Terms. If, on the Llama 3.2 version release date, the monthly active users of the products or services made available by or for Licensee, or Licensee’s affiliates,  is greater than 700 million monthly active users in the preceding calendar month, you must request  a license from Meta, which Meta may grant to you in its sole discretion, and you are not authorized to exercise any of the rights under this Agreement unless or until Meta otherwise expressly grants you such rights.\n3. Disclaimer of Warranty. UNLESS REQUIRED BY APPLICABLE LAW, THE LLAMA MATERIALS AND ANY OUTPUT AND  RESULTS THEREFROM ARE PROVIDED ON AN “AS IS” BASIS, WITHOUT WARRANTIES OF ANY KIND, AND META DISCLAIMS ALL WARRANTIES OF ANY KIND, BOTH EXPRESS AND IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE. YOU ARE SOLELY RESPONSIBLE FOR DETERMINING THE APPROPRIATENESS OF USING OR REDISTRIBUTING THE LLAMA MATERIALS AND ASSUME ANY RISKS ASSOCIATED WITH YOUR USE OF THE LLAMA MATERIALS AND ANY OUTPUT AND RESULTS.\n4. Limitation of Liability. IN NO EVENT WILL META OR ITS AFFILIATES BE LIABLE UNDER ANY THEORY OF LIABILITY,  WHETHER IN CONTRACT, TORT, NEGLIGENCE, PRODUCTS LIABILITY, OR OTHERWISE, ARISING OUT OF THIS AGREEMENT,  FOR ANY LOST PROFITS OR ANY INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR PUNITIVE DAMAGES, EVEN  IF META OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF ANY OF THE FOREGOING.\n5. Intellectual Property.\na. No trademark licenses are granted under this Agreement, and in connection with the Llama Materials,  neither Meta nor Licensee may use any name or mark owned by or associated with the other or any of its affiliates,  except as required for reasonable and customary use in describing and redistributing the Llama Materials or as  set forth in this Section 5(a). Meta hereby grants you a license to use “Llama” (the “Mark”) solely as required  to comply with the last sentence of Section 1.b.i. You will comply with Meta’s brand guidelines (currently accessible  at https://about.meta.com/brand/resources/meta/company-brand/). All goodwill arising out of your use of the Mark  will inure to the benefit of Meta.\nb. Subject to Meta’s ownership of Llama Materials and derivatives made by or for Meta, with respect to any derivative works and modifications of the Llama Materials that are made by you, as between you and Meta, you are and will be the owner of such derivative works and modifications.\nc. If you institute litigation or other proceedings against Meta or any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Llama Materials or Llama 3.2 outputs or results, or any portion of any of the foregoing, constitutes infringement of intellectual property or other rights owned or licensable by you, then any licenses granted to you under this Agreement shall terminate as of the date such litigation or claim is filed or instituted. You will indemnify and hold harmless Meta from and against any claim by any third party arising out of or related to your use or distribution of the Llama Materials.\n6. Term and Termination. The term of this Agreement will commence upon your acceptance of this Agreement or access to the Llama Materials and will continue in full force and effect until terminated in accordance with the terms and conditions herein. Meta may terminate this Agreement if you are in breach of any term or condition of this Agreement. Upon termination of this Agreement, you shall delete and cease use of the Llama Materials. Sections 3, 4 and 7 shall survive the termination of this Agreement. \n7. Governing Law and Jurisdiction. This Agreement will be governed and construed under the laws of the State of  California without regard to choice of law principles, and the UN Convention on Contracts for the International Sale of Goods does not apply to this Agreement. The courts of California shall have exclusive jurisdiction of any dispute arising out of this Agreement. \n### Llama 3.2 Acceptable Use Policy\nMeta is committed to promoting safe and fair use of its tools and features, including Llama 3.2.  If you access or use Llama 3.2, you agree to this Acceptable Use Policy (“**Policy**”).  The most recent copy of this policy can be found at [https://www.llama.com/llama3_2/use-policy](https://www.llama.com/llama3_2/use-policy).\n#### Prohibited Uses\nWe want everyone to use Llama 3.2 safely and responsibly. You agree you will not use, or allow others to use, Llama 3.2 to:\n1. Violate the law or others’ rights, including to:\n    1. Engage in, promote, generate, contribute to, encourage, plan, incite, or further illegal or unlawful activity or content, such as:\n        1. Violence or terrorism\n        2. Exploitation or harm to children, including the solicitation, creation, acquisition, or dissemination of child exploitative content or failure to report Child Sexual Abuse Material\n        3. Human trafficking, exploitation, and sexual violence\n        4. The illegal distribution of information or materials to minors, including obscene materials, or failure to employ legally required age-gating in connection with such information or materials.\n        5. Sexual solicitation\n        6. Any other criminal activity\n    1. Engage in, promote, incite, or facilitate the harassment, abuse, threatening, or bullying of individuals or groups of individuals\n    2. Engage in, promote, incite, or facilitate discrimination or other unlawful or harmful conduct in the provision of employment, employment benefits, credit, housing, other economic benefits, or other essential goods and services\n    3. Engage in the unauthorized or unlicensed practice of any profession including, but not limited to, financial, legal, medical/health, or related professional practices\n    4. Collect, process, disclose, generate, or infer private or sensitive information about individuals, including information about individuals’ identity, health, or demographic information, unless you have obtained the right to do so in accordance with applicable law\n    5. Engage in or facilitate any action or generate any content that infringes, misappropriates, or otherwise violates any third-party rights, including the outputs or results of any products or services using the Llama Materials\n    6. Create, generate, or facilitate the creation of malicious code, malware, computer viruses or do anything else that could disable, overburden, interfere with or impair the proper working, integrity, operation or appearance of a website or computer system\n    7. Engage in any action, or facilitate any action, to intentionally circumvent or remove usage restrictions or other safety measures, or to enable functionality disabled by Meta \n2. Engage in, promote, incite, facilitate, or assist in the planning or development of activities that present a risk of death or bodily harm to individuals, including use of Llama 3.2 related to the following:\n    8. Military, warfare, nuclear industries or applications, espionage, use for materials or activities that are subject to the International Traffic Arms Regulations (ITAR) maintained by the United States Department of State or to the U.S. Biological Weapons Anti-Terrorism Act of 1989 or the Chemical Weapons Convention Implementation Act of 1997\n    9. Guns and illegal weapons (including weapon development)\n    10. Illegal drugs and regulated/controlled substances\n    11. Operation of critical infrastructure, transportation technologies, or heavy machinery\n    12. Self-harm or harm to others, including suicide, cutting, and eating disorders\n    13. Any content intended to incite or promote violence, abuse, or any infliction of bodily harm to an individual\n3. Intentionally deceive or mislead others, including use of Llama 3.2 related to the following:\n    14. Generating, promoting, or furthering fraud or the creation or promotion of disinformation\n    15. Generating, promoting, or furthering defamatory content, including the creation of defamatory statements, images, or other content\n    16. Generating, promoting, or further distributing spam\n    17. Impersonating another individual without consent, authorization, or legal right\n    18. Representing that the use of Llama 3.2 or outputs are human-generated\n    19. Generating or facilitating false online engagement, including fake reviews and other means of fake online engagement \n4. Fail to appropriately disclose to end users any known dangers of your AI system 5. Interact with third party tools, models, or software designed to generate unlawful content or engage in unlawful or harmful conduct and/or represent that the outputs of such tools, models, or software are associated with Meta or Llama 3.2\n\nWith respect to any multimodal models included in Llama 3.2, the rights granted under Section 1(a) of the Llama 3.2 Community License Agreement are not being granted to you if you are an individual domiciled in, or a company with a principal place of business in, the European Union. This restriction does not apply to end users of a product or service that incorporates any such multimodal models.\n\nPlease report any violation of this Policy, software “bug,” or other problems that could lead to a violation of this Policy through one of the following means:\n\n* Reporting issues with the model: [https://github.com/meta-llama/llama-models/issues](https://l.workplace.com/l.php?u=https%3A%2F%2Fgithub.com%2Fmeta-llama%2Fllama-models%2Fissues&h=AT0qV8W9BFT6NwihiOHRuKYQM_UnkzN_NmHMy91OT55gkLpgi4kQupHUl0ssR4dQsIQ8n3tfd0vtkobvsEvt1l4Ic6GXI2EeuHV8N08OG2WnbAmm0FL4ObkazC6G_256vN0lN9DsykCvCqGZ)\n* Reporting risky content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)\n* Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)\n* Reporting violations of the Acceptable Use Policy or unlicensed uses of Llama 3.2: LlamaUseReport@meta.com",
            "extra_gated_fields": {
                "First Name": "text",
                "Last Name": "text",
                "Date of birth": "date_picker",
                "Country": "country",
                "Affiliation": "text",
                "Job title": {
                    "type": "select",
                    "options": [
                        "Student",
                        "Research Graduate",
                        "AI researcher",
                        "AI developer/engineer",
                        "Reporter",
                        "Other"
                    ]
                },
                "geo": "ip_location",
                "By clicking Submit below I accept the terms of the license and acknowledge that the information I provide will be collected stored processed and shared in accordance with the Meta Privacy Policy": "checkbox"
            },
            "extra_gated_description": "The information you provide will be collected, stored, processed and shared in accordance with the [Meta Privacy Policy](https://www.facebook.com/privacy/policy/).",
            "extra_gated_button_content": "Submit",
            "extra_gated_eu_disallowed": true
        },
        "transformersInfo": {
            "auto_model": "AutoModelForImageTextToText",
            "pipeline_tag": "image-text-to-text",
            "processor": "AutoProcessor"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE.txt"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "USE_POLICY.md"
            },
            {
                "rfilename": "chat_template.json"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "model-00001-of-00005.safetensors"
            },
            {
                "rfilename": "model-00002-of-00005.safetensors"
            },
            {
                "rfilename": "model-00003-of-00005.safetensors"
            },
            {
                "rfilename": "model-00004-of-00005.safetensors"
            },
            {
                "rfilename": "model-00005-of-00005.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "original/consolidated.pth"
            },
            {
                "rfilename": "original/params.json"
            },
            {
                "rfilename": "original/tokenizer.model"
            },
            {
                "rfilename": "preprocessor_config.json"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [
            "huggingface-projects/llama-3.2-vision-11B",
            "codelion/optillm",
            "NiansuhAI/Main",
            "srgtuszy/llama-3.2-chatbot",
            "VinitT/Llama-3.2-11B-Vision-Instruct",
            "cantuncok/meta-Llama-3.2-11B-Vision-Instruct",
            "yasserrmd/RouterFix",
            "John6666/llama_test",
            "hgdgng/HG_Llama3.2",
            "yasserrmd/MedReportInsight",
            "rphrp1985/llama-3.2-vision-11B",
            "yasserrmd/DailySnap",
            "teledocmedical/llama-vision-hiperespectral",
            "greencatted/ZoomLocation",
            "Aekanun/Thai-HandWriting-to-Text",
            "MadsGalsgaard/Project-W",
            "0xdant/facebook-blenderbot-3B",
            "sanbo1200/OpenCHAT-mini2",
            "rbn2008k/rate_coolness",
            "AmpleBasis/llama-3.2-vision-11B",
            "JoseManuelCarrichi/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Lone7727/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "srgtuszy/Llama-3.2-Playground",
            "Nabeel30/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Arvindan/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "ronnqvist/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "emilalvaro/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "GiuliDev/MMAI",
            "yordyi/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "tigerduff/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "patgpt4/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "plugprint/atendimento",
            "eleasm/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "lobatt/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "jesuswithclinton/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "akhaliq/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Saravanan0N876/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "ignitariumcloud/llama3.2",
            "aliashes144/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "ggallinsghost/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "shelembi/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "asadsikander/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "alenoir/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Seraph19/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "namelessai/llama-chat",
            "jkorstad/Llama-3.2-11B-Vision-Instruct-Chat",
            "alisa54ygf/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "asimas/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "fangchagnjun/llama",
            "ShivamBansal/llama-3.2-webcam",
            "rgbakos/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Antony83/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "mvalssj/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Utkarsh2002/plantWell",
            "8u9i/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "namelessai/llama-demo-chat",
            "Dabococo/WLH-llama-3.2-vision-11B",
            "opmep/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "QueenXuner/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Tanusree88/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "YANGKAI741/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "crystal99/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "jerry650413/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "quintindebruin/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "adriancubanboy/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Cyrillos/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "LPDoctor/llama-3.2-vision-11B",
            "yzbh007/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "xinip/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "dardangjikolli/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Rex2wzh/llama-3.2-vision-11B",
            "srinuksv/Main",
            "jd-bhc-mspa/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "kiddkifli/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "silverlightpro/traffic1",
            "xingboc76/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "vinzcyun/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Ubandiya/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "bkancodes123/meta-llama-Llama-3.2-11B-Vision-Instruct-healthy",
            "bkancodes123/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Dumpl1n/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "tino4xc/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Monkeyheheh/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "HNinou/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "adanrivas/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Taka1998/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Santhosh54321/Nutricious",
            "ychang12/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Santhosh1325/AI_Diet_Planner",
            "Abdelrahman2003/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Shashikiran42/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "emilalvaro/meta-llama-Llama-3.2-11B-Vision-Instruct2",
            "mrtech01xyz/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "EidMohamed/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "snehithaithu/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "gregschleusner/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Ashar086/Band_AI",
            "Josu3A/11B-llm",
            "Ispendedfourm/meta-llama-Llama-3.2-11B-Vision-Instruct",
            "Lonepic/meta-llama-Llama-3.2-11B-Vision-Instruct"
        ],
        "createdAt": "2024-09-18T16:47:28.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 10670220835
            },
            "total": 10670220835
        }
    },
    {
        "_id": "67483b6da9c72aebe14ac347",
        "id": "huihui-ai/QwQ-32B-Preview-abliterated",
        "modelId": "huihui-ai/QwQ-32B-Preview-abliterated",
        "author": "huihui-ai",
        "sha": "c7f862173c151f637f823e9bcd4ccd50e1495315",
        "lastModified": "2024-11-28T19:11:05.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "safetensors",
            "qwen2",
            "text-generation",
            "chat",
            "abliterated",
            "uncensored",
            "conversational",
            "en",
            "base_model:Qwen/QwQ-32B-Preview",
            "base_model:finetune:Qwen/QwQ-32B-Preview",
            "license:apache-2.0",
            "autotrain_compatible",
            "text-generation-inference",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 382,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 39,
        "model-index": null,
        "config": {
            "architectures": [
                "Qwen2ForCausalLM"
            ],
            "model_type": "qwen2",
            "tokenizer_config": {
                "bos_token": null,
                "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are a helpful and harmless assistant. You are Qwen developed by Alibaba. You should think step-by-step.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
                "eos_token": "<|im_end|>",
                "pad_token": "<|endoftext|>",
                "unk_token": null
            }
        },
        "cardData": {
            "license": "apache-2.0",
            "license_link": "https://huggingface.co/huihui-ai/QwQ-32B-Preview-abliterated/blob/main/LICENSE",
            "language": [
                "en"
            ],
            "pipeline_tag": "text-generation",
            "base_model": "Qwen/QwQ-32B-Preview",
            "tags": [
                "chat",
                "abliterated",
                "uncensored"
            ],
            "library_name": "transformers"
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "pipeline_tag": "text-generation",
            "processor": "AutoTokenizer"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "added_tokens.json"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "merges.txt"
            },
            {
                "rfilename": "model-00001-of-00014.safetensors"
            },
            {
                "rfilename": "model-00002-of-00014.safetensors"
            },
            {
                "rfilename": "model-00003-of-00014.safetensors"
            },
            {
                "rfilename": "model-00004-of-00014.safetensors"
            },
            {
                "rfilename": "model-00005-of-00014.safetensors"
            },
            {
                "rfilename": "model-00006-of-00014.safetensors"
            },
            {
                "rfilename": "model-00007-of-00014.safetensors"
            },
            {
                "rfilename": "model-00008-of-00014.safetensors"
            },
            {
                "rfilename": "model-00009-of-00014.safetensors"
            },
            {
                "rfilename": "model-00010-of-00014.safetensors"
            },
            {
                "rfilename": "model-00011-of-00014.safetensors"
            },
            {
                "rfilename": "model-00012-of-00014.safetensors"
            },
            {
                "rfilename": "model-00013-of-00014.safetensors"
            },
            {
                "rfilename": "model-00014-of-00014.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            },
            {
                "rfilename": "vocab.json"
            }
        ],
        "spaces": [],
        "createdAt": "2024-11-28T09:44:13.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 32763876352
            },
            "total": 32763876352
        }
    },
    {
        "_id": "6706e50aca9b1a88fc4e3843",
        "id": "nvidia/Hymba-1.5B-Base",
        "modelId": "nvidia/Hymba-1.5B-Base",
        "author": "nvidia",
        "sha": "6abbf5eed08e3f17fa3a1013bda8c2e3107fcaaf",
        "lastModified": "2024-11-28T17:33:35.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "safetensors",
            "hymba",
            "text-generation",
            "conversational",
            "custom_code",
            "arxiv:2411.13676",
            "license:other",
            "autotrain_compatible",
            "region:us"
        ],
        "downloads": 6478,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 99,
        "model-index": null,
        "config": {
            "architectures": [
                "HymbaForCausalLM"
            ],
            "auto_map": {
                "AutoConfig": "configuration_hymba.HymbaConfig",
                "AutoModelForCausalLM": "modeling_hymba.HymbaForCausalLM"
            },
            "model_type": "hymba",
            "tokenizer_config": {
                "bos_token": "<s>",
                "chat_template": "{{'<extra_id_0>System'}}{% for message in messages %}{% if message['role'] == 'system' %}{{'\n' + message['content'].strip()}}{% if tools or contexts %}{{'\n'}}{% endif %}{% endif %}{% endfor %}{% if tools %}{% for tool in tools %}{{ '\n<tool> ' + tool|tojson + ' </tool>' }}{% endfor %}{% endif %}{% if contexts %}{% if tools %}{{'\n'}}{% endif %}{% for context in contexts %}{{ '\n<context> ' + context.strip() + ' </context>' }}{% endfor %}{% endif %}{{'\n\n'}}{% for message in messages %}{% if message['role'] == 'user' %}{{ '<extra_id_1>User\n' + message['content'].strip() + '\n' }}{% elif message['role'] == 'assistant' %}{{ '<extra_id_1>Assistant\n' + message['content'].strip() + '\n' }}{% elif message['role'] == 'tool' %}{{ '<extra_id_1>Tool\n' + message['content'].strip() + '\n' }}{% endif %}{% endfor %}{%- if add_generation_prompt %}{{'<extra_id_1>Assistant\n'}}{%- endif %}",
                "eos_token": "</s>",
                "pad_token": "[PAD]",
                "unk_token": "<unk>",
                "use_default_system_prompt": false
            }
        },
        "cardData": {
            "library_name": "transformers",
            "license": "other",
            "license_name": "nvidia-open-model-license",
            "license_link": "https://developer.download.nvidia.com/licenses/nvidia-open-model-license-agreement-june-2024.pdf",
            "pipeline_tag": "text-generation"
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "custom_class": "modeling_hymba.HymbaForCausalLM",
            "pipeline_tag": "text-generation"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "added_tokens.json"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "configuration_hymba.py"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "images/macro_arch.png"
            },
            {
                "rfilename": "images/module.png"
            },
            {
                "rfilename": "images/performance1.png"
            },
            {
                "rfilename": "images/performance2.png"
            },
            {
                "rfilename": "model.safetensors"
            },
            {
                "rfilename": "modeling_hymba.py"
            },
            {
                "rfilename": "setup.sh"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer.model"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [
            "zaeemzafar/hymba_chat",
            "AliArshad/BreastCare"
        ],
        "createdAt": "2024-10-09T20:18:18.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 1522797824
            },
            "total": 1522797824
        }
    },
    {
        "_id": "66d099665a5139a40a85b568",
        "id": "nyrahealth/CrisperWhisper",
        "modelId": "nyrahealth/CrisperWhisper",
        "author": "nyrahealth",
        "sha": "dc94e383ebaeb45da851866f372260dd11c9f972",
        "lastModified": "2024-11-23T10:58:13.000Z",
        "private": false,
        "disabled": false,
        "gated": "auto",
        "pipeline_tag": "automatic-speech-recognition",
        "tags": [
            "transformers",
            "safetensors",
            "whisper",
            "automatic-speech-recognition",
            "de",
            "en",
            "arxiv:2408.16589",
            "arxiv:2110.13900",
            "base_model:openai/whisper-large-v3",
            "base_model:finetune:openai/whisper-large-v3",
            "license:cc-by-nc-4.0",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 7841,
        "library_name": "transformers",
        "likes": 170,
        "model-index": null,
        "config": {
            "architectures": [
                "WhisperForConditionalGeneration"
            ],
            "model_type": "whisper",
            "tokenizer_config": {
                "bos_token": "<|endoftext|>",
                "eos_token": "<|endoftext|>",
                "pad_token": "<|endoftext|>",
                "unk_token": "<|endoftext|>"
            }
        },
        "cardData": {
            "license": "cc-by-nc-4.0",
            "language": [
                "de",
                "en"
            ],
            "base_model": "openai/whisper-large-v3",
            "metrics": [
                "cer",
                "wer"
            ],
            "pipeline_tag": "automatic-speech-recognition",
            "library_name": "transformers"
        },
        "transformersInfo": {
            "auto_model": "AutoModelForSpeechSeq2Seq",
            "pipeline_tag": "automatic-speech-recognition",
            "processor": "AutoProcessor"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "added_tokens.json"
            },
            {
                "rfilename": "all_results.json"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "merges.txt"
            },
            {
                "rfilename": "model.safetensors"
            },
            {
                "rfilename": "normalizer.json"
            },
            {
                "rfilename": "preprocessor_config.json"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            },
            {
                "rfilename": "train_results.json"
            },
            {
                "rfilename": "trainer_state.json"
            },
            {
                "rfilename": "training_args.bin"
            },
            {
                "rfilename": "vocab.json"
            }
        ],
        "spaces": [
            "Conexion/nyrahealth-CrisperWhisper",
            "onlinework/nyrahealth-CrisperWhisper",
            "adil9858/nyrahealth-CrisperWhisper",
            "AlDracu/nyrahealth-CrisperWhisper"
        ],
        "createdAt": "2024-08-29T15:53:10.000Z",
        "safetensors": {
            "parameters": {
                "F16": 1609879040
            },
            "total": 1609879040
        }
    },
    {
        "_id": "6723892e4a49116d8ead173e",
        "id": "HuggingFaceTB/SmolLM2-1.7B-Instruct",
        "modelId": "HuggingFaceTB/SmolLM2-1.7B-Instruct",
        "author": "HuggingFaceTB",
        "sha": "b75eb65724719541a7fc358d88743d2c5fba738d",
        "lastModified": "2024-11-26T16:00:38.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "tensorboard",
            "onnx",
            "safetensors",
            "llama",
            "text-generation",
            "transformers.js",
            "conversational",
            "en",
            "base_model:HuggingFaceTB/SmolLM2-1.7B",
            "base_model:quantized:HuggingFaceTB/SmolLM2-1.7B",
            "license:apache-2.0",
            "autotrain_compatible",
            "text-generation-inference",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 92535,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 397,
        "model-index": null,
        "config": {
            "architectures": [
                "LlamaForCausalLM"
            ],
            "model_type": "llama",
            "tokenizer_config": {
                "bos_token": "<|im_start|>",
                "chat_template": "{% for message in messages %}{% if loop.first and messages[0]['role'] != 'system' %}{{ '<|im_start|>system\nYou are a helpful AI assistant named SmolLM, trained by Hugging Face<|im_end|>\n' }}{% endif %}{{'<|im_start|>' + message['role'] + '\n' + message['content'] + '<|im_end|>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant\n' }}{% endif %}",
                "eos_token": "<|im_end|>",
                "pad_token": "<|im_end|>",
                "unk_token": "<|endoftext|>"
            }
        },
        "cardData": {
            "library_name": "transformers",
            "license": "apache-2.0",
            "language": [
                "en"
            ],
            "pipeline_tag": "text-generation",
            "tags": [
                "safetensors",
                "onnx",
                "transformers.js"
            ],
            "base_model": [
                "HuggingFaceTB/SmolLM2-1.7B"
            ]
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "pipeline_tag": "text-generation",
            "processor": "AutoTokenizer"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "all_results.json"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "eval_results.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "instructions_function_calling.md"
            },
            {
                "rfilename": "merges.txt"
            },
            {
                "rfilename": "model.safetensors"
            },
            {
                "rfilename": "onnx/model.onnx"
            },
            {
                "rfilename": "onnx/model.onnx_data"
            },
            {
                "rfilename": "onnx/model_bnb4.onnx"
            },
            {
                "rfilename": "onnx/model_fp16.onnx"
            },
            {
                "rfilename": "onnx/model_fp16.onnx_data"
            },
            {
                "rfilename": "onnx/model_int8.onnx"
            },
            {
                "rfilename": "onnx/model_q4.onnx"
            },
            {
                "rfilename": "onnx/model_q4f16.onnx"
            },
            {
                "rfilename": "onnx/model_quantized.onnx"
            },
            {
                "rfilename": "onnx/model_uint8.onnx"
            },
            {
                "rfilename": "runs/Oct31_06-24-59_ip-26-0-174-36/events.out.tfevents.1730356365.ip-26-0-174-36.3169719.0"
            },
            {
                "rfilename": "runs/Oct31_06-24-59_ip-26-0-174-36/events.out.tfevents.1730363825.ip-26-0-174-36.3169719.1"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            },
            {
                "rfilename": "train_results.json"
            },
            {
                "rfilename": "trainer_state.json"
            },
            {
                "rfilename": "training_args.bin"
            },
            {
                "rfilename": "vocab.json"
            }
        ],
        "spaces": [
            "akhaliq/anychat",
            "logikon/open_cot_leaderboard",
            "Nymbo/SmolLM2-1.7B-Instruct-Serverless",
            "cot-leaderboard/open-cot-dashboard",
            "crystal99/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "Kabilash10/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "ireinisi/arambot",
            "pmolchanov/Hymba-chat",
            "tree3po/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "wang12311/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "DexterSptizu/SmolLM2-1.7B-Instruct",
            "Eightsds/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "Park07/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "Bgiangiordano/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "alyliann/CTP-Wordle-Suggestions",
            "wifix199/Gpt3",
            "willbraun/WordSync",
            "milk639/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "Twistedtre/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "brunoxcruz/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "brunoxcruz/HuggingFaceTB-SmolLM2-1.7B-Instruct2",
            "Jeff28/Rie08",
            "Artificial-superintelligence/SmolLM2-1.7B-Instruct",
            "cibey/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "cibey/Cibey_chatbot",
            "derricka59/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "yichennn/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "freddyaboulton/smollm-voice-code-editor",
            "vuxuanhoan/anychat",
            "AiActivity/AI-Assistant",
            "NAITIVEAIAGENCY/HuggingFaceTB-SmolLM2-1.7B-Instruct",
            "soutrik/gradio_demo"
        ],
        "createdAt": "2024-10-31T13:42:06.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 1711376384
            },
            "total": 1711376384
        }
    },
    {
        "_id": "6540d2d50cb8e9d8e63a1e1f",
        "id": "coqui/XTTS-v2",
        "modelId": "coqui/XTTS-v2",
        "author": "coqui",
        "sha": "6c2b0d75eae4b7047358e3b6bd9325f857d43f77",
        "lastModified": "2023-12-11T17:50:00.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-speech",
        "tags": [
            "coqui",
            "text-to-speech",
            "license:other",
            "region:us"
        ],
        "downloads": 1797518,
        "library_name": "coqui",
        "widgetData": [
            {
                "text": "Once when I was six years old I saw a magnificent picture"
            }
        ],
        "likes": 2026,
        "model-index": null,
        "cardData": {
            "license": "other",
            "license_name": "coqui-public-model-license",
            "license_link": "https://coqui.ai/cpml",
            "library_name": "coqui",
            "pipeline_tag": "text-to-speech",
            "widget": [
                {
                    "text": "Once when I was six years old I saw a magnificent picture"
                }
            ]
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE.txt"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "dvae.pth"
            },
            {
                "rfilename": "hash.md5"
            },
            {
                "rfilename": "mel_stats.pth"
            },
            {
                "rfilename": "model.pth"
            },
            {
                "rfilename": "samples/de_sample.wav"
            },
            {
                "rfilename": "samples/en_sample.wav"
            },
            {
                "rfilename": "samples/es_sample.wav"
            },
            {
                "rfilename": "samples/fr_sample.wav"
            },
            {
                "rfilename": "samples/ja-sample.wav"
            },
            {
                "rfilename": "samples/pt_sample.wav"
            },
            {
                "rfilename": "samples/tr_sample.wav"
            },
            {
                "rfilename": "samples/zh-cn-sample.wav"
            },
            {
                "rfilename": "speakers_xtts.pth"
            },
            {
                "rfilename": "vocab.json"
            }
        ],
        "spaces": [
            "coqui/xtts",
            "tonyassi/voice-clone",
            "coqui/voice-chat-with-mistral",
            "Pendrokar/TTS-Spaces-Arena",
            "Nymbo/XTTS-clone-voice-CPU",
            "kotoba-tech/TTS-Arena-JA",
            "Ascol57/XTTS-clone-voice",
            "mukaist/voice-clone",
            "kerncraze/XTTS_V1_CPU",
            "Artificial-superintelligence/voice-clone",
            "AFischer1985/AI-RAG-Interface-to-Hub",
            "eniolaa/voice-chat-with-llm",
            "taras5500/voice",
            "vbanonyme/vixTTS",
            "awacke1/voice-chat-with-mistral",
            "irmtou/speechtranslationsynthesis",
            "brokerrobin/voice-clone",
            "waynewang1119/XTTS_V1_CPU",
            "doevent/XTTS_CPU",
            "antoniomae/XTTS-CPU-V4-CLONE-VOZ-RAPIDO",
            "lcsouzamenezes/voice-clone",
            "usuario101/XTTS-clone-voice",
            "bacancydataprophets/VoxClone",
            "LuxOAI/ZEN-voice-clone",
            "hyun/voice-clone-by-tonyassi",
            "ahmadsuyadi/voice-clone",
            "NguyenNhatSakura/TSSVoiceAI",
            "Dewiin/voice_clone",
            "muhammadsalmanalfaridzi/voice-eleven",
            "NeuroSenko/xtts",
            "JacobLinCool/xtts-v2",
            "softboy/xtts",
            "MXNXVMadman/space",
            "TDKMBL/ai",
            "Nymbo/xtts",
            "Shamima/test-tts",
            "awqwqwq/xtts",
            "Witsarut/Test-Voice-Mistral",
            "AiKontent/demo-creator",
            "datapimp/xtts",
            "metabyte/Expert-Advice-Mistral",
            "metabyte/toubib",
            "Ethan0927/Clone-tts",
            "AiKontent/audio-creator",
            "Jeremymeme/linguoApp",
            "hirran/xtts",
            "elioonpc/xtts",
            "maximuschan/assistant",
            "AI1Future/xtts",
            "hdegues/xtts",
            "eliezer2022/tts",
            "powerin/xtts",
            "eliezer2022/xtts",
            "ArtsyVRC/xtts",
            "AFischer1985/Advanced-RAG-Demo",
            "AhmedAlmaghz/tts-ml-text-to-speech-and-voice-cloning-model",
            "sdlc/Voice-Cloning",
            "gigibot/voice-chat-with-mistral",
            "kevinwang676/xtts-v2",
            "Nonoxx/voice-chat-with-mistral",
            "NadeemAli/xtts",
            "flofloga/xtts",
            "luluald/french-voice-cloner",
            "pukadev/voice-clone",
            "luluald/voice-clone-fr",
            "luluald/voice-chat-with-mistral",
            "zshmeta/VClone",
            "freddyaboulton/TTS-Arena",
            "antoniomae1234/XTTS-clone-voice-muito-rapido",
            "4LEX-FOUNDER/VoiceClone",
            "Academickingdom/xtts-Kingdom",
            "jamyasir/VoiceClone",
            "Illia56/voice-clone",
            "Illioa/voice-clone",
            "aichampions/voice-clone",
            "piealamodewhitebread/voice-clone",
            "MasterDee/XTTS-clone-voice",
            "sysf/voice-clone",
            "Jofthomas/evBackend",
            "karl48071/voice-chat-with-llm",
            "Masterdqqq/voice-clone",
            "mannone/voice-clone-it",
            "peterpeter8585/voice-clone",
            "CrazyEric/voice_clone",
            "MasterDee/voice-clone",
            "Satyam-Singh/voice-chat-with-mistral",
            "sims2k/Saul-GDPR",
            "vazhaju/voice-chat-with-llm",
            "syedmudassir16/voice-chat-with-llm",
            "Abhinay45/xtts-p",
            "Abhinay45/xtts-proj",
            "ARD9/xtts",
            "Falln87/voice-clone",
            "ArtsyVRC/voice-clone",
            "azils3/evBackend",
            "karankjjaiswal/xtts",
            "antoniomae/XTTS-clone-voice1",
            "Hev832/voice-clone",
            "HeaHea0122/voice-chat-with-llm",
            "naresH112/VOICE"
        ],
        "createdAt": "2023-10-31T10:11:33.000Z"
    },
    {
        "_id": "66f15f396e89e9486fb300ea",
        "id": "openGPT-X/Teuken-7B-instruct-research-v0.4",
        "modelId": "openGPT-X/Teuken-7B-instruct-research-v0.4",
        "author": "openGPT-X",
        "sha": "9ad497cae1c7fdb502fc10b625eccd7007df3a6d",
        "lastModified": "2024-12-01T15:06:28.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "safetensors",
            "llama",
            "text-generation",
            "de",
            "bg",
            "cs",
            "da",
            "el",
            "en",
            "es",
            "et",
            "fi",
            "fr",
            "ga",
            "hr",
            "hu",
            "it",
            "lt",
            "lv",
            "mt",
            "nl",
            "pl",
            "pt",
            "ro",
            "sl",
            "sv",
            "sk",
            "arxiv:2410.08800",
            "arxiv:2309.11998",
            "arxiv:2410.03730",
            "arxiv:2410.08928",
            "base_model:openGPT-X/Teuken-7B-base-v0.4",
            "base_model:finetune:openGPT-X/Teuken-7B-base-v0.4",
            "doi:10.57967/hf/3673",
            "license:other",
            "autotrain_compatible",
            "text-generation-inference",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 3697,
        "library_name": "transformers",
        "likes": 36,
        "model-index": null,
        "config": {
            "architectures": [
                "LlamaForCausalLM"
            ],
            "model_type": "llama",
            "tokenizer_config": {}
        },
        "cardData": {
            "language": [
                "de",
                "bg",
                "cs",
                "da",
                "el",
                "en",
                "es",
                "et",
                "fi",
                "fr",
                "ga",
                "hr",
                "hu",
                "it",
                "lt",
                "lv",
                "mt",
                "nl",
                "pl",
                "pt",
                "ro",
                "sl",
                "sv",
                "sk"
            ],
            "metrics": [
                "accuracy",
                "bleu"
            ],
            "pipeline_tag": "text-generation",
            "library_name": "transformers",
            "base_model": [
                "openGPT-X/Teuken-7B-base-v0.4"
            ],
            "license": "other"
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "pipeline_tag": "text-generation",
            "processor": "AutoTokenizer"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "gptx_tokenizer.py"
            },
            {
                "rfilename": "license.pdf"
            },
            {
                "rfilename": "model-00001-of-00004.safetensors"
            },
            {
                "rfilename": "model-00002-of-00004.safetensors"
            },
            {
                "rfilename": "model-00003-of-00004.safetensors"
            },
            {
                "rfilename": "model-00004-of-00004.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.model"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [
            "Rostbraten/blaba",
            "tawfiqVinton/openGPT-X-Teuken-7B-instruct-research-v0.4"
        ],
        "createdAt": "2024-09-23T12:29:45.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 7452725248
            },
            "total": 7452725248
        }
    },
    {
        "_id": "670543056dc61e9193430c7f",
        "id": "jinaai/jina-clip-v2",
        "modelId": "jinaai/jina-clip-v2",
        "author": "jinaai",
        "sha": "dbc4a34e70cbfaf75c2aaa5d7ebfce85982d5515",
        "lastModified": "2024-11-29T16:06:07.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "feature-extraction",
        "tags": [
            "transformers",
            "pytorch",
            "onnx",
            "safetensors",
            "jina_clip",
            "feature-extraction",
            "xlm-roberta",
            "eva02",
            "clip",
            "sentence-similarity",
            "retrieval",
            "multimodal",
            "multi-modal",
            "crossmodal",
            "cross-modal",
            "mteb",
            "clip-benchmark",
            "vidore",
            "sentence-transformers",
            "transformers.js",
            "custom_code",
            "multilingual",
            "af",
            "am",
            "ar",
            "as",
            "az",
            "be",
            "bg",
            "bn",
            "br",
            "bs",
            "ca",
            "cs",
            "cy",
            "da",
            "de",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "eu",
            "fa",
            "fi",
            "fr",
            "fy",
            "ga",
            "gd",
            "gl",
            "gu",
            "ha",
            "he",
            "hi",
            "hr",
            "hu",
            "hy",
            "id",
            "is",
            "it",
            "ja",
            "jv",
            "ka",
            "kk",
            "km",
            "kn",
            "ko",
            "ku",
            "ky",
            "la",
            "lo",
            "lt",
            "lv",
            "mg",
            "mk",
            "ml",
            "mn",
            "mr",
            "ms",
            "my",
            "ne",
            "nl",
            "no",
            "om",
            "or",
            "pa",
            "pl",
            "ps",
            "pt",
            "ro",
            "ru",
            "sa",
            "sd",
            "si",
            "sk",
            "sl",
            "so",
            "sq",
            "sr",
            "su",
            "sv",
            "sw",
            "ta",
            "te",
            "th",
            "tl",
            "tr",
            "ug",
            "uk",
            "ur",
            "uz",
            "vi",
            "xh",
            "yi",
            "zh",
            "arxiv:2405.20204",
            "license:cc-by-nc-4.0",
            "region:eu"
        ],
        "downloads": 6895,
        "library_name": "transformers",
        "likes": 93,
        "model-index": null,
        "config": {
            "architectures": [
                "JinaCLIPModel"
            ],
            "auto_map": {
                "AutoConfig": "jinaai/jina-clip-implementation--configuration_clip.JinaCLIPConfig",
                "AutoModel": "jinaai/jina-clip-implementation--modeling_clip.JinaCLIPModel"
            },
            "model_type": "jina_clip",
            "tokenizer_config": {
                "bos_token": "<s>",
                "cls_token": "<s>",
                "eos_token": "</s>",
                "mask_token": "<mask>",
                "pad_token": "<pad>",
                "sep_token": "</s>",
                "unk_token": "<unk>"
            }
        },
        "cardData": {
            "library_name": "transformers",
            "license": "cc-by-nc-4.0",
            "tags": [
                "xlm-roberta",
                "eva02",
                "clip",
                "feature-extraction",
                "sentence-similarity",
                "retrieval",
                "multimodal",
                "multi-modal",
                "crossmodal",
                "cross-modal",
                "mteb",
                "clip-benchmark",
                "vidore",
                "transformers",
                "sentence-transformers",
                "onnx",
                "safetensors",
                "transformers.js"
            ],
            "language": [
                "multilingual",
                "af",
                "am",
                "ar",
                "as",
                "az",
                "be",
                "bg",
                "bn",
                "br",
                "bs",
                "ca",
                "cs",
                "cy",
                "da",
                "de",
                "el",
                "en",
                "eo",
                "es",
                "et",
                "eu",
                "fa",
                "fi",
                "fr",
                "fy",
                "ga",
                "gd",
                "gl",
                "gu",
                "ha",
                "he",
                "hi",
                "hr",
                "hu",
                "hy",
                "id",
                "is",
                "it",
                "ja",
                "jv",
                "ka",
                "kk",
                "km",
                "kn",
                "ko",
                "ku",
                "ky",
                "la",
                "lo",
                "lt",
                "lv",
                "mg",
                "mk",
                "ml",
                "mn",
                "mr",
                "ms",
                "my",
                "ne",
                "nl",
                "no",
                "om",
                "or",
                "pa",
                "pl",
                "ps",
                "pt",
                "ro",
                "ru",
                "sa",
                "sd",
                "si",
                "sk",
                "sl",
                "so",
                "sq",
                "sr",
                "su",
                "sv",
                "sw",
                "ta",
                "te",
                "th",
                "tl",
                "tr",
                "ug",
                "uk",
                "ur",
                "uz",
                "vi",
                "xh",
                "yi",
                "zh"
            ],
            "inference": false
        },
        "transformersInfo": {
            "auto_model": "AutoModel",
            "custom_class": "jinaai/jina-clip-implementation--modeling_clip.JinaCLIPModel",
            "pipeline_tag": "feature-extraction"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "config_sentence_transformers.json"
            },
            {
                "rfilename": "custom_st.py"
            },
            {
                "rfilename": "model.safetensors"
            },
            {
                "rfilename": "modules.json"
            },
            {
                "rfilename": "onnx/model.onnx"
            },
            {
                "rfilename": "onnx/model.onnx_data"
            },
            {
                "rfilename": "onnx/model_bnb4.onnx"
            },
            {
                "rfilename": "onnx/model_fp16.onnx"
            },
            {
                "rfilename": "onnx/model_int8.onnx"
            },
            {
                "rfilename": "onnx/model_q4.onnx"
            },
            {
                "rfilename": "onnx/model_q4f16.onnx"
            },
            {
                "rfilename": "onnx/model_quantized.onnx"
            },
            {
                "rfilename": "onnx/model_uint8.onnx"
            },
            {
                "rfilename": "preprocessor_config.json"
            },
            {
                "rfilename": "pytorch_model.bin"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [],
        "createdAt": "2024-10-08T14:34:45.000Z",
        "safetensors": {
            "parameters": {
                "F16": 865278476
            },
            "total": 865278476
        }
    },
    {
        "_id": "670757111771817ab41cd6a5",
        "id": "Yuanshi/OminiControl",
        "modelId": "Yuanshi/OminiControl",
        "author": "Yuanshi",
        "sha": "8f4d31f2ab85a7c90493a9fb85a5fa46db7fc0cc",
        "lastModified": "2024-12-02T09:47:28.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "image-to-image",
        "tags": [
            "image-to-image",
            "arxiv:2411.15098",
            "region:us"
        ],
        "downloads": 0,
        "likes": 42,
        "model-index": null,
        "cardData": {
            "pipeline_tag": "image-to-image"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "experimental/canny.safetensors"
            },
            {
                "rfilename": "experimental/coloring.safetensors"
            },
            {
                "rfilename": "experimental/deblurring.safetensors"
            },
            {
                "rfilename": "experimental/depth.safetensors"
            },
            {
                "rfilename": "experimental/fill.safetensors"
            },
            {
                "rfilename": "experimental/subject.safetensors"
            },
            {
                "rfilename": "omini/subject_1024_beta.safetensors"
            },
            {
                "rfilename": "omini/subject_512.safetensors"
            }
        ],
        "spaces": [
            "Yuanshi/OminiControl",
            "NeurixYUFI/Omini",
            "svjack/OminiControl",
            "cocktailpeanut/OminiControl",
            "Nymbo/OminiControl",
            "lamanweb/OminiControl"
        ],
        "createdAt": "2024-10-10T04:24:49.000Z"
    },
    {
        "_id": "66bc841684c23e82ae316acf",
        "id": "InstantX/FLUX.1-dev-IP-Adapter",
        "modelId": "InstantX/FLUX.1-dev-IP-Adapter",
        "author": "InstantX",
        "sha": "e44c6d889c951cac03ac806991e8d46c9ce1ddba",
        "lastModified": "2024-11-23T06:49:02.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-to-image",
        "tags": [
            "diffusers",
            "Text-to-Image",
            "IP-Adapter",
            "Flux.1-dev",
            "image-generation",
            "Stable Diffusion",
            "text-to-image",
            "en",
            "base_model:black-forest-labs/FLUX.1-dev",
            "base_model:finetune:black-forest-labs/FLUX.1-dev",
            "license:other",
            "region:us"
        ],
        "downloads": 6364,
        "library_name": "diffusers",
        "likes": 171,
        "model-index": null,
        "cardData": {
            "license": "other",
            "license_name": "flux-1-dev-non-commercial-license",
            "license_link": "https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md",
            "language": [
                "en"
            ],
            "library_name": "diffusers",
            "pipeline_tag": "text-to-image",
            "tags": [
                "Text-to-Image",
                "IP-Adapter",
                "Flux.1-dev",
                "image-generation",
                "Stable Diffusion"
            ],
            "base_model": "black-forest-labs/FLUX.1-dev"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "assets/images/0.png"
            },
            {
                "rfilename": "assets/images/1.png"
            },
            {
                "rfilename": "assets/images/2.png"
            },
            {
                "rfilename": "assets/images/3.png"
            },
            {
                "rfilename": "assets/teasers/0.png"
            },
            {
                "rfilename": "assets/teasers/1.png"
            },
            {
                "rfilename": "assets/teasers/10.png"
            },
            {
                "rfilename": "assets/teasers/2.png"
            },
            {
                "rfilename": "assets/teasers/3.png"
            },
            {
                "rfilename": "assets/teasers/4.png"
            },
            {
                "rfilename": "assets/teasers/5.png"
            },
            {
                "rfilename": "assets/teasers/6.png"
            },
            {
                "rfilename": "assets/teasers/7.png"
            },
            {
                "rfilename": "assets/teasers/8.png"
            },
            {
                "rfilename": "assets/teasers/9.png"
            },
            {
                "rfilename": "attention_processor.py"
            },
            {
                "rfilename": "infer_flux_ipa_siglip.py"
            },
            {
                "rfilename": "ip-adapter.bin"
            },
            {
                "rfilename": "pipeline_flux_ipa.py"
            },
            {
                "rfilename": "transformer_flux.py"
            }
        ],
        "spaces": [
            "InstantX/flux-IP-adapter",
            "ktsyr1/InstantX-FLUX.1-dev-IP-Adapter",
            "FradigmaDangerYT/InstantX-FLUX.1-dev-IP-Adapter",
            "NR-imaginations/InstantX-FLUX.1-dev-IP-Adapter",
            "innoai/flux-IP-adapter-ZeroGPU",
            "Nymbo/flux-IP-adapter",
            "SXRAPDEEZL/InstantX-FLUX.1-dev-IP-Adapter",
            "K00B404/flux-IP-adapter",
            "Danzalionline/InstantX-FLUX.1-dev-IP-Adapter"
        ],
        "createdAt": "2024-08-14T10:16:54.000Z"
    },
    {
        "_id": "673cad097e8731fee674861d",
        "id": "Xkev/Llama-3.2V-11B-cot",
        "modelId": "Xkev/Llama-3.2V-11B-cot",
        "author": "Xkev",
        "sha": "7fcc77ba3e94084aaa5b500fc5fd406fa57464ba",
        "lastModified": "2024-11-30T10:17:16.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "image-text-to-text",
        "tags": [
            "transformers",
            "safetensors",
            "mllama",
            "image-text-to-text",
            "conversational",
            "en",
            "arxiv:2411.10440",
            "base_model:meta-llama/Llama-3.2-11B-Vision-Instruct",
            "base_model:finetune:meta-llama/Llama-3.2-11B-Vision-Instruct",
            "license:apache-2.0",
            "text-generation-inference",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 9265,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 107,
        "model-index": null,
        "config": {
            "architectures": [
                "MllamaForConditionalGeneration"
            ],
            "model_type": "mllama",
            "processor_config": {
                "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- if strftime_now is defined %}\n        {%- set date_string = strftime_now(\"%d %b %Y\") %}\n    {%- else %}\n        {%- set date_string = \"26 Jul 2024\" %}\n    {%- endif %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- Find out if there are any images #}\n{% set image_ns = namespace(has_images=false) %}      \n{%- for message in messages %}\n    {%- for content in message['content'] %}\n        {%- if content['type'] == 'image' %}\n            {%- set image_ns.has_images = true %}\n        {%- endif %}\n    {%- endfor %}\n{%- endfor %}\n\n{#- Error out if there are images and system message #}\n{%- if image_ns.has_images and not system_message == \"\" %}\n    {{- raise_exception(\"Prompting with images is incompatible with system messages.\") }}\n{%- endif %}\n\n{#- System message if there are no images #}\n{%- if not image_ns.has_images %}\n    {{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n    {%- if tools is not none %}\n        {{- \"Environment: ipython\\n\" }}\n    {%- endif %}\n    {{- \"Cutting Knowledge Date: December 2023\\n\" }}\n    {{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n    {%- if tools is not none and not tools_in_user_message %}\n        {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n        {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n        {{- \"Do not use variables.\\n\\n\" }}\n        {%- for t in tools %}\n            {{- t | tojson(indent=4) }}\n            {{- \"\\n\\n\" }}\n        {%- endfor %}\n    {%- endif %}\n    {{- system_message }}\n    {{- \"<|eot_id|>\" }}\n{%- endif %}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n    {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n' }}\n        {%- if message['content'] is string %}\n            {{- message['content'] }}\n        {%- else %}\n            {%- for content in message['content'] %}\n                {%- if content['type'] == 'image' %}\n                    {{- '<|image|>' }}\n                {%- elif content['type'] == 'text' %}\n                    {{- content['text'] }}\n                {%- endif %}\n            {%- endfor %}\n        {%- endif %}\n        {{- '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n        {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n        {{- '\"parameters\": ' }}\n        {{- tool_call.arguments | tojson }}\n        {{- \"}\" }}\n        {{- \"<|eot_id|>\" }}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n"
            },
            "tokenizer_config": {
                "bos_token": "<|begin_of_text|>",
                "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- if strftime_now is defined %}\n        {%- set date_string = strftime_now(\"%d %b %Y\") %}\n    {%- else %}\n        {%- set date_string = \"26 Jul 2024\" %}\n    {%- endif %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- Find out if there are any images #}\n{% set image_ns = namespace(has_images=false) %}      \n{%- for message in messages %}\n    {%- for content in message['content'] %}\n        {%- if content['type'] == 'image' %}\n            {%- set image_ns.has_images = true %}\n        {%- endif %}\n    {%- endfor %}\n{%- endfor %}\n\n{#- Error out if there are images and system message #}\n{%- if image_ns.has_images and not system_message == \"\" %}\n    {{- raise_exception(\"Prompting with images is incompatible with system messages.\") }}\n{%- endif %}\n\n{#- System message if there are no images #}\n{%- if not image_ns.has_images %}\n    {{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n    {%- if tools is not none %}\n        {{- \"Environment: ipython\\n\" }}\n    {%- endif %}\n    {{- \"Cutting Knowledge Date: December 2023\\n\" }}\n    {{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n    {%- if tools is not none and not tools_in_user_message %}\n        {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n        {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n        {{- \"Do not use variables.\\n\\n\" }}\n        {%- for t in tools %}\n            {{- t | tojson(indent=4) }}\n            {{- \"\\n\\n\" }}\n        {%- endfor %}\n    {%- endif %}\n    {{- system_message }}\n    {{- \"<|eot_id|>\" }}\n{%- endif %}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n    {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n' }}\n        {%- if message['content'] is string %}\n            {{- message['content'] }}\n        {%- else %}\n            {%- for content in message['content'] %}\n                {%- if content['type'] == 'image' %}\n                    {{- '<|image|>' }}\n                {%- elif content['type'] == 'text' %}\n                    {{- content['text'] }}\n                {%- endif %}\n            {%- endfor %}\n        {%- endif %}\n        {{- '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n        {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n        {{- '\"parameters\": ' }}\n        {{- tool_call.arguments | tojson }}\n        {{- \"}\" }}\n        {{- \"<|eot_id|>\" }}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
                "eos_token": "<|eot_id|>",
                "pad_token": "<|finetune_right_pad_id|>"
            }
        },
        "cardData": {
            "license": "apache-2.0",
            "language": [
                "en"
            ],
            "base_model": [
                "meta-llama/Llama-3.2-11B-Vision-Instruct"
            ],
            "pipeline_tag": "image-text-to-text",
            "library_name": "transformers"
        },
        "transformersInfo": {
            "auto_model": "AutoModelForImageTextToText",
            "pipeline_tag": "image-text-to-text",
            "processor": "AutoProcessor"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "chat_template.json"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "model-00001-of-00009.safetensors"
            },
            {
                "rfilename": "model-00002-of-00009.safetensors"
            },
            {
                "rfilename": "model-00003-of-00009.safetensors"
            },
            {
                "rfilename": "model-00004-of-00009.safetensors"
            },
            {
                "rfilename": "model-00005-of-00009.safetensors"
            },
            {
                "rfilename": "model-00006-of-00009.safetensors"
            },
            {
                "rfilename": "model-00007-of-00009.safetensors"
            },
            {
                "rfilename": "model-00008-of-00009.safetensors"
            },
            {
                "rfilename": "model-00009-of-00009.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "preprocessor_config.json"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [
            "Xkev/Llama-3.2V-11B-cot",
            "tengda89757/Xkev-Llama-3.2V-11B-cot",
            "minhpng/test_python",
            "Bazeem/Llama-3.2V-11B-cot"
        ],
        "createdAt": "2024-11-19T15:21:45.000Z",
        "safetensors": {
            "parameters": {
                "F32": 10670220835
            },
            "total": 10670220835
        }
    },
    {
        "_id": "673ee7be9de17e8f6944ece5",
        "id": "rhymes-ai/Allegro-TI2V",
        "modelId": "rhymes-ai/Allegro-TI2V",
        "author": "rhymes-ai",
        "sha": "eaac4927c4f42eb20cd21d0c2c4e58a8af34cd62",
        "lastModified": "2024-11-26T06:56:38.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "image-to-video",
        "tags": [
            "diffusers",
            "safetensors",
            "image-to-video",
            "en",
            "arxiv:2410.15458",
            "license:apache-2.0",
            "diffusers:AllegroPipeline",
            "region:us"
        ],
        "downloads": 93,
        "library_name": "diffusers",
        "likes": 34,
        "model-index": null,
        "config": {
            "diffusers": {
                "_class_name": "AllegroPipeline"
            }
        },
        "cardData": {
            "license": "apache-2.0",
            "language": [
                "en"
            ],
            "pipeline_tag": "image-to-video",
            "library_name": "diffusers"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "assets/TI2V_gallery.gif"
            },
            {
                "rfilename": "assets/TI2Vbanner.gif"
            },
            {
                "rfilename": "assets/banner.gif"
            },
            {
                "rfilename": "model_index.json"
            },
            {
                "rfilename": "scheduler/scheduler_config.json"
            },
            {
                "rfilename": "text_encoder/config.json"
            },
            {
                "rfilename": "text_encoder/model-00001-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder/model-00002-of-00002.safetensors"
            },
            {
                "rfilename": "text_encoder/model.safetensors.index.json"
            },
            {
                "rfilename": "tokenizer/added_tokens.json"
            },
            {
                "rfilename": "tokenizer/special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer/spiece.model"
            },
            {
                "rfilename": "tokenizer/tokenizer_config.json"
            },
            {
                "rfilename": "transformer/config.json"
            },
            {
                "rfilename": "transformer/diffusion_pytorch_model.safetensors"
            },
            {
                "rfilename": "vae/config.json"
            },
            {
                "rfilename": "vae/diffusion_pytorch_model.safetensors"
            }
        ],
        "spaces": [],
        "createdAt": "2024-11-21T07:56:46.000Z"
    },
    {
        "_id": "66eaef786865fea1324edb5d",
        "id": "meta-llama/Llama-3.2-3B-Instruct",
        "modelId": "meta-llama/Llama-3.2-3B-Instruct",
        "author": "meta-llama",
        "sha": "0cb88a4f764b7a12671c53f0838cd831a0843b95",
        "lastModified": "2024-10-24T15:07:29.000Z",
        "private": false,
        "disabled": false,
        "gated": "manual",
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "safetensors",
            "llama",
            "text-generation",
            "facebook",
            "meta",
            "pytorch",
            "llama-3",
            "conversational",
            "en",
            "de",
            "fr",
            "it",
            "pt",
            "hi",
            "es",
            "th",
            "arxiv:2204.05149",
            "arxiv:2405.16406",
            "license:llama3.2",
            "autotrain_compatible",
            "text-generation-inference",
            "endpoints_compatible",
            "region:us"
        ],
        "downloads": 1443248,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 706,
        "model-index": null,
        "config": {
            "architectures": [
                "LlamaForCausalLM"
            ],
            "model_type": "llama",
            "tokenizer_config": {
                "bos_token": "<|begin_of_text|>",
                "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- if strftime_now is defined %}\n        {%- set date_string = strftime_now(\"%d %b %Y\") %}\n    {%- else %}\n        {%- set date_string = \"26 Jul 2024\" %}\n    {%- endif %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n        {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n        {{- '\"parameters\": ' }}\n        {{- tool_call.arguments | tojson }}\n        {{- \"}\" }}\n        {{- \"<|eot_id|>\" }}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
                "eos_token": "<|eot_id|>"
            }
        },
        "cardData": {
            "language": [
                "en",
                "de",
                "fr",
                "it",
                "pt",
                "hi",
                "es",
                "th"
            ],
            "library_name": "transformers",
            "pipeline_tag": "text-generation",
            "tags": [
                "facebook",
                "meta",
                "pytorch",
                "llama",
                "llama-3"
            ],
            "license": "llama3.2",
            "extra_gated_prompt": "### LLAMA 3.2 COMMUNITY LICENSE AGREEMENT\n\nLlama 3.2 Version Release Date: September 25, 2024\n\n“Agreement” means the terms and conditions for use, reproduction, distribution  and modification of the Llama Materials set forth herein.\n\n“Documentation” means the specifications, manuals and documentation accompanying Llama 3.2 distributed by Meta at https://llama.meta.com/doc/overview.\n\n“Licensee” or “you” means you, or your employer or any other person or entity (if you are  entering into this Agreement on such person or entity’s behalf), of the age required under applicable laws, rules or regulations to provide legal consent and that has legal authority to bind your employer or such other person or entity if you are entering in this Agreement on their behalf.\n\n“Llama 3.2” means the foundational large language models and software and algorithms, including machine-learning model code, trained model weights, inference-enabling code, training-enabling code, fine-tuning enabling code and other elements of the foregoing distributed by Meta at  https://www.llama.com/llama-downloads.\n\n“Llama Materials” means, collectively, Meta’s proprietary Llama 3.2 and Documentation (and  any portion thereof) made available under this Agreement.\n\n“Meta” or “we” means Meta Platforms Ireland Limited (if you are located in or,  if you are an entity, your principal place of business is in the EEA or Switzerland)  and Meta Platforms, Inc. (if you are located outside of the EEA or Switzerland). \n\nBy clicking “I Accept” below or by using or distributing any portion or element of the Llama Materials, you agree to be bound by this Agreement.\n\n1. License Rights and Redistribution.\na. Grant of Rights. You are granted a non-exclusive, worldwide,  non-transferable and royalty-free limited license under Meta’s intellectual property or other rights  owned by Meta embodied in the Llama Materials to use, reproduce, distribute, copy, create derivative works  of, and make modifications to the Llama Materials.  \nb. Redistribution and Use.  \ni. If you distribute or make available the Llama Materials (or any derivative works thereof),  or a product or service (including another AI model) that contains any of them, you shall (A) provide a copy of this Agreement with any such Llama Materials; and (B) prominently display “Built with Llama” on a related website, user interface, blogpost, about page, or product documentation. If you use the Llama Materials or any outputs or results of the Llama Materials to create, train, fine tune, or otherwise improve an AI model, which is distributed or made available, you shall also include “Llama” at the beginning of any such AI model name.\nii. If you receive Llama Materials, or any derivative works thereof, from a Licensee as part of an integrated end user product, then Section 2 of this Agreement will not apply to you. \niii. You must retain in all copies of the Llama Materials that you distribute the  following attribution notice within a “Notice” text file distributed as a part of such copies:  “Llama 3.2 is licensed under the Llama 3.2 Community License, Copyright © Meta Platforms, Inc. All Rights Reserved.”\niv. Your use of the Llama Materials must comply with applicable laws and regulations (including trade compliance laws and regulations) and adhere to the Acceptable Use Policy for the Llama Materials (available at https://www.llama.com/llama3_2/use-policy), which is hereby  incorporated by reference into this Agreement.\n  \n2. Additional Commercial Terms. If, on the Llama 3.2 version release date, the monthly active users of the products or services made available by or for Licensee, or Licensee’s affiliates,  is greater than 700 million monthly active users in the preceding calendar month, you must request  a license from Meta, which Meta may grant to you in its sole discretion, and you are not authorized to exercise any of the rights under this Agreement unless or until Meta otherwise expressly grants you such rights.\n3. Disclaimer of Warranty. UNLESS REQUIRED BY APPLICABLE LAW, THE LLAMA MATERIALS AND ANY OUTPUT AND  RESULTS THEREFROM ARE PROVIDED ON AN “AS IS” BASIS, WITHOUT WARRANTIES OF ANY KIND, AND META DISCLAIMS ALL WARRANTIES OF ANY KIND, BOTH EXPRESS AND IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE. YOU ARE SOLELY RESPONSIBLE FOR DETERMINING THE APPROPRIATENESS OF USING OR REDISTRIBUTING THE LLAMA MATERIALS AND ASSUME ANY RISKS ASSOCIATED WITH YOUR USE OF THE LLAMA MATERIALS AND ANY OUTPUT AND RESULTS.\n4. Limitation of Liability. IN NO EVENT WILL META OR ITS AFFILIATES BE LIABLE UNDER ANY THEORY OF LIABILITY,  WHETHER IN CONTRACT, TORT, NEGLIGENCE, PRODUCTS LIABILITY, OR OTHERWISE, ARISING OUT OF THIS AGREEMENT,  FOR ANY LOST PROFITS OR ANY INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR PUNITIVE DAMAGES, EVEN  IF META OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF ANY OF THE FOREGOING.\n5. Intellectual Property.\na. No trademark licenses are granted under this Agreement, and in connection with the Llama Materials,  neither Meta nor Licensee may use any name or mark owned by or associated with the other or any of its affiliates,  except as required for reasonable and customary use in describing and redistributing the Llama Materials or as  set forth in this Section 5(a). Meta hereby grants you a license to use “Llama” (the “Mark”) solely as required  to comply with the last sentence of Section 1.b.i. You will comply with Meta’s brand guidelines (currently accessible  at https://about.meta.com/brand/resources/meta/company-brand/). All goodwill arising out of your use of the Mark  will inure to the benefit of Meta.\nb. Subject to Meta’s ownership of Llama Materials and derivatives made by or for Meta, with respect to any derivative works and modifications of the Llama Materials that are made by you, as between you and Meta, you are and will be the owner of such derivative works and modifications.\nc. If you institute litigation or other proceedings against Meta or any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Llama Materials or Llama 3.2 outputs or results, or any portion of any of the foregoing, constitutes infringement of intellectual property or other rights owned or licensable by you, then any licenses granted to you under this Agreement shall terminate as of the date such litigation or claim is filed or instituted. You will indemnify and hold harmless Meta from and against any claim by any third party arising out of or related to your use or distribution of the Llama Materials.\n6. Term and Termination. The term of this Agreement will commence upon your acceptance of this Agreement or access to the Llama Materials and will continue in full force and effect until terminated in accordance with the terms and conditions herein. Meta may terminate this Agreement if you are in breach of any term or condition of this Agreement. Upon termination of this Agreement, you shall delete and cease use of the Llama Materials. Sections 3, 4 and 7 shall survive the termination of this Agreement. \n7. Governing Law and Jurisdiction. This Agreement will be governed and construed under the laws of the State of  California without regard to choice of law principles, and the UN Convention on Contracts for the International Sale of Goods does not apply to this Agreement. The courts of California shall have exclusive jurisdiction of any dispute arising out of this Agreement. \n### Llama 3.2 Acceptable Use Policy\nMeta is committed to promoting safe and fair use of its tools and features, including Llama 3.2.  If you access or use Llama 3.2, you agree to this Acceptable Use Policy (“**Policy**”).  The most recent copy of this policy can be found at [https://www.llama.com/llama3_2/use-policy](https://www.llama.com/llama3_2/use-policy).\n#### Prohibited Uses\nWe want everyone to use Llama 3.2 safely and responsibly. You agree you will not use, or allow others to use, Llama 3.2 to:\n1. Violate the law or others’ rights, including to:\n    1. Engage in, promote, generate, contribute to, encourage, plan, incite, or further illegal or unlawful activity or content, such as:\n        1. Violence or terrorism\n        2. Exploitation or harm to children, including the solicitation, creation, acquisition, or dissemination of child exploitative content or failure to report Child Sexual Abuse Material\n        3. Human trafficking, exploitation, and sexual violence\n        4. The illegal distribution of information or materials to minors, including obscene materials, or failure to employ legally required age-gating in connection with such information or materials.\n        5. Sexual solicitation\n        6. Any other criminal activity\n    1. Engage in, promote, incite, or facilitate the harassment, abuse, threatening, or bullying of individuals or groups of individuals\n    2. Engage in, promote, incite, or facilitate discrimination or other unlawful or harmful conduct in the provision of employment, employment benefits, credit, housing, other economic benefits, or other essential goods and services\n    3. Engage in the unauthorized or unlicensed practice of any profession including, but not limited to, financial, legal, medical/health, or related professional practices\n    4. Collect, process, disclose, generate, or infer private or sensitive information about individuals, including information about individuals’ identity, health, or demographic information, unless you have obtained the right to do so in accordance with applicable law\n    5. Engage in or facilitate any action or generate any content that infringes, misappropriates, or otherwise violates any third-party rights, including the outputs or results of any products or services using the Llama Materials\n    6. Create, generate, or facilitate the creation of malicious code, malware, computer viruses or do anything else that could disable, overburden, interfere with or impair the proper working, integrity, operation or appearance of a website or computer system\n    7. Engage in any action, or facilitate any action, to intentionally circumvent or remove usage restrictions or other safety measures, or to enable functionality disabled by Meta \n2. Engage in, promote, incite, facilitate, or assist in the planning or development of activities that present a risk of death or bodily harm to individuals, including use of Llama 3.2 related to the following:\n    8. Military, warfare, nuclear industries or applications, espionage, use for materials or activities that are subject to the International Traffic Arms Regulations (ITAR) maintained by the United States Department of State or to the U.S. Biological Weapons Anti-Terrorism Act of 1989 or the Chemical Weapons Convention Implementation Act of 1997\n    9. Guns and illegal weapons (including weapon development)\n    10. Illegal drugs and regulated/controlled substances\n    11. Operation of critical infrastructure, transportation technologies, or heavy machinery\n    12. Self-harm or harm to others, including suicide, cutting, and eating disorders\n    13. Any content intended to incite or promote violence, abuse, or any infliction of bodily harm to an individual\n3. Intentionally deceive or mislead others, including use of Llama 3.2 related to the following:\n    14. Generating, promoting, or furthering fraud or the creation or promotion of disinformation\n    15. Generating, promoting, or furthering defamatory content, including the creation of defamatory statements, images, or other content\n    16. Generating, promoting, or further distributing spam\n    17. Impersonating another individual without consent, authorization, or legal right\n    18. Representing that the use of Llama 3.2 or outputs are human-generated\n    19. Generating or facilitating false online engagement, including fake reviews and other means of fake online engagement \n4. Fail to appropriately disclose to end users any known dangers of your AI system 5. Interact with third party tools, models, or software designed to generate unlawful content or engage in unlawful or harmful conduct and/or represent that the outputs of such tools, models, or software are associated with Meta or Llama 3.2\n\nWith respect to any multimodal models included in Llama 3.2, the rights granted under Section 1(a) of the Llama 3.2 Community License Agreement are not being granted to you if you are an individual domiciled in, or a company with a principal place of business in, the European Union. This restriction does not apply to end users of a product or service that incorporates any such multimodal models.\n\nPlease report any violation of this Policy, software “bug,” or other problems that could lead to a violation of this Policy through one of the following means:\n\n* Reporting issues with the model: [https://github.com/meta-llama/llama-models/issues](https://l.workplace.com/l.php?u=https%3A%2F%2Fgithub.com%2Fmeta-llama%2Fllama-models%2Fissues&h=AT0qV8W9BFT6NwihiOHRuKYQM_UnkzN_NmHMy91OT55gkLpgi4kQupHUl0ssR4dQsIQ8n3tfd0vtkobvsEvt1l4Ic6GXI2EeuHV8N08OG2WnbAmm0FL4ObkazC6G_256vN0lN9DsykCvCqGZ)\n* Reporting risky content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)\n* Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)\n* Reporting violations of the Acceptable Use Policy or unlicensed uses of Llama 3.2: LlamaUseReport@meta.com",
            "extra_gated_fields": {
                "First Name": "text",
                "Last Name": "text",
                "Date of birth": "date_picker",
                "Country": "country",
                "Affiliation": "text",
                "Job title": {
                    "type": "select",
                    "options": [
                        "Student",
                        "Research Graduate",
                        "AI researcher",
                        "AI developer/engineer",
                        "Reporter",
                        "Other"
                    ]
                },
                "geo": "ip_location",
                "By clicking Submit below I accept the terms of the license and acknowledge that the information I provide will be collected stored processed and shared in accordance with the Meta Privacy Policy": "checkbox"
            },
            "extra_gated_description": "The information you provide will be collected, stored, processed and shared in accordance with the [Meta Privacy Policy](https://www.facebook.com/privacy/policy/).",
            "extra_gated_button_content": "Submit"
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "pipeline_tag": "text-generation",
            "processor": "AutoTokenizer"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "LICENSE.txt"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "USE_POLICY.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "model-00001-of-00002.safetensors"
            },
            {
                "rfilename": "model-00002-of-00002.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "original/consolidated.00.pth"
            },
            {
                "rfilename": "original/orig_params.json"
            },
            {
                "rfilename": "original/params.json"
            },
            {
                "rfilename": "original/tokenizer.model"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [
            "akhaliq/anychat",
            "baconnier/prompt-plus-plus",
            "huggingface-projects/llama-3.2-3B-Instruct",
            "chuanli11/Chat-Llama-3.2-3B-Instruct-uncensored",
            "logikon/open_cot_leaderboard",
            "Claudz163/Image-To-Character-Text",
            "ysharma/Llama3-2_with_Gradio-5",
            "codelion/optillm",
            "yanolja/arena",
            "eltorio/Llama-3.2-3B-appreciation",
            "cot-leaderboard/open-cot-dashboard",
            "duckdb-nsql-hub/DuckDB-SQL-Eval",
            "NiansuhAI/Main",
            "Judicaeld17/Doctor_Assistant_and_Medical_Image_Analyst",
            "yasserrmd/FocusFlow",
            "Riswan-Nopiyar/Chat-Bot-Indonesia-Nopiyar.my.id",
            "eidoc/HMA",
            "wendellast/GUI",
            "lightmate/llm-chatbot",
            "Deep0306/Talk-With-Death",
            "xMBx/meta-llama-Llama-3.2-3B-Instruct",
            "ireinisi/arambot",
            "bhuvanmdev/QA_document",
            "aakshkr10/meta-llama-Llama-3.2-3B-Instruct",
            "Hashim-dotcom/new-space",
            "khushwant04/meta-llama-Llama-3.2-3B-Instruct",
            "IronOne-AI-Labs/Annual_Report_Summarization_Demo",
            "MariameOuamer/specification_generator_api",
            "sanjeevbora/eCore-RAG-PDF-CHATBOT",
            "Nymbo/Llama-3.2-3B-Instruct",
            "saq1b/llama-3.2-3B-Instruct",
            "Jikkata/space_for_the_llm",
            "JiakaiDu/RAG_Test",
            "topas1/llama3.2b",
            "C0uchP0tat0/meta-llama-Llama-3.2-3B-Instruct",
            "hoduyquocbao/LLAMA3.2-GRop",
            "rven7/meta-llama-Llama-3.2-3B-Instruct",
            "Fadil369/llama-3.2-3B-Instruct",
            "giustinod/llama-3.2-3B-Instruct",
            "DevYousef/meta-llama-Llama-3.2-3B-Instruct",
            "bnwb/bestie",
            "MOwais276/meta-llama-Llama-3.2-3B-Instruct",
            "Deepri24/Photography_Learning_Assistant_1",
            "irishg/GoodWriter",
            "wilwoap/meta-llama-Llama-3.2-3B-Instruct",
            "Mikhil-jivus/EndpointTesting",
            "dntrplytch/llama-3.2-3B-Instruct",
            "hibays/llama-3.2-3B-Instruct",
            "Squadrongrit/llama-3.2-3B-Instruct",
            "Nikhil951108/talktome",
            "DingoBeast/DilemmaAI",
            "Arieff22/llama-3.2-3B-Instruct",
            "kazelnut/llama-3.2-3B-Instruct",
            "crystal99/meta-llama-Llama-3.2-3B-Instruct",
            "wilwoap/meta-llama-Llama-3.2-3B-Instruct_Docker",
            "divinemonk/llamapi",
            "wagnew3/llama-3.2-3B-Instruct",
            "EonUrsis/meta-llama-Llama-3.2-3B-Instruct",
            "H4xor/meta-llama-Llama-3.2-3B-Instruct",
            "xinip/meta-llama-Llama-3.2-3B-Instruct",
            "xinip/meta-llama-Llama-3.1-70B-Instruct",
            "srinuksv/Main",
            "sanjeevbora/eCoreAI_Rag_llama_3.1_3b",
            "sanjeevbora/eCoreAI_Rag",
            "asterixix/culture-ai",
            "Wedyan2023/test",
            "K00B404/SnelleJelle",
            "Naufthy/Chatbot-try",
            "Judicaeld17/meta-llama-Llama-3.2-3B-Instruct",
            "Judicaeld17/test",
            "youzarsif/Doctor_llama",
            "Madhuri123/s1",
            "klepz/better-than-chatgpt",
            "eternalBlissard/Qwen2.5",
            "Anand2580/meta-llama-Llama-3.2-3B-Instruct",
            "JaphetHernandez/PotentialTalents_2",
            "HuggyGuyJo01/meta-llama-Llama-3.2-3B-Instruct",
            "wang16888/backend1",
            "shazimov/multi_personality_llama",
            "liscodev/meta-llama-Llama-3.2-3B-Instruct",
            "liscodev/TEST",
            "kdevoe/Llama-3.2-Instruct",
            "warless/RAG_application",
            "groloch/PromptEnhancingPlayground",
            "bbsc/hackohelper",
            "lkkli/arrie",
            "Arrcttacsrks/Llama-3.2-3B_Chat",
            "danielhonorato/DandanGPT",
            "tamphuc0503/sds-extractor",
            "samyaic/meta-llama-Llama-3.2-3B-Instruct",
            "silasyl/silas_portfolio",
            "felipeserafim001/llama",
            "Nikita22121671/meta-llama-Llama-3.2-3B-Instruct",
            "ygongBU/XXiao",
            "yehtutmaung/Story_and_Music_Generator_from_Image",
            "wang16888/RAG-chatbot",
            "mdowling/meta-llama-Llama-3.2-3B-Instruct",
            "vcoliveira/meta-llama-Llama-3.2-3B-Instruct",
            "kengui/working-rabbits",
            "abhisheksan/meta-llama-Llama-3.2-3B-Instruct"
        ],
        "createdAt": "2024-09-18T15:19:20.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 3212749824
            },
            "total": 3212749824
        }
    },
    {
        "_id": "6709e0d9bb2498474f4e8ee2",
        "id": "nvidia/Llama-3.1-Nemotron-70B-Instruct-HF",
        "modelId": "nvidia/Llama-3.1-Nemotron-70B-Instruct-HF",
        "author": "nvidia",
        "sha": "fac73d3507320ec1258620423469b4b38f88df6e",
        "lastModified": "2024-10-25T04:12:17.000Z",
        "private": false,
        "disabled": false,
        "gated": false,
        "pipeline_tag": "text-generation",
        "tags": [
            "transformers",
            "safetensors",
            "llama",
            "text-generation",
            "nvidia",
            "llama3.1",
            "conversational",
            "en",
            "dataset:nvidia/HelpSteer2",
            "arxiv:2410.01257",
            "arxiv:2405.01481",
            "arxiv:2406.08673",
            "base_model:meta-llama/Llama-3.1-70B-Instruct",
            "base_model:finetune:meta-llama/Llama-3.1-70B-Instruct",
            "license:llama3.1",
            "autotrain_compatible",
            "text-generation-inference",
            "region:us"
        ],
        "downloads": 178754,
        "library_name": "transformers",
        "widgetData": [
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hey my name is Thomas! How are you?"
            },
            {
                "text": "Hey my name is Mariama! How are you?"
            },
            {
                "text": "Hey my name is Clara! How are you?"
            },
            {
                "text": "Hey my name is Julien! How are you?"
            },
            {
                "text": "Hi."
            }
        ],
        "likes": 1749,
        "model-index": null,
        "config": {
            "architectures": [
                "LlamaForCausalLM"
            ],
            "model_type": "llama",
            "tokenizer_config": {
                "bos_token": "<|begin_of_text|>",
                "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if builtin_tools is defined or tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\\n\\n\"}}\n{%- endif %}\n\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
                "eos_token": "<|eot_id|>"
            }
        },
        "cardData": {
            "license": "llama3.1",
            "language": [
                "en"
            ],
            "inference": false,
            "fine-tuning": false,
            "tags": [
                "nvidia",
                "llama3.1"
            ],
            "datasets": [
                "nvidia/HelpSteer2"
            ],
            "base_model": "meta-llama/Llama-3.1-70B-Instruct",
            "pipeline_tag": "text-generation",
            "library_name": "transformers"
        },
        "transformersInfo": {
            "auto_model": "AutoModelForCausalLM",
            "pipeline_tag": "text-generation",
            "processor": "AutoTokenizer"
        },
        "siblings": [
            {
                "rfilename": ".gitattributes"
            },
            {
                "rfilename": "README.md"
            },
            {
                "rfilename": "config.json"
            },
            {
                "rfilename": "generation_config.json"
            },
            {
                "rfilename": "model-00001-of-00030.safetensors"
            },
            {
                "rfilename": "model-00002-of-00030.safetensors"
            },
            {
                "rfilename": "model-00003-of-00030.safetensors"
            },
            {
                "rfilename": "model-00004-of-00030.safetensors"
            },
            {
                "rfilename": "model-00005-of-00030.safetensors"
            },
            {
                "rfilename": "model-00006-of-00030.safetensors"
            },
            {
                "rfilename": "model-00007-of-00030.safetensors"
            },
            {
                "rfilename": "model-00008-of-00030.safetensors"
            },
            {
                "rfilename": "model-00009-of-00030.safetensors"
            },
            {
                "rfilename": "model-00010-of-00030.safetensors"
            },
            {
                "rfilename": "model-00011-of-00030.safetensors"
            },
            {
                "rfilename": "model-00012-of-00030.safetensors"
            },
            {
                "rfilename": "model-00013-of-00030.safetensors"
            },
            {
                "rfilename": "model-00014-of-00030.safetensors"
            },
            {
                "rfilename": "model-00015-of-00030.safetensors"
            },
            {
                "rfilename": "model-00016-of-00030.safetensors"
            },
            {
                "rfilename": "model-00017-of-00030.safetensors"
            },
            {
                "rfilename": "model-00018-of-00030.safetensors"
            },
            {
                "rfilename": "model-00019-of-00030.safetensors"
            },
            {
                "rfilename": "model-00020-of-00030.safetensors"
            },
            {
                "rfilename": "model-00021-of-00030.safetensors"
            },
            {
                "rfilename": "model-00022-of-00030.safetensors"
            },
            {
                "rfilename": "model-00023-of-00030.safetensors"
            },
            {
                "rfilename": "model-00024-of-00030.safetensors"
            },
            {
                "rfilename": "model-00025-of-00030.safetensors"
            },
            {
                "rfilename": "model-00026-of-00030.safetensors"
            },
            {
                "rfilename": "model-00027-of-00030.safetensors"
            },
            {
                "rfilename": "model-00028-of-00030.safetensors"
            },
            {
                "rfilename": "model-00029-of-00030.safetensors"
            },
            {
                "rfilename": "model-00030-of-00030.safetensors"
            },
            {
                "rfilename": "model.safetensors.index.json"
            },
            {
                "rfilename": "special_tokens_map.json"
            },
            {
                "rfilename": "tokenizer.json"
            },
            {
                "rfilename": "tokenizer_config.json"
            }
        ],
        "spaces": [
            "akhaliq/anychat",
            "featherless-ai/try-this-model",
            "logikon/open_cot_leaderboard",
            "flowers-team/StickToYourRoleLeaderboard",
            "cot-leaderboard/open-cot-dashboard",
            "bhkkhjgkk/nvidia-llama-fastapi",
            "SC999/NV_Nemotron",
            "mekdouglas/jhonyvet",
            "seawolf2357/nvidia-llama-fastapi",
            "Dorn4449/llama",
            "Soldierp/myspace",
            "Nithish310/nvidia-llama-fastapi",
            "aifeifei798/feifei-chat",
            "tonyember/nemotron-test",
            "JaphetHernandez/Prueba_4",
            "Utaelayan/sdadads",
            "ManojINaik/Raoadmapai-fastapi",
            "Jeanh/Jeanh",
            "jhansi1/LLaMa",
            "jhansi1/candian",
            "jhansi1/train",
            "jhansi1/google-bert-bert-base-cased",
            "rayandiniz/elo",
            "JensReind/IR-Test",
            "rahul7star/nvids",
            "roshikhan301/merve-trained-flux-lora-lego",
            "dawood/anychat",
            "roshikhan301/nemo",
            "vuxuanhoan/anychat",
            "AiActivity/AI-Assistant",
            "JackHoltone/try-this-model",
            "canserai/gg"
        ],
        "createdAt": "2024-10-12T02:37:13.000Z",
        "safetensors": {
            "parameters": {
                "BF16": 70553706496
            },
            "total": 70553706496
        }
    }
]